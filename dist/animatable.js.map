{"version":3,"file":"animatable.js","sources":["../node_modules/lodash.isnumber/index.js","../node_modules/lodash.isplainobject/index.js","../node_modules/lodash.isstring/index.js","../node_modules/css-tree-animatable/lib/common/List.js","../node_modules/css-tree-animatable/lib/utils/createCustomError.js","../node_modules/css-tree-animatable/lib/common/SyntaxError.js","../node_modules/css-tree-animatable/lib/tokenizer/const.js","../node_modules/css-tree-animatable/lib/tokenizer/char-code-definitions.js","../node_modules/css-tree-animatable/lib/tokenizer/utils.js","../node_modules/css-tree-animatable/lib/common/TokenStream.js","../node_modules/css-tree-animatable/lib/definition-syntax/generate.js","../node_modules/css-tree-animatable/lib/lexer/error.js","../node_modules/css-tree-animatable/lib/utils/names.js","../node_modules/css-tree-animatable/lib/common/adopt-buffer.js","../node_modules/css-tree-animatable/lib/tokenizer/index.js","../node_modules/css-tree-animatable/lib/lexer/generic-an-plus-b.js","../node_modules/css-tree-animatable/lib/lexer/generic-urange.js","../node_modules/css-tree-animatable/lib/lexer/generic.js","../node_modules/css-tree-animatable/lib/definition-syntax/SyntaxError.js","../node_modules/css-tree-animatable/lib/definition-syntax/tokenizer.js","../node_modules/css-tree-animatable/lib/definition-syntax/parse.js","../node_modules/css-tree-animatable/lib/definition-syntax/walk.js","../node_modules/css-tree-animatable/lib/lexer/prepare-tokens.js","../node_modules/css-tree-animatable/lib/lexer/match-graph.js","../node_modules/css-tree-animatable/lib/lexer/match.js","../node_modules/css-tree-animatable/lib/lexer/trace.js","../node_modules/css-tree-animatable/lib/lexer/search.js","../node_modules/css-tree-animatable/lib/lexer/structure.js","../node_modules/css-tree-animatable/lib/lexer/Lexer.js","../node_modules/css-tree-animatable/lib/definition-syntax/index.js","../node_modules/css-tree-animatable/lib/common/OffsetToLocation.js","../node_modules/css-tree-animatable/lib/parser/sequence.js","../node_modules/css-tree-animatable/lib/parser/create.js","../node_modules/css-tree-animatable/lib/generator/create.js","../node_modules/css-tree-animatable/lib/walker/create.js","../node_modules/css-tree-animatable/lib/utils/clone.js","../node_modules/css-tree-animatable/lib/syntax/config/mix.js","../node_modules/css-tree-animatable/lib/syntax/create.js","../node_modules/css-tree-animatable/lib/convertor/create.js","../node_modules/css-tree-animatable/data/index.js","../node_modules/css-tree-animatable/lib/syntax/node/AnPlusB.js","../node_modules/css-tree-animatable/lib/syntax/node/Raw.js","../node_modules/css-tree-animatable/lib/syntax/node/Atrule.js","../node_modules/css-tree-animatable/lib/syntax/node/AtrulePrelude.js","../node_modules/css-tree-animatable/lib/syntax/node/AttributeSelector.js","../node_modules/css-tree-animatable/lib/syntax/node/Block.js","../node_modules/css-tree-animatable/lib/syntax/node/Brackets.js","../node_modules/css-tree-animatable/lib/syntax/node/CDC.js","../node_modules/css-tree-animatable/lib/syntax/node/CDO.js","../node_modules/css-tree-animatable/lib/syntax/node/ClassSelector.js","../node_modules/css-tree-animatable/lib/syntax/node/Combinator.js","../node_modules/css-tree-animatable/lib/syntax/node/Comment.js","../node_modules/css-tree-animatable/lib/syntax/node/Declaration.js","../node_modules/css-tree-animatable/lib/syntax/node/DeclarationList.js","../node_modules/css-tree-animatable/lib/syntax/node/Dimension.js","../node_modules/css-tree-animatable/lib/syntax/node/Function.js","../node_modules/css-tree-animatable/lib/syntax/node/HexColor.js","../node_modules/css-tree-animatable/lib/syntax/node/Identifier.js","../node_modules/css-tree-animatable/lib/syntax/node/IdSelector.js","../node_modules/css-tree-animatable/lib/syntax/node/MediaFeature.js","../node_modules/css-tree-animatable/lib/syntax/node/MediaQuery.js","../node_modules/css-tree-animatable/lib/syntax/node/MediaQueryList.js","../node_modules/css-tree-animatable/lib/syntax/node/Number.js","../node_modules/css-tree-animatable/lib/syntax/node/Operator.js","../node_modules/css-tree-animatable/lib/syntax/node/Parentheses.js","../node_modules/css-tree-animatable/lib/syntax/node/Percentage.js","../node_modules/css-tree-animatable/lib/syntax/node/PseudoClassSelector.js","../node_modules/css-tree-animatable/lib/syntax/node/PseudoElementSelector.js","../node_modules/css-tree-animatable/lib/syntax/node/Ratio.js","../node_modules/css-tree-animatable/lib/syntax/node/Rule.js","../node_modules/css-tree-animatable/lib/syntax/node/SelectorList.js","../node_modules/css-tree-animatable/lib/syntax/node/String.js","../node_modules/css-tree-animatable/lib/syntax/node/StyleSheet.js","../node_modules/css-tree-animatable/lib/syntax/node/TypeSelector.js","../node_modules/css-tree-animatable/lib/syntax/node/UnicodeRange.js","../node_modules/css-tree-animatable/lib/syntax/node/Url.js","../node_modules/css-tree-animatable/lib/syntax/node/WhiteSpace.js","../node_modules/css-tree-animatable/lib/syntax/node/index.js","../node_modules/css-tree-animatable/lib/syntax/node/Nth.js","../node_modules/css-tree-animatable/lib/syntax/node/Selector.js","../node_modules/css-tree-animatable/lib/syntax/node/Value.js","../node_modules/css-tree-animatable/lib/syntax/config/lexer.js","../node_modules/css-tree-animatable/lib/syntax/scope/default.js","../node_modules/css-tree-animatable/lib/syntax/scope/atrulePrelude.js","../node_modules/css-tree-animatable/lib/syntax/scope/selector.js","../node_modules/css-tree-animatable/lib/syntax/function/element.js","../node_modules/css-tree-animatable/lib/syntax/function/var.js","../node_modules/css-tree-animatable/lib/syntax/scope/index.js","../node_modules/css-tree-animatable/lib/syntax/scope/value.js","../node_modules/css-tree-animatable/lib/syntax/function/expression.js","../node_modules/css-tree-animatable/lib/syntax/atrule/import.js","../node_modules/css-tree-animatable/lib/syntax/atrule/supports.js","../node_modules/css-tree-animatable/lib/syntax/pseudo/common/selectorList.js","../node_modules/css-tree-animatable/lib/syntax/pseudo/common/nthWithOfClause.js","../node_modules/css-tree-animatable/lib/syntax/pseudo/common/nth.js","../node_modules/css-tree-animatable/lib/syntax/index.js","../node_modules/css-tree-animatable/lib/syntax/config/parser.js","../node_modules/css-tree-animatable/lib/syntax/atrule/index.js","../node_modules/css-tree-animatable/lib/syntax/atrule/font-face.js","../node_modules/css-tree-animatable/lib/syntax/atrule/media.js","../node_modules/css-tree-animatable/lib/syntax/atrule/page.js","../node_modules/css-tree-animatable/lib/syntax/pseudo/index.js","../node_modules/css-tree-animatable/lib/syntax/pseudo/dir.js","../node_modules/css-tree-animatable/lib/syntax/pseudo/has.js","../node_modules/css-tree-animatable/lib/syntax/pseudo/lang.js","../node_modules/css-tree-animatable/lib/syntax/pseudo/matches.js","../node_modules/css-tree-animatable/lib/syntax/pseudo/not.js","../node_modules/css-tree-animatable/lib/syntax/pseudo/nth-child.js","../node_modules/css-tree-animatable/lib/syntax/pseudo/nth-last-child.js","../node_modules/css-tree-animatable/lib/syntax/pseudo/nth-last-of-type.js","../node_modules/css-tree-animatable/lib/syntax/pseudo/nth-of-type.js","../node_modules/css-tree-animatable/lib/syntax/pseudo/slotted.js","../node_modules/css-tree-animatable/lib/syntax/config/walker.js","../src/functions.js","../src/arrays.js","../src/index.js"],"sourcesContent":["/**\n * lodash 3.0.3 (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright 2012-2016 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2016 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/** `Object#toString` result references. */\nvar numberTag = '[object Number]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Number` primitive or object.\n *\n * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are classified\n * as numbers, use the `_.isFinite` method.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isNumber(3);\n * // => true\n *\n * _.isNumber(Number.MIN_VALUE);\n * // => true\n *\n * _.isNumber(Infinity);\n * // => true\n *\n * _.isNumber('3');\n * // => false\n */\nfunction isNumber(value) {\n  return typeof value == 'number' ||\n    (isObjectLike(value) && objectToString.call(value) == numberTag);\n}\n\nmodule.exports = isNumber;\n","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** `Object#toString` result references. */\nvar objectTag = '[object Object]';\n\n/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  var result = false;\n  if (value != null && typeof value.toString != 'function') {\n    try {\n      result = !!(value + '');\n    } catch (e) {}\n  }\n  return result;\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar getPrototype = overArg(Object.getPrototypeOf, Object);\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!isObjectLike(value) ||\n      objectToString.call(value) != objectTag || isHostObject(value)) {\n    return false;\n  }\n  var proto = getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return (typeof Ctor == 'function' &&\n    Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString);\n}\n\nmodule.exports = isPlainObject;\n","/**\n * lodash 4.0.1 (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright 2012-2016 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2016 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/** `Object#toString` result references. */\nvar stringTag = '[object String]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @type Function\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `String` primitive or object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isString('abc');\n * // => true\n *\n * _.isString(1);\n * // => false\n */\nfunction isString(value) {\n  return typeof value == 'string' ||\n    (!isArray(value) && isObjectLike(value) && objectToString.call(value) == stringTag);\n}\n\nmodule.exports = isString;\n","//\r\n//                              list\r\n//                            ┌──────┐\r\n//             ┌──────────────┼─head │\r\n//             │              │ tail─┼──────────────┐\r\n//             │              └──────┘              │\r\n//             ▼                                    ▼\r\n//            item        item        item        item\r\n//          ┌──────┐    ┌──────┐    ┌──────┐    ┌──────┐\r\n//  null ◀──┼─prev │◀───┼─prev │◀───┼─prev │◀───┼─prev │\r\n//          │ next─┼───▶│ next─┼───▶│ next─┼───▶│ next─┼──▶ null\r\n//          ├──────┤    ├──────┤    ├──────┤    ├──────┤\r\n//          │ data │    │ data │    │ data │    │ data │\r\n//          └──────┘    └──────┘    └──────┘    └──────┘\r\n//\r\n\r\nfunction createItem(data) {\r\n    return {\r\n        prev: null,\r\n        next: null,\r\n        data: data\r\n    };\r\n}\r\n\r\nfunction allocateCursor(node, prev, next) {\r\n    var cursor;\r\n\r\n    if (cursors !== null) {\r\n        cursor = cursors;\r\n        cursors = cursors.cursor;\r\n        cursor.prev = prev;\r\n        cursor.next = next;\r\n        cursor.cursor = node.cursor;\r\n    } else {\r\n        cursor = {\r\n            prev: prev,\r\n            next: next,\r\n            cursor: node.cursor\r\n        };\r\n    }\r\n\r\n    node.cursor = cursor;\r\n\r\n    return cursor;\r\n}\r\n\r\nfunction releaseCursor(node) {\r\n    var cursor = node.cursor;\r\n\r\n    node.cursor = cursor.cursor;\r\n    cursor.prev = null;\r\n    cursor.next = null;\r\n    cursor.cursor = cursors;\r\n    cursors = cursor;\r\n}\r\n\r\nvar cursors = null;\r\nvar List = function() {\r\n    this.cursor = null;\r\n    this.head = null;\r\n    this.tail = null;\r\n};\r\n\r\nList.createItem = createItem;\r\nList.prototype.createItem = createItem;\r\n\r\nList.prototype.updateCursors = function(prevOld, prevNew, nextOld, nextNew) {\r\n    var cursor = this.cursor;\r\n\r\n    while (cursor !== null) {\r\n        if (cursor.prev === prevOld) {\r\n            cursor.prev = prevNew;\r\n        }\r\n\r\n        if (cursor.next === nextOld) {\r\n            cursor.next = nextNew;\r\n        }\r\n\r\n        cursor = cursor.cursor;\r\n    }\r\n};\r\n\r\nList.prototype.getSize = function() {\r\n    var size = 0;\r\n    var cursor = this.head;\r\n\r\n    while (cursor) {\r\n        size++;\r\n        cursor = cursor.next;\r\n    }\r\n\r\n    return size;\r\n};\r\n\r\nList.prototype.fromArray = function(array) {\r\n    var cursor = null;\r\n\r\n    this.head = null;\r\n\r\n    for (var i = 0; i < array.length; i++) {\r\n        var item = createItem(array[i]);\r\n\r\n        if (cursor !== null) {\r\n            cursor.next = item;\r\n        } else {\r\n            this.head = item;\r\n        }\r\n\r\n        item.prev = cursor;\r\n        cursor = item;\r\n    }\r\n\r\n    this.tail = cursor;\r\n\r\n    return this;\r\n};\r\n\r\nList.prototype.toArray = function() {\r\n    var cursor = this.head;\r\n    var result = [];\r\n\r\n    while (cursor) {\r\n        result.push(cursor.data);\r\n        cursor = cursor.next;\r\n    }\r\n\r\n    return result;\r\n};\r\n\r\nList.prototype.toJSON = List.prototype.toArray;\r\n\r\nList.prototype.isEmpty = function() {\r\n    return this.head === null;\r\n};\r\n\r\nList.prototype.first = function() {\r\n    return this.head && this.head.data;\r\n};\r\n\r\nList.prototype.last = function() {\r\n    return this.tail && this.tail.data;\r\n};\r\n\r\nList.prototype.each = function(fn, context) {\r\n    var item;\r\n\r\n    if (context === undefined) {\r\n        context = this;\r\n    }\r\n\r\n    // push cursor\r\n    var cursor = allocateCursor(this, null, this.head);\r\n\r\n    while (cursor.next !== null) {\r\n        item = cursor.next;\r\n        cursor.next = item.next;\r\n\r\n        fn.call(context, item.data, item, this);\r\n    }\r\n\r\n    // pop cursor\r\n    releaseCursor(this);\r\n};\r\n\r\nList.prototype.forEach = List.prototype.each;\r\n\r\nList.prototype.eachRight = function(fn, context) {\r\n    var item;\r\n\r\n    if (context === undefined) {\r\n        context = this;\r\n    }\r\n\r\n    // push cursor\r\n    var cursor = allocateCursor(this, this.tail, null);\r\n\r\n    while (cursor.prev !== null) {\r\n        item = cursor.prev;\r\n        cursor.prev = item.prev;\r\n\r\n        fn.call(context, item.data, item, this);\r\n    }\r\n\r\n    // pop cursor\r\n    releaseCursor(this);\r\n};\r\n\r\nList.prototype.forEachRight = List.prototype.eachRight;\r\n\r\nList.prototype.nextUntil = function(start, fn, context) {\r\n    if (start === null) {\r\n        return;\r\n    }\r\n\r\n    var item;\r\n\r\n    if (context === undefined) {\r\n        context = this;\r\n    }\r\n\r\n    // push cursor\r\n    var cursor = allocateCursor(this, null, start);\r\n\r\n    while (cursor.next !== null) {\r\n        item = cursor.next;\r\n        cursor.next = item.next;\r\n\r\n        if (fn.call(context, item.data, item, this)) {\r\n            break;\r\n        }\r\n    }\r\n\r\n    // pop cursor\r\n    releaseCursor(this);\r\n};\r\n\r\nList.prototype.prevUntil = function(start, fn, context) {\r\n    if (start === null) {\r\n        return;\r\n    }\r\n\r\n    var item;\r\n\r\n    if (context === undefined) {\r\n        context = this;\r\n    }\r\n\r\n    // push cursor\r\n    var cursor = allocateCursor(this, start, null);\r\n\r\n    while (cursor.prev !== null) {\r\n        item = cursor.prev;\r\n        cursor.prev = item.prev;\r\n\r\n        if (fn.call(context, item.data, item, this)) {\r\n            break;\r\n        }\r\n    }\r\n\r\n    // pop cursor\r\n    releaseCursor(this);\r\n};\r\n\r\nList.prototype.some = function(fn, context) {\r\n    var cursor = this.head;\r\n\r\n    if (context === undefined) {\r\n        context = this;\r\n    }\r\n\r\n    while (cursor !== null) {\r\n        if (fn.call(context, cursor.data, cursor, this)) {\r\n            return true;\r\n        }\r\n\r\n        cursor = cursor.next;\r\n    }\r\n\r\n    return false;\r\n};\r\n\r\nList.prototype.map = function(fn, context) {\r\n    var result = new List();\r\n    var cursor = this.head;\r\n\r\n    if (context === undefined) {\r\n        context = this;\r\n    }\r\n\r\n    while (cursor !== null) {\r\n        result.appendData(fn.call(context, cursor.data, cursor, this));\r\n        cursor = cursor.next;\r\n    }\r\n\r\n    return result;\r\n};\r\n\r\nList.prototype.filter = function(fn, context) {\r\n    var result = new List();\r\n    var cursor = this.head;\r\n\r\n    if (context === undefined) {\r\n        context = this;\r\n    }\r\n\r\n    while (cursor !== null) {\r\n        if (fn.call(context, cursor.data, cursor, this)) {\r\n            result.appendData(cursor.data);\r\n        }\r\n        cursor = cursor.next;\r\n    }\r\n\r\n    return result;\r\n};\r\n\r\nList.prototype.clear = function() {\r\n    this.head = null;\r\n    this.tail = null;\r\n};\r\n\r\nList.prototype.copy = function() {\r\n    var result = new List();\r\n    var cursor = this.head;\r\n\r\n    while (cursor !== null) {\r\n        result.insert(createItem(cursor.data));\r\n        cursor = cursor.next;\r\n    }\r\n\r\n    return result;\r\n};\r\n\r\nList.prototype.prepend = function(item) {\r\n    //      head\r\n    //    ^\r\n    // item\r\n    this.updateCursors(null, item, this.head, item);\r\n\r\n    // insert to the beginning of the list\r\n    if (this.head !== null) {\r\n        // new item <- first item\r\n        this.head.prev = item;\r\n\r\n        // new item -> first item\r\n        item.next = this.head;\r\n    } else {\r\n        // if list has no head, then it also has no tail\r\n        // in this case tail points to the new item\r\n        this.tail = item;\r\n    }\r\n\r\n    // head always points to new item\r\n    this.head = item;\r\n\r\n    return this;\r\n};\r\n\r\nList.prototype.prependData = function(data) {\r\n    return this.prepend(createItem(data));\r\n};\r\n\r\nList.prototype.append = function(item) {\r\n    return this.insert(item);\r\n};\r\n\r\nList.prototype.appendData = function(data) {\r\n    return this.insert(createItem(data));\r\n};\r\n\r\nList.prototype.insert = function(item, before) {\r\n    if (before !== undefined && before !== null) {\r\n        // prev   before\r\n        //      ^\r\n        //     item\r\n        this.updateCursors(before.prev, item, before, item);\r\n\r\n        if (before.prev === null) {\r\n            // insert to the beginning of list\r\n            if (this.head !== before) {\r\n                throw new Error('before doesn\\'t belong to list');\r\n            }\r\n\r\n            // since head points to before therefore list doesn't empty\r\n            // no need to check tail\r\n            this.head = item;\r\n            before.prev = item;\r\n            item.next = before;\r\n\r\n            this.updateCursors(null, item);\r\n        } else {\r\n\r\n            // insert between two items\r\n            before.prev.next = item;\r\n            item.prev = before.prev;\r\n\r\n            before.prev = item;\r\n            item.next = before;\r\n        }\r\n    } else {\r\n        // tail\r\n        //      ^\r\n        //      item\r\n        this.updateCursors(this.tail, item, null, item);\r\n\r\n        // insert to the ending of the list\r\n        if (this.tail !== null) {\r\n            // last item -> new item\r\n            this.tail.next = item;\r\n\r\n            // last item <- new item\r\n            item.prev = this.tail;\r\n        } else {\r\n            // if list has no tail, then it also has no head\r\n            // in this case head points to new item\r\n            this.head = item;\r\n        }\r\n\r\n        // tail always points to new item\r\n        this.tail = item;\r\n    }\r\n\r\n    return this;\r\n};\r\n\r\nList.prototype.insertData = function(data, before) {\r\n    return this.insert(createItem(data), before);\r\n};\r\n\r\nList.prototype.remove = function(item) {\r\n    //      item\r\n    //       ^\r\n    // prev     next\r\n    this.updateCursors(item, item.prev, item, item.next);\r\n\r\n    if (item.prev !== null) {\r\n        item.prev.next = item.next;\r\n    } else {\r\n        if (this.head !== item) {\r\n            throw new Error('item doesn\\'t belong to list');\r\n        }\r\n\r\n        this.head = item.next;\r\n    }\r\n\r\n    if (item.next !== null) {\r\n        item.next.prev = item.prev;\r\n    } else {\r\n        if (this.tail !== item) {\r\n            throw new Error('item doesn\\'t belong to list');\r\n        }\r\n\r\n        this.tail = item.prev;\r\n    }\r\n\r\n    item.prev = null;\r\n    item.next = null;\r\n\r\n    return item;\r\n};\r\n\r\nList.prototype.push = function(data) {\r\n    this.insert(createItem(data));\r\n};\r\n\r\nList.prototype.pop = function() {\r\n    if (this.tail !== null) {\r\n        return this.remove(this.tail);\r\n    }\r\n};\r\n\r\nList.prototype.unshift = function(data) {\r\n    this.prepend(createItem(data));\r\n};\r\n\r\nList.prototype.shift = function() {\r\n    if (this.head !== null) {\r\n        return this.remove(this.head);\r\n    }\r\n};\r\n\r\nList.prototype.prependList = function(list) {\r\n    return this.insertList(list, this.head);\r\n};\r\n\r\nList.prototype.appendList = function(list) {\r\n    return this.insertList(list);\r\n};\r\n\r\nList.prototype.insertList = function(list, before) {\r\n    // ignore empty lists\r\n    if (list.head === null) {\r\n        return this;\r\n    }\r\n\r\n    if (before !== undefined && before !== null) {\r\n        this.updateCursors(before.prev, list.tail, before, list.head);\r\n\r\n        // insert in the middle of dist list\r\n        if (before.prev !== null) {\r\n            // before.prev <-> list.head\r\n            before.prev.next = list.head;\r\n            list.head.prev = before.prev;\r\n        } else {\r\n            this.head = list.head;\r\n        }\r\n\r\n        before.prev = list.tail;\r\n        list.tail.next = before;\r\n    } else {\r\n        this.updateCursors(this.tail, list.tail, null, list.head);\r\n\r\n        // insert to end of the list\r\n        if (this.tail !== null) {\r\n            // if destination list has a tail, then it also has a head,\r\n            // but head doesn't change\r\n\r\n            // dest tail -> source head\r\n            this.tail.next = list.head;\r\n\r\n            // dest tail <- source head\r\n            list.head.prev = this.tail;\r\n        } else {\r\n            // if list has no a tail, then it also has no a head\r\n            // in this case points head to new item\r\n            this.head = list.head;\r\n        }\r\n\r\n        // tail always start point to new item\r\n        this.tail = list.tail;\r\n    }\r\n\r\n    list.head = null;\r\n    list.tail = null;\r\n\r\n    return this;\r\n};\r\n\r\nList.prototype.replace = function(oldItem, newItemOrList) {\r\n    if ('head' in newItemOrList) {\r\n        this.insertList(newItemOrList, oldItem);\r\n    } else {\r\n        this.insert(newItemOrList, oldItem);\r\n    }\r\n\r\n    this.remove(oldItem);\r\n};\r\n\r\nmodule.exports = List;\r\n","module.exports = function createCustomError(name, message) {\r\n    // use Object.create(), because some VMs prevent setting line/column otherwise\r\n    // (iOS Safari 10 even throws an exception)\r\n    var error = Object.create(SyntaxError.prototype);\r\n    var errorStack = new Error();\r\n\r\n    error.name = name;\r\n    error.message = message;\r\n\r\n    Object.defineProperty(error, 'stack', {\r\n        get: function() {\r\n            return (errorStack.stack || '').replace(/^(.+\\n){1,3}/, name + ': ' + message + '\\n');\r\n        }\r\n    });\r\n\r\n    return error;\r\n};\r\n","var createCustomError = require('../utils/createCustomError');\r\nvar MAX_LINE_LENGTH = 100;\r\nvar OFFSET_CORRECTION = 60;\r\nvar TAB_REPLACEMENT = '    ';\r\n\r\nfunction sourceFragment(error, extraLines) {\r\n    function processLines(start, end) {\r\n        return lines.slice(start, end).map(function(line, idx) {\r\n            var num = String(start + idx + 1);\r\n\r\n            while (num.length < maxNumLength) {\r\n                num = ' ' + num;\r\n            }\r\n\r\n            return num + ' |' + line;\r\n        }).join('\\n');\r\n    }\r\n\r\n    var lines = error.source.split(/\\r\\n?|\\n|\\f/);\r\n    var line = error.line;\r\n    var column = error.column;\r\n    var startLine = Math.max(1, line - extraLines) - 1;\r\n    var endLine = Math.min(line + extraLines, lines.length + 1);\r\n    var maxNumLength = Math.max(4, String(endLine).length) + 1;\r\n    var cutLeft = 0;\r\n\r\n    // column correction according to replaced tab before column\r\n    column += (TAB_REPLACEMENT.length - 1) * (lines[line - 1].substr(0, column - 1).match(/\\t/g) || []).length;\r\n\r\n    if (column > MAX_LINE_LENGTH) {\r\n        cutLeft = column - OFFSET_CORRECTION + 3;\r\n        column = OFFSET_CORRECTION - 2;\r\n    }\r\n\r\n    for (var i = startLine; i <= endLine; i++) {\r\n        if (i >= 0 && i < lines.length) {\r\n            lines[i] = lines[i].replace(/\\t/g, TAB_REPLACEMENT);\r\n            lines[i] =\r\n                (cutLeft > 0 && lines[i].length > cutLeft ? '\\u2026' : '') +\r\n                lines[i].substr(cutLeft, MAX_LINE_LENGTH - 2) +\r\n                (lines[i].length > cutLeft + MAX_LINE_LENGTH - 1 ? '\\u2026' : '');\r\n        }\r\n    }\r\n\r\n    return [\r\n        processLines(startLine, line),\r\n        new Array(column + maxNumLength + 2).join('-') + '^',\r\n        processLines(line, endLine)\r\n    ].filter(Boolean).join('\\n');\r\n}\r\n\r\nvar SyntaxError = function(message, source, offset, line, column) {\r\n    var error = createCustomError('SyntaxError', message);\r\n\r\n    error.source = source;\r\n    error.offset = offset;\r\n    error.line = line;\r\n    error.column = column;\r\n\r\n    error.sourceFragment = function(extraLines) {\r\n        return sourceFragment(error, isNaN(extraLines) ? 0 : extraLines);\r\n    };\r\n    Object.defineProperty(error, 'formattedMessage', {\r\n        get: function() {\r\n            return (\r\n                'Parse error: ' + error.message + '\\n' +\r\n                sourceFragment(error, 2)\r\n            );\r\n        }\r\n    });\r\n\r\n    // for backward capability\r\n    error.parseError = {\r\n        offset: offset,\r\n        line: line,\r\n        column: column\r\n    };\r\n\r\n    return error;\r\n};\r\n\r\nmodule.exports = SyntaxError;\r\n","// CSS Syntax Module Level 3\r\n// https://www.w3.org/TR/css-syntax-3/\r\nvar TYPE = {\r\n    EOF: 0,                 // <EOF-token>\r\n    Ident: 1,               // <ident-token>\r\n    Function: 2,            // <function-token>\r\n    AtKeyword: 3,           // <at-keyword-token>\r\n    Hash: 4,                // <hash-token>\r\n    String: 5,              // <string-token>\r\n    BadString: 6,           // <bad-string-token>\r\n    Url: 7,                 // <url-token>\r\n    BadUrl: 8,              // <bad-url-token>\r\n    Delim: 9,               // <delim-token>\r\n    Number: 10,             // <number-token>\r\n    Percentage: 11,         // <percentage-token>\r\n    Dimension: 12,          // <dimension-token>\r\n    WhiteSpace: 13,         // <whitespace-token>\r\n    CDO: 14,                // <CDO-token>\r\n    CDC: 15,                // <CDC-token>\r\n    Colon: 16,              // <colon-token>     :\r\n    Semicolon: 17,          // <semicolon-token> ;\r\n    Comma: 18,              // <comma-token>     ,\r\n    LeftSquareBracket: 19,  // <[-token>\r\n    RightSquareBracket: 20, // <]-token>\r\n    LeftParenthesis: 21,    // <(-token>\r\n    RightParenthesis: 22,   // <)-token>\r\n    LeftCurlyBracket: 23,   // <{-token>\r\n    RightCurlyBracket: 24,  // <}-token>\r\n    Comment: 25\r\n};\r\n\r\nvar NAME = Object.keys(TYPE).reduce(function(result, key) {\r\n    result[TYPE[key]] = key;\r\n    return result;\r\n}, {});\r\n\r\nmodule.exports = {\r\n    TYPE: TYPE,\r\n    NAME: NAME\r\n};\r\n","var EOF = 0;\r\n\r\n// https://drafts.csswg.org/css-syntax-3/\r\n// § 4.2. Definitions\r\n\r\n// digit\r\n// A code point between U+0030 DIGIT ZERO (0) and U+0039 DIGIT NINE (9).\r\nfunction isDigit(code) {\r\n    return code >= 0x0030 && code <= 0x0039;\r\n}\r\n\r\n// hex digit\r\n// A digit, or a code point between U+0041 LATIN CAPITAL LETTER A (A) and U+0046 LATIN CAPITAL LETTER F (F),\r\n// or a code point between U+0061 LATIN SMALL LETTER A (a) and U+0066 LATIN SMALL LETTER F (f).\r\nfunction isHexDigit(code) {\r\n    return (\r\n        isDigit(code) || // 0 .. 9\r\n        (code >= 0x0041 && code <= 0x0046) || // A .. F\r\n        (code >= 0x0061 && code <= 0x0066)    // a .. f\r\n    );\r\n}\r\n\r\n// uppercase letter\r\n// A code point between U+0041 LATIN CAPITAL LETTER A (A) and U+005A LATIN CAPITAL LETTER Z (Z).\r\nfunction isUppercaseLetter(code) {\r\n    return code >= 0x0041 && code <= 0x005A;\r\n}\r\n\r\n// lowercase letter\r\n// A code point between U+0061 LATIN SMALL LETTER A (a) and U+007A LATIN SMALL LETTER Z (z).\r\nfunction isLowercaseLetter(code) {\r\n    return code >= 0x0061 && code <= 0x007A;\r\n}\r\n\r\n// letter\r\n// An uppercase letter or a lowercase letter.\r\nfunction isLetter(code) {\r\n    return isUppercaseLetter(code) || isLowercaseLetter(code);\r\n}\r\n\r\n// non-ASCII code point\r\n// A code point with a value equal to or greater than U+0080 <control>.\r\nfunction isNonAscii(code) {\r\n    return code >= 0x0080;\r\n}\r\n\r\n// name-start code point\r\n// A letter, a non-ASCII code point, or U+005F LOW LINE (_).\r\nfunction isNameStart(code) {\r\n    return isLetter(code) || isNonAscii(code) || code === 0x005F;\r\n}\r\n\r\n// name code point\r\n// A name-start code point, a digit, or U+002D HYPHEN-MINUS (-).\r\nfunction isName(code) {\r\n    return isNameStart(code) || isDigit(code) || code === 0x002D;\r\n}\r\n\r\n// non-printable code point\r\n// A code point between U+0000 NULL and U+0008 BACKSPACE, or U+000B LINE TABULATION,\r\n// or a code point between U+000E SHIFT OUT and U+001F INFORMATION SEPARATOR ONE, or U+007F DELETE.\r\nfunction isNonPrintable(code) {\r\n    return (\r\n        (code >= 0x0000 && code <= 0x0008) ||\r\n        (code === 0x000B) ||\r\n        (code >= 0x000E && code <= 0x001F) ||\r\n        (code === 0x007F)\r\n    );\r\n}\r\n\r\n// newline\r\n// U+000A LINE FEED. Note that U+000D CARRIAGE RETURN and U+000C FORM FEED are not included in this definition,\r\n// as they are converted to U+000A LINE FEED during preprocessing.\r\n// TODO: we doesn't do a preprocessing, so check a code point for U+000D CARRIAGE RETURN and U+000C FORM FEED\r\nfunction isNewline(code) {\r\n    return code === 0x000A || code === 0x000D || code === 0x000C;\r\n}\r\n\r\n// whitespace\r\n// A newline, U+0009 CHARACTER TABULATION, or U+0020 SPACE.\r\nfunction isWhiteSpace(code) {\r\n    return isNewline(code) || code === 0x0020 || code === 0x0009;\r\n}\r\n\r\n// § 4.3.8. Check if two code points are a valid escape\r\nfunction isValidEscape(first, second) {\r\n    // If the first code point is not U+005C REVERSE SOLIDUS (\\), return false.\r\n    if (first !== 0x005C) {\r\n        return false;\r\n    }\r\n\r\n    // Otherwise, if the second code point is a newline or EOF, return false.\r\n    if (isNewline(second) || second === EOF) {\r\n        return false;\r\n    }\r\n\r\n    // Otherwise, return true.\r\n    return true;\r\n}\r\n\r\n// § 4.3.9. Check if three code points would start an identifier\r\nfunction isIdentifierStart(first, second, third) {\r\n    // Look at the first code point:\r\n\r\n    // U+002D HYPHEN-MINUS\r\n    if (first === 0x002D) {\r\n        // If the second code point is a name-start code point or a U+002D HYPHEN-MINUS,\r\n        // or the second and third code points are a valid escape, return true. Otherwise, return false.\r\n        return (\r\n            isNameStart(second) ||\r\n            second === 0x002D ||\r\n            isValidEscape(second, third)\r\n        );\r\n    }\r\n\r\n    // name-start code point\r\n    if (isNameStart(first)) {\r\n        // Return true.\r\n        return true;\r\n    }\r\n\r\n    // U+005C REVERSE SOLIDUS (\\)\r\n    if (first === 0x005C) {\r\n        // If the first and second code points are a valid escape, return true. Otherwise, return false.\r\n        return isValidEscape(first, second);\r\n    }\r\n\r\n    // anything else\r\n    // Return false.\r\n    return false;\r\n}\r\n\r\n// § 4.3.10. Check if three code points would start a number\r\nfunction isNumberStart(first, second, third) {\r\n    // Look at the first code point:\r\n\r\n    // U+002B PLUS SIGN (+)\r\n    // U+002D HYPHEN-MINUS (-)\r\n    if (first === 0x002B || first === 0x002D) {\r\n        // If the second code point is a digit, return true.\r\n        if (isDigit(second)) {\r\n            return 2;\r\n        }\r\n\r\n        // Otherwise, if the second code point is a U+002E FULL STOP (.)\r\n        // and the third code point is a digit, return true.\r\n        // Otherwise, return false.\r\n        return second === 0x002E && isDigit(third) ? 3 : 0;\r\n    }\r\n\r\n    // U+002E FULL STOP (.)\r\n    if (first === 0x002E) {\r\n        // If the second code point is a digit, return true. Otherwise, return false.\r\n        return isDigit(second) ? 2 : 0;\r\n    }\r\n\r\n    // digit\r\n    if (isDigit(first)) {\r\n        // Return true.\r\n        return 1;\r\n    }\r\n\r\n    // anything else\r\n    // Return false.\r\n    return 0;\r\n}\r\n\r\n//\r\n// Misc\r\n//\r\n\r\n// detect BOM (https://en.wikipedia.org/wiki/Byte_order_mark)\r\nfunction isBOM(code) {\r\n    // UTF-16BE\r\n    if (code === 0xFEFF) {\r\n        return 1;\r\n    }\r\n\r\n    // UTF-16LE\r\n    if (code === 0xFFFE) {\r\n        return 1;\r\n    }\r\n\r\n    return 0;\r\n}\r\n\r\n// Fast code category\r\n//\r\n// https://drafts.csswg.org/css-syntax/#tokenizer-definitions\r\n// > non-ASCII code point\r\n// >   A code point with a value equal to or greater than U+0080 <control>\r\n// > name-start code point\r\n// >   A letter, a non-ASCII code point, or U+005F LOW LINE (_).\r\n// > name code point\r\n// >   A name-start code point, a digit, or U+002D HYPHEN-MINUS (-)\r\n// That means only ASCII code points has a special meaning and we define a maps for 0..127 codes only\r\nvar CATEGORY = new Array(0x80);\r\ncharCodeCategory.Eof = 0x80;\r\ncharCodeCategory.WhiteSpace = 0x82;\r\ncharCodeCategory.Digit = 0x83;\r\ncharCodeCategory.NameStart = 0x84;\r\ncharCodeCategory.NonPrintable = 0x85;\r\n\r\nfor (var i = 0; i < CATEGORY.length; i++) {\r\n    switch (true) {\r\n        case isWhiteSpace(i):\r\n            CATEGORY[i] = charCodeCategory.WhiteSpace;\r\n            break;\r\n\r\n        case isDigit(i):\r\n            CATEGORY[i] = charCodeCategory.Digit;\r\n            break;\r\n\r\n        case isNameStart(i):\r\n            CATEGORY[i] = charCodeCategory.NameStart;\r\n            break;\r\n\r\n        case isNonPrintable(i):\r\n            CATEGORY[i] = charCodeCategory.NonPrintable;\r\n            break;\r\n\r\n        default:\r\n            CATEGORY[i] = i || charCodeCategory.Eof;\r\n    }\r\n}\r\n\r\nfunction charCodeCategory(code) {\r\n    return code < 0x80 ? CATEGORY[code] : charCodeCategory.NameStart;\r\n};\r\n\r\nmodule.exports = {\r\n    isDigit: isDigit,\r\n    isHexDigit: isHexDigit,\r\n    isUppercaseLetter: isUppercaseLetter,\r\n    isLowercaseLetter: isLowercaseLetter,\r\n    isLetter: isLetter,\r\n    isNonAscii: isNonAscii,\r\n    isNameStart: isNameStart,\r\n    isName: isName,\r\n    isNonPrintable: isNonPrintable,\r\n    isNewline: isNewline,\r\n    isWhiteSpace: isWhiteSpace,\r\n    isValidEscape: isValidEscape,\r\n    isIdentifierStart: isIdentifierStart,\r\n    isNumberStart: isNumberStart,\r\n\r\n    isBOM: isBOM,\r\n    charCodeCategory: charCodeCategory\r\n};\r\n","var charCodeDef = require('./char-code-definitions');\r\nvar isDigit = charCodeDef.isDigit;\r\nvar isHexDigit = charCodeDef.isHexDigit;\r\nvar isUppercaseLetter = charCodeDef.isUppercaseLetter;\r\nvar isName = charCodeDef.isName;\r\nvar isWhiteSpace = charCodeDef.isWhiteSpace;\r\nvar isValidEscape = charCodeDef.isValidEscape;\r\n\r\nfunction getCharCode(source, offset) {\r\n    return offset < source.length ? source.charCodeAt(offset) : 0;\r\n}\r\n\r\nfunction getNewlineLength(source, offset, code) {\r\n    if (code === 13 /* \\r */ && getCharCode(source, offset + 1) === 10 /* \\n */) {\r\n        return 2;\r\n    }\r\n\r\n    return 1;\r\n}\r\n\r\nfunction cmpChar(testStr, offset, referenceCode) {\r\n    var code = testStr.charCodeAt(offset);\r\n\r\n    // code.toLowerCase() for A..Z\r\n    if (isUppercaseLetter(code)) {\r\n        code = code | 32;\r\n    }\r\n\r\n    return code === referenceCode;\r\n}\r\n\r\nfunction cmpStr(testStr, start, end, referenceStr) {\r\n    if (end - start !== referenceStr.length) {\r\n        return false;\r\n    }\r\n\r\n    if (start < 0 || end > testStr.length) {\r\n        return false;\r\n    }\r\n\r\n    for (var i = start; i < end; i++) {\r\n        var testCode = testStr.charCodeAt(i);\r\n        var referenceCode = referenceStr.charCodeAt(i - start);\r\n\r\n        // testCode.toLowerCase() for A..Z\r\n        if (isUppercaseLetter(testCode)) {\r\n            testCode = testCode | 32;\r\n        }\r\n\r\n        if (testCode !== referenceCode) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nfunction findWhiteSpaceStart(source, offset) {\r\n    for (; offset >= 0; offset--) {\r\n        if (!isWhiteSpace(source.charCodeAt(offset))) {\r\n            break;\r\n        }\r\n    }\r\n\r\n    return offset + 1;\r\n}\r\n\r\nfunction findWhiteSpaceEnd(source, offset) {\r\n    for (; offset < source.length; offset++) {\r\n        if (!isWhiteSpace(source.charCodeAt(offset))) {\r\n            break;\r\n        }\r\n    }\r\n\r\n    return offset;\r\n}\r\n\r\nfunction findDecimalNumberEnd(source, offset) {\r\n    for (; offset < source.length; offset++) {\r\n        if (!isDigit(source.charCodeAt(offset))) {\r\n            break;\r\n        }\r\n    }\r\n\r\n    return offset;\r\n}\r\n\r\n// § 4.3.7. Consume an escaped code point\r\nfunction consumeEscaped(source, offset) {\r\n    // It assumes that the U+005C REVERSE SOLIDUS (\\) has already been consumed and\r\n    // that the next input code point has already been verified to be part of a valid escape.\r\n    offset += 2;\r\n\r\n    // hex digit\r\n    if (isHexDigit(getCharCode(source, offset - 1))) {\r\n        // Consume as many hex digits as possible, but no more than 5.\r\n        // Note that this means 1-6 hex digits have been consumed in total.\r\n        for (var maxOffset = Math.min(source.length, offset + 5); offset < maxOffset; offset++) {\r\n            if (!isHexDigit(getCharCode(source, offset))) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        // If the next input code point is whitespace, consume it as well.\r\n        var code = getCharCode(source, offset);\r\n        if (isWhiteSpace(code)) {\r\n            offset += getNewlineLength(source, offset, code);\r\n        }\r\n    }\r\n\r\n    return offset;\r\n}\r\n\r\n// §4.3.11. Consume a name\r\n// Note: This algorithm does not do the verification of the first few code points that are necessary\r\n// to ensure the returned code points would constitute an <ident-token>. If that is the intended use,\r\n// ensure that the stream starts with an identifier before calling this algorithm.\r\nfunction consumeName(source, offset) {\r\n    // Let result initially be an empty string.\r\n    // Repeatedly consume the next input code point from the stream:\r\n    for (; offset < source.length; offset++) {\r\n        var code = source.charCodeAt(offset);\r\n\r\n        // name code point\r\n        if (isName(code)) {\r\n            // Append the code point to result.\r\n            continue;\r\n        }\r\n\r\n        // the stream starts with a valid escape\r\n        if (isValidEscape(code, getCharCode(source, offset + 1))) {\r\n            // Consume an escaped code point. Append the returned code point to result.\r\n            offset = consumeEscaped(source, offset) - 1;\r\n            continue;\r\n        }\r\n\r\n        // anything else\r\n        // Reconsume the current input code point. Return result.\r\n        break;\r\n    }\r\n\r\n    return offset;\r\n}\r\n\r\n// §4.3.12. Consume a number\r\nfunction consumeNumber(source, offset) {\r\n    var code = source.charCodeAt(offset);\r\n\r\n    // 2. If the next input code point is U+002B PLUS SIGN (+) or U+002D HYPHEN-MINUS (-),\r\n    // consume it and append it to repr.\r\n    if (code === 0x002B || code === 0x002D) {\r\n        code = source.charCodeAt(offset += 1);\r\n    }\r\n\r\n    // 3. While the next input code point is a digit, consume it and append it to repr.\r\n    if (isDigit(code)) {\r\n        offset = findDecimalNumberEnd(source, offset + 1);\r\n        code = source.charCodeAt(offset);\r\n    }\r\n\r\n    // 4. If the next 2 input code points are U+002E FULL STOP (.) followed by a digit, then:\r\n    if (code === 0x002E && isDigit(source.charCodeAt(offset + 1))) {\r\n        // 4.1 Consume them.\r\n        // 4.2 Append them to repr.\r\n        code = source.charCodeAt(offset += 2);\r\n\r\n        // 4.3 Set type to \"number\".\r\n        // TODO\r\n\r\n        // 4.4 While the next input code point is a digit, consume it and append it to repr.\r\n\r\n        offset = findDecimalNumberEnd(source, offset);\r\n    }\r\n\r\n    // 5. If the next 2 or 3 input code points are U+0045 LATIN CAPITAL LETTER E (E)\r\n    // or U+0065 LATIN SMALL LETTER E (e), ... , followed by a digit, then:\r\n    if (cmpChar(source, offset, 101 /* e */)) {\r\n        var sign = 0;\r\n        code = source.charCodeAt(offset + 1);\r\n\r\n        // ... optionally followed by U+002D HYPHEN-MINUS (-) or U+002B PLUS SIGN (+) ...\r\n        if (code === 0x002D || code === 0x002B) {\r\n            sign = 1;\r\n            code = source.charCodeAt(offset + 2);\r\n        }\r\n\r\n        // ... followed by a digit\r\n        if (isDigit(code)) {\r\n            // 5.1 Consume them.\r\n            // 5.2 Append them to repr.\r\n\r\n            // 5.3 Set type to \"number\".\r\n            // TODO\r\n\r\n            // 5.4 While the next input code point is a digit, consume it and append it to repr.\r\n            offset = findDecimalNumberEnd(source, offset + 1 + sign + 1);\r\n        }\r\n    }\r\n\r\n    return offset;\r\n}\r\n\r\n// § 4.3.14. Consume the remnants of a bad url\r\n// ... its sole use is to consume enough of the input stream to reach a recovery point\r\n// where normal tokenizing can resume.\r\nfunction consumeBadUrlRemnants(source, offset) {\r\n    // Repeatedly consume the next input code point from the stream:\r\n    for (; offset < source.length; offset++) {\r\n        var code = source.charCodeAt(offset);\r\n\r\n        // U+0029 RIGHT PARENTHESIS ())\r\n        // EOF\r\n        if (code === 0x0029) {\r\n            // Return.\r\n            offset++;\r\n            break;\r\n        }\r\n\r\n        if (isValidEscape(code, getCharCode(source, offset + 1))) {\r\n            // Consume an escaped code point.\r\n            // Note: This allows an escaped right parenthesis (\"\\)\") to be encountered\r\n            // without ending the <bad-url-token>. This is otherwise identical to\r\n            // the \"anything else\" clause.\r\n            offset = consumeEscaped(source, offset);\r\n        }\r\n    }\r\n\r\n    return offset;\r\n}\r\n\r\nmodule.exports = {\r\n    consumeEscaped: consumeEscaped,\r\n    consumeName: consumeName,\r\n    consumeNumber: consumeNumber,\r\n    consumeBadUrlRemnants: consumeBadUrlRemnants,\r\n\r\n    cmpChar: cmpChar,\r\n    cmpStr: cmpStr,\r\n\r\n    getNewlineLength: getNewlineLength,\r\n    findWhiteSpaceStart: findWhiteSpaceStart,\r\n    findWhiteSpaceEnd: findWhiteSpaceEnd\r\n};\r\n","var constants = require('../tokenizer/const');\r\nvar TYPE = constants.TYPE;\r\nvar NAME = constants.NAME;\r\n\r\nvar utils = require('../tokenizer/utils');\r\nvar cmpStr = utils.cmpStr;\r\n\r\nvar EOF = TYPE.EOF;\r\nvar WHITESPACE = TYPE.WhiteSpace;\r\nvar COMMENT = TYPE.Comment;\r\n\r\nvar OFFSET_MASK = 0x00FFFFFF;\r\nvar TYPE_SHIFT = 24;\r\n\r\nvar TokenStream = function() {\r\n    this.offsetAndType = null;\r\n    this.balance = null;\r\n\r\n    this.reset();\r\n};\r\n\r\nTokenStream.prototype = {\r\n    reset: function() {\r\n        this.eof = false;\r\n        this.tokenIndex = -1;\r\n        this.tokenType = 0;\r\n        this.tokenStart = this.firstCharOffset;\r\n        this.tokenEnd = this.firstCharOffset;\r\n    },\r\n\r\n    lookupType: function(offset) {\r\n        offset += this.tokenIndex;\r\n\r\n        if (offset < this.tokenCount) {\r\n            return this.offsetAndType[offset] >> TYPE_SHIFT;\r\n        }\r\n\r\n        return EOF;\r\n    },\r\n    lookupOffset: function(offset) {\r\n        offset += this.tokenIndex;\r\n\r\n        if (offset < this.tokenCount) {\r\n            return this.offsetAndType[offset - 1] & OFFSET_MASK;\r\n        }\r\n\r\n        return this.source.length;\r\n    },\r\n    lookupValue: function(offset, referenceStr) {\r\n        offset += this.tokenIndex;\r\n\r\n        if (offset < this.tokenCount) {\r\n            return cmpStr(\r\n                this.source,\r\n                this.offsetAndType[offset - 1] & OFFSET_MASK,\r\n                this.offsetAndType[offset] & OFFSET_MASK,\r\n                referenceStr\r\n            );\r\n        }\r\n\r\n        return false;\r\n    },\r\n    getTokenStart: function(tokenIndex) {\r\n        if (tokenIndex === this.tokenIndex) {\r\n            return this.tokenStart;\r\n        }\r\n\r\n        if (tokenIndex > 0) {\r\n            return tokenIndex < this.tokenCount\r\n                ? this.offsetAndType[tokenIndex - 1] & OFFSET_MASK\r\n                : this.offsetAndType[this.tokenCount] & OFFSET_MASK;\r\n        }\r\n\r\n        return this.firstCharOffset;\r\n    },\r\n\r\n    // TODO: -> skipUntilBalanced\r\n    getRawLength: function(startToken, mode) {\r\n        var cursor = startToken;\r\n        var balanceEnd;\r\n        var offset = this.offsetAndType[Math.max(cursor - 1, 0)] & OFFSET_MASK;\r\n        var type;\r\n\r\n        loop:\r\n        for (; cursor < this.tokenCount; cursor++) {\r\n            balanceEnd = this.balance[cursor];\r\n\r\n            // stop scanning on balance edge that points to offset before start token\r\n            if (balanceEnd < startToken) {\r\n                break loop;\r\n            }\r\n\r\n            type = this.offsetAndType[cursor] >> TYPE_SHIFT;\r\n\r\n            // check token is stop type\r\n            switch (mode(type, this.source, offset)) {\r\n                case 1:\r\n                    break loop;\r\n\r\n                case 2:\r\n                    cursor++;\r\n                    break loop;\r\n\r\n                default:\r\n                    offset = this.offsetAndType[cursor] & OFFSET_MASK;\r\n\r\n                    // fast forward to the end of balanced block\r\n                    if (this.balance[balanceEnd] === cursor) {\r\n                        cursor = balanceEnd;\r\n                    }\r\n            }\r\n        }\r\n\r\n        return cursor - this.tokenIndex;\r\n    },\r\n    isBalanceEdge: function(pos) {\r\n        return this.balance[this.tokenIndex] < pos;\r\n    },\r\n    isDelim: function(code, offset) {\r\n        if (offset) {\r\n            return (\r\n                this.lookupType(offset) === TYPE.Delim &&\r\n                this.source.charCodeAt(this.lookupOffset(offset)) === code\r\n            );\r\n        }\r\n\r\n        return (\r\n            this.tokenType === TYPE.Delim &&\r\n            this.source.charCodeAt(this.tokenStart) === code\r\n        );\r\n    },\r\n\r\n    getTokenValue: function() {\r\n        return this.source.substring(this.tokenStart, this.tokenEnd);\r\n    },\r\n    getTokenLength: function() {\r\n        return this.tokenEnd - this.tokenStart;\r\n    },\r\n    substrToCursor: function(start) {\r\n        return this.source.substring(start, this.tokenStart);\r\n    },\r\n\r\n    skipWS: function() {\r\n        for (var i = this.tokenIndex, skipTokenCount = 0; i < this.tokenCount; i++, skipTokenCount++) {\r\n            if ((this.offsetAndType[i] >> TYPE_SHIFT) !== WHITESPACE) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (skipTokenCount > 0) {\r\n            this.skip(skipTokenCount);\r\n        }\r\n    },\r\n    skipSC: function() {\r\n        while (this.tokenType === WHITESPACE || this.tokenType === COMMENT) {\r\n            this.next();\r\n        }\r\n    },\r\n    skip: function(tokenCount) {\r\n        var next = this.tokenIndex + tokenCount;\r\n\r\n        if (next < this.tokenCount) {\r\n            this.tokenIndex = next;\r\n            this.tokenStart = this.offsetAndType[next - 1] & OFFSET_MASK;\r\n            next = this.offsetAndType[next];\r\n            this.tokenType = next >> TYPE_SHIFT;\r\n            this.tokenEnd = next & OFFSET_MASK;\r\n        } else {\r\n            this.tokenIndex = this.tokenCount;\r\n            this.next();\r\n        }\r\n    },\r\n    next: function() {\r\n        var next = this.tokenIndex + 1;\r\n\r\n        if (next < this.tokenCount) {\r\n            this.tokenIndex = next;\r\n            this.tokenStart = this.tokenEnd;\r\n            next = this.offsetAndType[next];\r\n            this.tokenType = next >> TYPE_SHIFT;\r\n            this.tokenEnd = next & OFFSET_MASK;\r\n        } else {\r\n            this.tokenIndex = this.tokenCount;\r\n            this.eof = true;\r\n            this.tokenType = EOF;\r\n            this.tokenStart = this.tokenEnd = this.source.length;\r\n        }\r\n    },\r\n\r\n    dump: function() {\r\n        var offset = this.firstCharOffset;\r\n\r\n        return Array.prototype.slice.call(this.offsetAndType, 0, this.tokenCount).map(function(item, idx) {\r\n            var start = offset;\r\n            var end = item & OFFSET_MASK;\r\n\r\n            offset = end;\r\n\r\n            return {\r\n                idx: idx,\r\n                type: NAME[item >> TYPE_SHIFT],\r\n                chunk: this.source.substring(start, end),\r\n                balance: this.balance[idx]\r\n            };\r\n        }, this);\r\n    }\r\n};\r\n\r\nmodule.exports = TokenStream;\r\n","function noop(value) {\n  return value\n}\n\nfunction generateMultiplier(multiplier) {\n  if (multiplier.min === 0 && multiplier.max === 0) {\n    return '*'\n  }\n\n  if (multiplier.min === 0 && multiplier.max === 1) {\n    return '?'\n  }\n\n  if (multiplier.min === 1 && multiplier.max === 0) {\n    return multiplier.comma ? '#' : '+'\n  }\n\n  if (multiplier.min === 1 && multiplier.max === 1) {\n    return ''\n  }\n\n  return (multiplier.comma ? '#' : '') + (multiplier.min === multiplier.max ? '{' + multiplier.min + '}' : '{' + multiplier.min + ',' + (multiplier.max !== 0 ? multiplier.max : '') + '}')\n}\n\nfunction generateTypeOpts(node) {\n  switch (node.type) {\n    case 'Range':\n      return ' [' + (node.min === null ? '-∞' : node.min) + ',' + (node.max === null ? '∞' : node.max) + ']'\n\n    default:\n      throw new Error('Unknown node type `' + node.type + '`')\n  }\n}\n\nfunction generateSequence(node, decorate, forceBraces, compact) {\n  var combinator = node.combinator === ' ' || compact ? node.combinator : ' ' + node.combinator + ' '\n  var result = node.terms\n    .map(function (term) {\n      return generate(term, decorate, forceBraces, compact)\n    })\n    .join(combinator)\n\n  if (node.explicit || forceBraces) {\n    result = (compact || result[0] === ',' ? '[' : '[ ') + result + (compact ? ']' : ' ]')\n  }\n\n  return result\n}\n\nfunction generate(node, decorate, forceBraces, compact) {\n  var result\n\n  switch (node.type) {\n    case 'Group':\n      result = generateSequence(node, decorate, forceBraces, compact) + (node.disallowEmpty ? '!' : '')\n      break\n\n    case 'Multiplier':\n      // return since node is a composition\n      return generate(node.term, decorate, forceBraces, compact) + decorate(generateMultiplier(node), node)\n\n    case 'Type':\n      result = '<' + node.name + (node.opts ? decorate(generateTypeOpts(node.opts), node.opts) : '') + '>'\n      break\n\n    case 'Property':\n      result = \"<'\" + node.name + \"'>\"\n      break\n\n    case 'Keyword':\n      result = node.name\n      break\n\n    case 'AtKeyword':\n      result = '@' + node.name\n      break\n\n    case 'Function':\n      result = node.name + '('\n      break\n\n    case 'String':\n    case 'Token':\n      result = node.value\n      break\n\n    case 'Comma':\n      result = ','\n      break\n\n    default:\n      throw new Error('Unknown node type `' + node.type + '`')\n  }\n\n  return decorate(result, node)\n}\n\nmodule.exports = function (node, options) {\n  var decorate = noop\n  var forceBraces = false\n  var compact = false\n\n  if (typeof options === 'function') {\n    decorate = options\n  } else if (options) {\n    forceBraces = Boolean(options.forceBraces)\n    compact = Boolean(options.compact)\n    if (typeof options.decorate === 'function') {\n      decorate = options.decorate\n    }\n  }\n\n  return generate(node, decorate, forceBraces, compact)\n}\n","var createCustomError = require('../utils/createCustomError');\r\nvar generate = require('../definition-syntax/generate');\r\n\r\nfunction fromMatchResult(matchResult) {\r\n    var tokens = matchResult.tokens;\r\n    var longestMatch = matchResult.longestMatch;\r\n    var node = longestMatch < tokens.length ? tokens[longestMatch].node : null;\r\n    var mismatchOffset = -1;\r\n    var entries = 0;\r\n    var css = '';\r\n\r\n    for (var i = 0; i < tokens.length; i++) {\r\n        if (i === longestMatch) {\r\n            mismatchOffset = css.length;\r\n        }\r\n\r\n        if (node !== null && tokens[i].node === node) {\r\n            if (i <= longestMatch) {\r\n                entries++;\r\n            } else {\r\n                entries = 0;\r\n            }\r\n        }\r\n\r\n        css += tokens[i].value;\r\n    }\r\n\r\n    return {\r\n        node: node,\r\n        css: css,\r\n        mismatchOffset: mismatchOffset === -1 ? css.length : mismatchOffset,\r\n        last: node === null || entries > 1\r\n    };\r\n}\r\n\r\nfunction getLocation(node, point) {\r\n    var loc = node && node.loc && node.loc[point];\r\n\r\n    if (loc) {\r\n        return {\r\n            offset: loc.offset,\r\n            line: loc.line,\r\n            column: loc.column\r\n        };\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nvar SyntaxReferenceError = function(type, referenceName) {\r\n    var error = createCustomError(\r\n        'SyntaxReferenceError',\r\n        type + (referenceName ? ' `' + referenceName + '`' : '')\r\n    );\r\n\r\n    error.reference = referenceName;\r\n\r\n    return error;\r\n};\r\n\r\nvar MatchError = function(message, syntax, node, matchResult) {\r\n    var error = createCustomError('SyntaxMatchError', message);\r\n    var details = fromMatchResult(matchResult);\r\n    var mismatchOffset = details.mismatchOffset || 0;\r\n    var badNode = details.node || node;\r\n    var end = getLocation(badNode, 'end');\r\n    var start = details.last ? end : getLocation(badNode, 'start');\r\n    var css = details.css;\r\n\r\n    error.rawMessage = message;\r\n    error.syntax = syntax ? generate(syntax) : '<generic>';\r\n    error.css = css;\r\n    error.mismatchOffset = mismatchOffset;\r\n    error.loc = {\r\n        source: (badNode && badNode.loc && badNode.loc.source) || '<unknown>',\r\n        start: start,\r\n        end: end\r\n    };\r\n    error.line = start ? start.line : undefined;\r\n    error.column = start ? start.column : undefined;\r\n    error.offset = start ? start.offset : undefined;\r\n    error.message = message + '\\n' +\r\n        '  syntax: ' + error.syntax + '\\n' +\r\n        '   value: ' + (error.css || '<empty string>') + '\\n' +\r\n        '  --------' + new Array(error.mismatchOffset + 1).join('-') + '^';\r\n\r\n    return error;\r\n};\r\n\r\nmodule.exports = {\r\n    SyntaxReferenceError: SyntaxReferenceError,\r\n    MatchError: MatchError\r\n};\r\n","var hasOwnProperty = Object.prototype.hasOwnProperty;\r\nvar keywords = Object.create(null);\r\nvar properties = Object.create(null);\r\nvar HYPHENMINUS = 45; // '-'.charCodeAt()\r\n\r\nfunction isCustomProperty(str, offset) {\r\n    offset = offset || 0;\r\n\r\n    return str.length - offset >= 2 &&\r\n           str.charCodeAt(offset) === HYPHENMINUS &&\r\n           str.charCodeAt(offset + 1) === HYPHENMINUS;\r\n}\r\n\r\nfunction getVendorPrefix(str, offset) {\r\n    offset = offset || 0;\r\n\r\n    // verdor prefix should be at least 3 chars length\r\n    if (str.length - offset >= 3) {\r\n        // vendor prefix starts with hyper minus following non-hyper minus\r\n        if (str.charCodeAt(offset) === HYPHENMINUS &&\r\n            str.charCodeAt(offset + 1) !== HYPHENMINUS) {\r\n            // vendor prefix should contain a hyper minus at the ending\r\n            var secondDashIndex = str.indexOf('-', offset + 2);\r\n\r\n            if (secondDashIndex !== -1) {\r\n                return str.substring(offset, secondDashIndex + 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    return '';\r\n}\r\n\r\nfunction getKeywordDescriptor(keyword) {\r\n    if (hasOwnProperty.call(keywords, keyword)) {\r\n        return keywords[keyword];\r\n    }\r\n\r\n    var name = keyword.toLowerCase();\r\n\r\n    if (hasOwnProperty.call(keywords, name)) {\r\n        return keywords[keyword] = keywords[name];\r\n    }\r\n\r\n    var custom = isCustomProperty(name, 0);\r\n    var vendor = !custom ? getVendorPrefix(name, 0) : '';\r\n\r\n    return keywords[keyword] = Object.freeze({\r\n        basename: name.substr(vendor.length),\r\n        name: name,\r\n        vendor: vendor,\r\n        prefix: vendor,\r\n        custom: custom\r\n    });\r\n}\r\n\r\nfunction getPropertyDescriptor(property) {\r\n    if (hasOwnProperty.call(properties, property)) {\r\n        return properties[property];\r\n    }\r\n\r\n    var name = property;\r\n    var hack = property[0];\r\n\r\n    if (hack === '/') {\r\n        hack = property[1] === '/' ? '//' : '/';\r\n    } else if (hack !== '_' &&\r\n               hack !== '*' &&\r\n               hack !== '$' &&\r\n               hack !== '#' &&\r\n               hack !== '+' &&\r\n               hack !== '&') {\r\n        hack = '';\r\n    }\r\n\r\n    var custom = isCustomProperty(name, hack.length);\r\n\r\n    // re-use result when possible (the same as for lower case)\r\n    if (!custom) {\r\n        name = name.toLowerCase();\r\n        if (hasOwnProperty.call(properties, name)) {\r\n            return properties[property] = properties[name];\r\n        }\r\n    }\r\n\r\n    var vendor = !custom ? getVendorPrefix(name, hack.length) : '';\r\n    var prefix = name.substr(0, hack.length + vendor.length);\r\n\r\n    return properties[property] = Object.freeze({\r\n        basename: name.substr(prefix.length),\r\n        name: name.substr(hack.length),\r\n        hack: hack,\r\n        vendor: vendor,\r\n        prefix: prefix,\r\n        custom: custom\r\n    });\r\n}\r\n\r\nmodule.exports = {\r\n    keyword: getKeywordDescriptor,\r\n    property: getPropertyDescriptor,\r\n    isCustomProperty: isCustomProperty,\r\n    vendorPrefix: getVendorPrefix\r\n};\r\n","var MIN_SIZE = 16 * 1024;\r\nvar SafeUint32Array = typeof Uint32Array !== 'undefined' ? Uint32Array : Array; // fallback on Array when TypedArray is not supported\r\n\r\nmodule.exports = function adoptBuffer(buffer, size) {\r\n    if (buffer === null || buffer.length < size) {\r\n        return new SafeUint32Array(Math.max(size + 1024, MIN_SIZE));\r\n    }\r\n\r\n    return buffer;\r\n};\r\n","var TokenStream = require('../common/TokenStream');\r\nvar adoptBuffer = require('../common/adopt-buffer');\r\n\r\nvar constants = require('./const');\r\nvar TYPE = constants.TYPE;\r\n\r\nvar charCodeDefinitions = require('./char-code-definitions');\r\nvar isNewline = charCodeDefinitions.isNewline;\r\nvar isName = charCodeDefinitions.isName;\r\nvar isValidEscape = charCodeDefinitions.isValidEscape;\r\nvar isNumberStart = charCodeDefinitions.isNumberStart;\r\nvar isIdentifierStart = charCodeDefinitions.isIdentifierStart;\r\nvar charCodeCategory = charCodeDefinitions.charCodeCategory;\r\nvar isBOM = charCodeDefinitions.isBOM;\r\n\r\nvar utils = require('./utils');\r\nvar cmpStr = utils.cmpStr;\r\nvar getNewlineLength = utils.getNewlineLength;\r\nvar findWhiteSpaceEnd = utils.findWhiteSpaceEnd;\r\nvar consumeEscaped = utils.consumeEscaped;\r\nvar consumeName = utils.consumeName;\r\nvar consumeNumber = utils.consumeNumber;\r\nvar consumeBadUrlRemnants = utils.consumeBadUrlRemnants;\r\n\r\nvar OFFSET_MASK = 0x00FFFFFF;\r\nvar TYPE_SHIFT = 24;\r\n\r\nfunction tokenize(source, stream) {\r\n    function getCharCode(offset) {\r\n        return offset < sourceLength ? source.charCodeAt(offset) : 0;\r\n    }\r\n\r\n    // § 4.3.3. Consume a numeric token\r\n    function consumeNumericToken() {\r\n        // Consume a number and let number be the result.\r\n        offset = consumeNumber(source, offset);\r\n\r\n        // If the next 3 input code points would start an identifier, then:\r\n        if (isIdentifierStart(getCharCode(offset), getCharCode(offset + 1), getCharCode(offset + 2))) {\r\n            // Create a <dimension-token> with the same value and type flag as number, and a unit set initially to the empty string.\r\n            // Consume a name. Set the <dimension-token>’s unit to the returned value.\r\n            // Return the <dimension-token>.\r\n            type = TYPE.Dimension;\r\n            offset = consumeName(source, offset);\r\n            return;\r\n        }\r\n\r\n        // Otherwise, if the next input code point is U+0025 PERCENTAGE SIGN (%), consume it.\r\n        if (getCharCode(offset) === 0x0025) {\r\n            // Create a <percentage-token> with the same value as number, and return it.\r\n            type = TYPE.Percentage;\r\n            offset++;\r\n            return;\r\n        }\r\n\r\n        // Otherwise, create a <number-token> with the same value and type flag as number, and return it.\r\n        type = TYPE.Number;\r\n    }\r\n\r\n    // § 4.3.4. Consume an ident-like token\r\n    function consumeIdentLikeToken() {\r\n        const nameStartOffset = offset;\r\n\r\n        // Consume a name, and let string be the result.\r\n        offset = consumeName(source, offset);\r\n\r\n        // If string’s value is an ASCII case-insensitive match for \"url\",\r\n        // and the next input code point is U+0028 LEFT PARENTHESIS ((), consume it.\r\n        if (cmpStr(source, nameStartOffset, offset, 'url') && getCharCode(offset) === 0x0028) {\r\n            // While the next two input code points are whitespace, consume the next input code point.\r\n            offset = findWhiteSpaceEnd(source, offset + 1);\r\n\r\n            // If the next one or two input code points are U+0022 QUOTATION MARK (\"), U+0027 APOSTROPHE ('),\r\n            // or whitespace followed by U+0022 QUOTATION MARK (\") or U+0027 APOSTROPHE ('),\r\n            // then create a <function-token> with its value set to string and return it.\r\n            if (getCharCode(offset) === 0x0022 ||\r\n                getCharCode(offset) === 0x0027) {\r\n                type = TYPE.Function;\r\n                offset = nameStartOffset + 4;\r\n                return;\r\n            }\r\n\r\n            // Otherwise, consume a url token, and return it.\r\n            consumeUrlToken();\r\n            return;\r\n        }\r\n\r\n        // Otherwise, if the next input code point is U+0028 LEFT PARENTHESIS ((), consume it.\r\n        // Create a <function-token> with its value set to string and return it.\r\n        if (getCharCode(offset) === 0x0028) {\r\n            type = TYPE.Function;\r\n            offset++;\r\n            return;\r\n        }\r\n\r\n        // Otherwise, create an <ident-token> with its value set to string and return it.\r\n        type = TYPE.Ident;\r\n    }\r\n\r\n    // § 4.3.5. Consume a string token\r\n    function consumeStringToken(endingCodePoint) {\r\n        // This algorithm may be called with an ending code point, which denotes the code point\r\n        // that ends the string. If an ending code point is not specified,\r\n        // the current input code point is used.\r\n        if (!endingCodePoint) {\r\n            endingCodePoint = getCharCode(offset++);\r\n        }\r\n\r\n        // Initially create a <string-token> with its value set to the empty string.\r\n        type = TYPE.String;\r\n\r\n        // Repeatedly consume the next input code point from the stream:\r\n        for (; offset < source.length; offset++) {\r\n            var code = source.charCodeAt(offset);\r\n\r\n            switch (charCodeCategory(code)) {\r\n                // ending code point\r\n                case endingCodePoint:\r\n                    // Return the <string-token>.\r\n                    offset++;\r\n                    return;\r\n\r\n                // EOF\r\n                case charCodeCategory.Eof:\r\n                    // This is a parse error. Return the <string-token>.\r\n                    return;\r\n\r\n                // newline\r\n                case charCodeCategory.WhiteSpace:\r\n                    if (isNewline(code)) {\r\n                        // This is a parse error. Reconsume the current input code point,\r\n                        // create a <bad-string-token>, and return it.\r\n                        offset += getNewlineLength(source, offset, code);\r\n                        type = TYPE.BadString;\r\n                        return;\r\n                    }\r\n                    break;\r\n\r\n                // U+005C REVERSE SOLIDUS (\\)\r\n                case 0x005C:\r\n                    // If the next input code point is EOF, do nothing.\r\n                    if (offset === source.length - 1) {\r\n                        break;\r\n                    }\r\n\r\n                    var nextCode = getCharCode(offset + 1);\r\n\r\n                    // Otherwise, if the next input code point is a newline, consume it.\r\n                    if (isNewline(nextCode)) {\r\n                        offset += getNewlineLength(source, offset + 1, nextCode);\r\n                    } else if (isValidEscape(code, nextCode)) {\r\n                        // Otherwise, (the stream starts with a valid escape) consume\r\n                        // an escaped code point and append the returned code point to\r\n                        // the <string-token>’s value.\r\n                        offset = consumeEscaped(source, offset) - 1;\r\n                    }\r\n                    break;\r\n\r\n                // anything else\r\n                // Append the current input code point to the <string-token>’s value.\r\n            }\r\n        }\r\n    }\r\n\r\n    // § 4.3.6. Consume a url token\r\n    // Note: This algorithm assumes that the initial \"url(\" has already been consumed.\r\n    // This algorithm also assumes that it’s being called to consume an \"unquoted\" value, like url(foo).\r\n    // A quoted value, like url(\"foo\"), is parsed as a <function-token>. Consume an ident-like token\r\n    // automatically handles this distinction; this algorithm shouldn’t be called directly otherwise.\r\n    function consumeUrlToken() {\r\n        // Initially create a <url-token> with its value set to the empty string.\r\n        type = TYPE.Url;\r\n\r\n        // Consume as much whitespace as possible.\r\n        offset = findWhiteSpaceEnd(source, offset);\r\n\r\n        // Repeatedly consume the next input code point from the stream:\r\n        for (; offset < source.length; offset++) {\r\n            var code = source.charCodeAt(offset);\r\n\r\n            switch (charCodeCategory(code)) {\r\n                // U+0029 RIGHT PARENTHESIS ())\r\n                case 0x0029:\r\n                    // Return the <url-token>.\r\n                    offset++;\r\n                    return;\r\n\r\n                // EOF\r\n                case charCodeCategory.Eof:\r\n                    // This is a parse error. Return the <url-token>.\r\n                    return;\r\n\r\n                // whitespace\r\n                case charCodeCategory.WhiteSpace:\r\n                    // Consume as much whitespace as possible.\r\n                    offset = findWhiteSpaceEnd(source, offset);\r\n\r\n                    // If the next input code point is U+0029 RIGHT PARENTHESIS ()) or EOF,\r\n                    // consume it and return the <url-token>\r\n                    // (if EOF was encountered, this is a parse error);\r\n                    if (getCharCode(offset) === 0x0029 || offset >= source.length) {\r\n                        if (offset < source.length) {\r\n                            offset++;\r\n                        }\r\n                        return;\r\n                    }\r\n\r\n                    // otherwise, consume the remnants of a bad url, create a <bad-url-token>,\r\n                    // and return it.\r\n                    offset = consumeBadUrlRemnants(source, offset);\r\n                    type = TYPE.BadUrl;\r\n                    return;\r\n\r\n                // U+0022 QUOTATION MARK (\")\r\n                // U+0027 APOSTROPHE (')\r\n                // U+0028 LEFT PARENTHESIS (()\r\n                // non-printable code point\r\n                case 0x0022:\r\n                case 0x0027:\r\n                case 0x0028:\r\n                case charCodeCategory.NonPrintable:\r\n                    // This is a parse error. Consume the remnants of a bad url,\r\n                    // create a <bad-url-token>, and return it.\r\n                    offset = consumeBadUrlRemnants(source, offset);\r\n                    type = TYPE.BadUrl;\r\n                    return;\r\n\r\n                // U+005C REVERSE SOLIDUS (\\)\r\n                case 0x005C:\r\n                    // If the stream starts with a valid escape, consume an escaped code point and\r\n                    // append the returned code point to the <url-token>’s value.\r\n                    if (isValidEscape(code, getCharCode(offset + 1))) {\r\n                        offset = consumeEscaped(source, offset) - 1;\r\n                        break;\r\n                    }\r\n\r\n                    // Otherwise, this is a parse error. Consume the remnants of a bad url,\r\n                    // create a <bad-url-token>, and return it.\r\n                    offset = consumeBadUrlRemnants(source, offset);\r\n                    type = TYPE.BadUrl;\r\n                    return;\r\n\r\n                // anything else\r\n                // Append the current input code point to the <url-token>’s value.\r\n            }\r\n        }\r\n    }\r\n\r\n    if (!stream) {\r\n        stream = new TokenStream();\r\n    }\r\n\r\n    // ensure source is a string\r\n    source = String(source || '');\r\n\r\n    var sourceLength = source.length;\r\n    var offsetAndType = adoptBuffer(stream.offsetAndType, sourceLength + 1); // +1 because of eof-token\r\n    var balance = adoptBuffer(stream.balance, sourceLength + 1);\r\n    var tokenCount = 0;\r\n    var start = isBOM(getCharCode(0));\r\n    var offset = start;\r\n    var balanceCloseType = 0;\r\n    var balanceStart = 0;\r\n    var balancePrev = 0;\r\n\r\n    // https://drafts.csswg.org/css-syntax-3/#consume-token\r\n    // § 4.3.1. Consume a token\r\n    while (offset < sourceLength) {\r\n        var code = source.charCodeAt(offset);\r\n        var type = 0;\r\n\r\n        balance[tokenCount] = sourceLength;\r\n\r\n        switch (charCodeCategory(code)) {\r\n            // whitespace\r\n            case charCodeCategory.WhiteSpace:\r\n                // Consume as much whitespace as possible. Return a <whitespace-token>.\r\n                type = TYPE.WhiteSpace;\r\n                offset = findWhiteSpaceEnd(source, offset + 1);\r\n                break;\r\n\r\n            // U+0022 QUOTATION MARK (\")\r\n            case 0x0022:\r\n                // Consume a string token and return it.\r\n                consumeStringToken();\r\n                break;\r\n\r\n            // U+0023 NUMBER SIGN (#)\r\n            case 0x0023:\r\n                // If the next input code point is a name code point or the next two input code points are a valid escape, then:\r\n                if (isName(getCharCode(offset + 1)) || isValidEscape(getCharCode(offset + 1), getCharCode(offset + 2))) {\r\n                    // Create a <hash-token>.\r\n                    type = TYPE.Hash;\r\n\r\n                    // If the next 3 input code points would start an identifier, set the <hash-token>’s type flag to \"id\".\r\n                    // if (isIdentifierStart(getCharCode(offset + 1), getCharCode(offset + 2), getCharCode(offset + 3))) {\r\n                    //     // TODO: set id flag\r\n                    // }\r\n\r\n                    // Consume a name, and set the <hash-token>’s value to the returned string.\r\n                    offset = consumeName(source, offset + 1);\r\n\r\n                    // Return the <hash-token>.\r\n                } else {\r\n                    // Otherwise, return a <delim-token> with its value set to the current input code point.\r\n                    type = TYPE.Delim;\r\n                    offset++;\r\n                }\r\n\r\n                break;\r\n\r\n            // U+0027 APOSTROPHE (')\r\n            case 0x0027:\r\n                // Consume a string token and return it.\r\n                consumeStringToken();\r\n                break;\r\n\r\n            // U+0028 LEFT PARENTHESIS (()\r\n            case 0x0028:\r\n                // Return a <(-token>.\r\n                type = TYPE.LeftParenthesis;\r\n                offset++;\r\n                break;\r\n\r\n            // U+0029 RIGHT PARENTHESIS ())\r\n            case 0x0029:\r\n                // Return a <)-token>.\r\n                type = TYPE.RightParenthesis;\r\n                offset++;\r\n                break;\r\n\r\n            // U+002B PLUS SIGN (+)\r\n            case 0x002B:\r\n                // If the input stream starts with a number, ...\r\n                if (isNumberStart(code, getCharCode(offset + 1), getCharCode(offset + 2))) {\r\n                    // ... reconsume the current input code point, consume a numeric token, and return it.\r\n                    consumeNumericToken();\r\n                } else {\r\n                    // Otherwise, return a <delim-token> with its value set to the current input code point.\r\n                    type = TYPE.Delim;\r\n                    offset++;\r\n                }\r\n                break;\r\n\r\n            // U+002C COMMA (,)\r\n            case 0x002C:\r\n                // Return a <comma-token>.\r\n                type = TYPE.Comma;\r\n                offset++;\r\n                break;\r\n\r\n            // U+002D HYPHEN-MINUS (-)\r\n            case 0x002D:\r\n                // If the input stream starts with a number, reconsume the current input code point, consume a numeric token, and return it.\r\n                if (isNumberStart(code, getCharCode(offset + 1), getCharCode(offset + 2))) {\r\n                    consumeNumericToken();\r\n                } else {\r\n                    // Otherwise, if the next 2 input code points are U+002D HYPHEN-MINUS U+003E GREATER-THAN SIGN (->), consume them and return a <CDC-token>.\r\n                    if (getCharCode(offset + 1) === 0x002D &&\r\n                        getCharCode(offset + 2) === 0x003E) {\r\n                        type = TYPE.CDC;\r\n                        offset = offset + 3;\r\n                    } else {\r\n                        // Otherwise, if the input stream starts with an identifier, ...\r\n                        if (isIdentifierStart(code, getCharCode(offset + 1), getCharCode(offset + 2))) {\r\n                            // ... reconsume the current input code point, consume an ident-like token, and return it.\r\n                            consumeIdentLikeToken();\r\n                        } else {\r\n                            // Otherwise, return a <delim-token> with its value set to the current input code point.\r\n                            type = TYPE.Delim;\r\n                            offset++;\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n\r\n            // U+002E FULL STOP (.)\r\n            case 0x002E:\r\n                // If the input stream starts with a number, ...\r\n                if (isNumberStart(code, getCharCode(offset + 1), getCharCode(offset + 2))) {\r\n                    // ... reconsume the current input code point, consume a numeric token, and return it.\r\n                    consumeNumericToken();\r\n                } else {\r\n                    // Otherwise, return a <delim-token> with its value set to the current input code point.\r\n                    type = TYPE.Delim;\r\n                    offset++;\r\n                }\r\n\r\n                break;\r\n\r\n            // U+002F SOLIDUS (/)\r\n            case 0x002F:\r\n                // If the next two input code point are U+002F SOLIDUS (/) followed by a U+002A ASTERISK (*),\r\n                if (getCharCode(offset + 1) === 0x002A) {\r\n                    // ... consume them and all following code points up to and including the first U+002A ASTERISK (*)\r\n                    // followed by a U+002F SOLIDUS (/), or up to an EOF code point.\r\n                    type = TYPE.Comment;\r\n                    offset = source.indexOf('*/', offset + 2) + 2;\r\n                    if (offset === 1) {\r\n                        offset = source.length;\r\n                    }\r\n                } else {\r\n                    type = TYPE.Delim;\r\n                    offset++;\r\n                }\r\n                break;\r\n\r\n            // U+003A COLON (:)\r\n            case 0x003A:\r\n                // Return a <colon-token>.\r\n                type = TYPE.Colon;\r\n                offset++;\r\n                break;\r\n\r\n            // U+003B SEMICOLON (;)\r\n            case 0x003B:\r\n                // Return a <semicolon-token>.\r\n                type = TYPE.Semicolon;\r\n                offset++;\r\n                break;\r\n\r\n            // U+003C LESS-THAN SIGN (<)\r\n            case 0x003C:\r\n                // If the next 3 input code points are U+0021 EXCLAMATION MARK U+002D HYPHEN-MINUS U+002D HYPHEN-MINUS (!--), ...\r\n                if (getCharCode(offset + 1) === 0x0021 &&\r\n                    getCharCode(offset + 2) === 0x002D &&\r\n                    getCharCode(offset + 3) === 0x002D) {\r\n                    // ... consume them and return a <CDO-token>.\r\n                    type = TYPE.CDO;\r\n                    offset = offset + 4;\r\n                } else {\r\n                    // Otherwise, return a <delim-token> with its value set to the current input code point.\r\n                    type = TYPE.Delim;\r\n                    offset++;\r\n                }\r\n\r\n                break;\r\n\r\n            // U+0040 COMMERCIAL AT (@)\r\n            case 0x0040:\r\n                // If the next 3 input code points would start an identifier, ...\r\n                if (isIdentifierStart(getCharCode(offset + 1), getCharCode(offset + 2), getCharCode(offset + 3))) {\r\n                    // ... consume a name, create an <at-keyword-token> with its value set to the returned value, and return it.\r\n                    type = TYPE.AtKeyword;\r\n                    offset = consumeName(source, offset + 1);\r\n                } else {\r\n                    // Otherwise, return a <delim-token> with its value set to the current input code point.\r\n                    type = TYPE.Delim;\r\n                    offset++;\r\n                }\r\n\r\n                break;\r\n\r\n            // U+005B LEFT SQUARE BRACKET ([)\r\n            case 0x005B:\r\n                // Return a <[-token>.\r\n                type = TYPE.LeftSquareBracket;\r\n                offset++;\r\n                break;\r\n\r\n            // U+005C REVERSE SOLIDUS (\\)\r\n            case 0x005C:\r\n                // If the input stream starts with a valid escape, ...\r\n                if (isValidEscape(code, getCharCode(offset + 1))) {\r\n                    // ... reconsume the current input code point, consume an ident-like token, and return it.\r\n                    consumeIdentLikeToken();\r\n                } else {\r\n                    // Otherwise, this is a parse error. Return a <delim-token> with its value set to the current input code point.\r\n                    type = TYPE.Delim;\r\n                    offset++;\r\n                }\r\n                break;\r\n\r\n            // U+005D RIGHT SQUARE BRACKET (])\r\n            case 0x005D:\r\n                // Return a <]-token>.\r\n                type = TYPE.RightSquareBracket;\r\n                offset++;\r\n                break;\r\n\r\n            // U+007B LEFT CURLY BRACKET ({)\r\n            case 0x007B:\r\n                // Return a <{-token>.\r\n                type = TYPE.LeftCurlyBracket;\r\n                offset++;\r\n                break;\r\n\r\n            // U+007D RIGHT CURLY BRACKET (})\r\n            case 0x007D:\r\n                // Return a <}-token>.\r\n                type = TYPE.RightCurlyBracket;\r\n                offset++;\r\n                break;\r\n\r\n            // digit\r\n            case charCodeCategory.Digit:\r\n                // Reconsume the current input code point, consume a numeric token, and return it.\r\n                consumeNumericToken();\r\n                break;\r\n\r\n            // name-start code point\r\n            case charCodeCategory.NameStart:\r\n                // Reconsume the current input code point, consume an ident-like token, and return it.\r\n                consumeIdentLikeToken();\r\n                break;\r\n\r\n            // EOF\r\n            case charCodeCategory.Eof:\r\n                // Return an <EOF-token>.\r\n                break;\r\n\r\n            // anything else\r\n            default:\r\n                // Return a <delim-token> with its value set to the current input code point.\r\n                type = TYPE.Delim;\r\n                offset++;\r\n        }\r\n\r\n        switch (type) {\r\n            case balanceCloseType:\r\n                balancePrev = balanceStart & OFFSET_MASK;\r\n                balanceStart = balance[balancePrev];\r\n                balanceCloseType = balanceStart >> TYPE_SHIFT;\r\n                balance[tokenCount] = balancePrev;\r\n                balance[balancePrev++] = tokenCount;\r\n                for (; balancePrev < tokenCount; balancePrev++) {\r\n                    if (balance[balancePrev] === sourceLength) {\r\n                        balance[balancePrev] = tokenCount;\r\n                    }\r\n                }\r\n                break;\r\n\r\n            case TYPE.LeftParenthesis:\r\n            case TYPE.Function:\r\n                balance[tokenCount] = balanceStart;\r\n                balanceCloseType = TYPE.RightParenthesis;\r\n                balanceStart = (balanceCloseType << TYPE_SHIFT) | tokenCount;\r\n                break;\r\n\r\n            case TYPE.LeftSquareBracket:\r\n                balance[tokenCount] = balanceStart;\r\n                balanceCloseType = TYPE.RightSquareBracket;\r\n                balanceStart = (balanceCloseType << TYPE_SHIFT) | tokenCount;\r\n                break;\r\n\r\n            case TYPE.LeftCurlyBracket:\r\n                balance[tokenCount] = balanceStart;\r\n                balanceCloseType = TYPE.RightCurlyBracket;\r\n                balanceStart = (balanceCloseType << TYPE_SHIFT) | tokenCount;\r\n                break;\r\n        }\r\n\r\n        offsetAndType[tokenCount++] = (type << TYPE_SHIFT) | offset;\r\n    }\r\n\r\n    // finalize buffers\r\n    offsetAndType[tokenCount] = (TYPE.EOF << TYPE_SHIFT) | offset; // <EOF-token>\r\n    balance[tokenCount] = sourceLength;\r\n    balance[sourceLength] = sourceLength; // prevents false positive balance match with any token\r\n    while (balanceStart !== 0) {\r\n        balancePrev = balanceStart & OFFSET_MASK;\r\n        balanceStart = balance[balancePrev];\r\n        balance[balancePrev] = sourceLength;\r\n    }\r\n\r\n    // update stream\r\n    stream.source = source;\r\n    stream.firstCharOffset = start;\r\n    stream.offsetAndType = offsetAndType;\r\n    stream.tokenCount = tokenCount;\r\n    stream.balance = balance;\r\n    stream.reset();\r\n    stream.next();\r\n\r\n    return stream;\r\n}\r\n\r\n// extend tokenizer with constants\r\nObject.keys(constants).forEach(function(key) {\r\n    tokenize[key] = constants[key];\r\n});\r\n\r\n// extend tokenizer with static methods from utils\r\nObject.keys(charCodeDefinitions).forEach(function(key) {\r\n    tokenize[key] = charCodeDefinitions[key];\r\n});\r\nObject.keys(utils).forEach(function(key) {\r\n    tokenize[key] = utils[key];\r\n});\r\n\r\nmodule.exports = tokenize;\r\n","var isDigit = require('../tokenizer').isDigit;\r\nvar cmpChar = require('../tokenizer').cmpChar;\r\nvar TYPE = require('../tokenizer').TYPE;\r\n\r\nvar DELIM = TYPE.Delim;\r\nvar WHITESPACE = TYPE.WhiteSpace;\r\nvar COMMENT = TYPE.Comment;\r\nvar IDENT = TYPE.Ident;\r\nvar NUMBER = TYPE.Number;\r\nvar DIMENSION = TYPE.Dimension;\r\nvar PLUSSIGN = 0x002B;    // U+002B PLUS SIGN (+)\r\nvar HYPHENMINUS = 0x002D; // U+002D HYPHEN-MINUS (-)\r\nvar N = 0x006E;           // U+006E LATIN SMALL LETTER N (n)\r\nvar DISALLOW_SIGN = true;\r\nvar ALLOW_SIGN = false;\r\n\r\nfunction isDelim(token, code) {\r\n    return token !== null && token.type === DELIM && token.value.charCodeAt(0) === code;\r\n}\r\n\r\nfunction skipSC(token, offset, getNextToken) {\r\n    while (token !== null && (token.type === WHITESPACE || token.type === COMMENT)) {\r\n        token = getNextToken(++offset);\r\n    }\r\n\r\n    return offset;\r\n}\r\n\r\nfunction checkInteger(token, valueOffset, disallowSign, offset) {\r\n    if (!token) {\r\n        return 0;\r\n    }\r\n\r\n    var code = token.value.charCodeAt(valueOffset);\r\n\r\n    if (code === PLUSSIGN || code === HYPHENMINUS) {\r\n        if (disallowSign) {\r\n            // Number sign is not allowed\r\n            return 0;\r\n        }\r\n        valueOffset++;\r\n    }\r\n\r\n    for (; valueOffset < token.value.length; valueOffset++) {\r\n        if (!isDigit(token.value.charCodeAt(valueOffset))) {\r\n            // Integer is expected\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    return offset + 1;\r\n}\r\n\r\n// ... <signed-integer>\r\n// ... ['+' | '-'] <signless-integer>\r\nfunction consumeB(token, offset_, getNextToken) {\r\n    var sign = false;\r\n    var offset = skipSC(token, offset_, getNextToken);\r\n\r\n    token = getNextToken(offset);\r\n\r\n    if (token === null) {\r\n        return offset_;\r\n    }\r\n\r\n    if (token.type !== NUMBER) {\r\n        if (isDelim(token, PLUSSIGN) || isDelim(token, HYPHENMINUS)) {\r\n            sign = true;\r\n            offset = skipSC(getNextToken(++offset), offset, getNextToken);\r\n            token = getNextToken(offset);\r\n\r\n            if (token === null && token.type !== NUMBER) {\r\n                return 0;\r\n            }\r\n        } else {\r\n            return offset_;\r\n        }\r\n    }\r\n\r\n    if (!sign) {\r\n        var code = token.value.charCodeAt(0);\r\n        if (code !== PLUSSIGN && code !== HYPHENMINUS) {\r\n            // Number sign is expected\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    return checkInteger(token, sign ? 0 : 1, sign, offset);\r\n}\r\n\r\n// An+B microsyntax https://www.w3.org/TR/css-syntax-3/#anb\r\nmodule.exports = function anPlusB(token, getNextToken) {\r\n    /* eslint-disable brace-style*/\r\n    var offset = 0;\r\n\r\n    if (!token) {\r\n        return 0;\r\n    }\r\n\r\n    // <integer>\r\n    if (token.type === NUMBER) {\r\n        return checkInteger(token, 0, ALLOW_SIGN, offset); // b\r\n    }\r\n\r\n    // -n\r\n    // -n <signed-integer>\r\n    // -n ['+' | '-'] <signless-integer>\r\n    // -n- <signless-integer>\r\n    // <dashndashdigit-ident>\r\n    else if (token.type === IDENT && token.value.charCodeAt(0) === HYPHENMINUS) {\r\n        // expect 1st char is N\r\n        if (!cmpChar(token.value, 1, N)) {\r\n            return 0;\r\n        }\r\n\r\n        switch (token.value.length) {\r\n            // -n\r\n            // -n <signed-integer>\r\n            // -n ['+' | '-'] <signless-integer>\r\n            case 2:\r\n                return consumeB(getNextToken(++offset), offset, getNextToken);\r\n\r\n            // -n- <signless-integer>\r\n            case 3:\r\n                if (token.value.charCodeAt(2) !== HYPHENMINUS) {\r\n                    return 0;\r\n                }\r\n\r\n                offset = skipSC(getNextToken(++offset), offset, getNextToken);\r\n                token = getNextToken(offset);\r\n\r\n                return checkInteger(token, 0, DISALLOW_SIGN, offset);\r\n\r\n            // <dashndashdigit-ident>\r\n            default:\r\n                if (token.value.charCodeAt(2) !== HYPHENMINUS) {\r\n                    return 0;\r\n                }\r\n\r\n                return checkInteger(token, 3, DISALLOW_SIGN, offset);\r\n        }\r\n    }\r\n\r\n    // '+'? n\r\n    // '+'? n <signed-integer>\r\n    // '+'? n ['+' | '-'] <signless-integer>\r\n    // '+'? n- <signless-integer>\r\n    // '+'? <ndashdigit-ident>\r\n    else if (token.type === IDENT || (isDelim(token, PLUSSIGN) && getNextToken(offset + 1).type === IDENT)) {\r\n        // just ignore a plus\r\n        if (token.type !== IDENT) {\r\n            token = getNextToken(++offset);\r\n        }\r\n\r\n        if (token === null || !cmpChar(token.value, 0, N)) {\r\n            return 0;\r\n        }\r\n\r\n        switch (token.value.length) {\r\n            // '+'? n\r\n            // '+'? n <signed-integer>\r\n            // '+'? n ['+' | '-'] <signless-integer>\r\n            case 1:\r\n                return consumeB(getNextToken(++offset), offset, getNextToken);\r\n\r\n            // '+'? n- <signless-integer>\r\n            case 2:\r\n                if (token.value.charCodeAt(1) !== HYPHENMINUS) {\r\n                    return 0;\r\n                }\r\n\r\n                offset = skipSC(getNextToken(++offset), offset, getNextToken);\r\n                token = getNextToken(offset);\r\n\r\n                return checkInteger(token, 0, DISALLOW_SIGN, offset);\r\n\r\n            // '+'? <ndashdigit-ident>\r\n            default:\r\n                if (token.value.charCodeAt(1) !== HYPHENMINUS) {\r\n                    return 0;\r\n                }\r\n\r\n                return checkInteger(token, 2, DISALLOW_SIGN, offset);\r\n        }\r\n    }\r\n\r\n    // <ndashdigit-dimension>\r\n    // <ndash-dimension> <signless-integer>\r\n    // <n-dimension>\r\n    // <n-dimension> <signed-integer>\r\n    // <n-dimension> ['+' | '-'] <signless-integer>\r\n    else if (token.type === DIMENSION) {\r\n        var code = token.value.charCodeAt(0);\r\n        var sign = code === PLUSSIGN || code === HYPHENMINUS ? 1 : 0;\r\n\r\n        for (var i = sign; i < token.value.length; i++) {\r\n            if (!isDigit(token.value.charCodeAt(i))) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (i === sign) {\r\n            // Integer is expected\r\n            return 0;\r\n        }\r\n\r\n        if (!cmpChar(token.value, i, N)) {\r\n            return 0;\r\n        }\r\n\r\n        // <n-dimension>\r\n        // <n-dimension> <signed-integer>\r\n        // <n-dimension> ['+' | '-'] <signless-integer>\r\n        if (i + 1 === token.value.length) {\r\n            return consumeB(getNextToken(++offset), offset, getNextToken);\r\n        } else {\r\n            if (token.value.charCodeAt(i + 1) !== HYPHENMINUS) {\r\n                return 0;\r\n            }\r\n\r\n            // <ndash-dimension> <signless-integer>\r\n            if (i + 2 === token.value.length) {\r\n                offset = skipSC(getNextToken(++offset), offset, getNextToken);\r\n                token = getNextToken(offset);\r\n\r\n                return checkInteger(token, 0, DISALLOW_SIGN, offset);\r\n            }\r\n            // <ndashdigit-dimension>\r\n            else {\r\n                return checkInteger(token, i + 2, DISALLOW_SIGN, offset);\r\n            }\r\n        }\r\n    }\r\n\r\n    return 0;\r\n};\r\n","var isHexDigit = require('../tokenizer').isHexDigit;\r\nvar cmpChar = require('../tokenizer').cmpChar;\r\nvar TYPE = require('../tokenizer').TYPE;\r\n\r\nvar IDENT = TYPE.Ident;\r\nvar DELIM = TYPE.Delim;\r\nvar NUMBER = TYPE.Number;\r\nvar DIMENSION = TYPE.Dimension;\r\nvar PLUSSIGN = 0x002B;     // U+002B PLUS SIGN (+)\r\nvar HYPHENMINUS = 0x002D;  // U+002D HYPHEN-MINUS (-)\r\nvar QUESTIONMARK = 0x003F; // U+003F QUESTION MARK (?)\r\nvar U = 0x0075;            // U+0075 LATIN SMALL LETTER U (u)\r\n\r\nfunction isDelim(token, code) {\r\n    return token !== null && token.type === DELIM && token.value.charCodeAt(0) === code;\r\n}\r\n\r\nfunction startsWith(token, code) {\r\n    return token.value.charCodeAt(0) === code;\r\n}\r\n\r\nfunction hexSequence(token, offset, allowDash) {\r\n    for (var pos = offset, hexlen = 0; pos < token.value.length; pos++) {\r\n        var code = token.value.charCodeAt(pos);\r\n\r\n        if (code === HYPHENMINUS && allowDash && hexlen !== 0) {\r\n            if (hexSequence(token, offset + hexlen + 1, false) > 0) {\r\n                return 6; // dissallow following question marks\r\n            }\r\n\r\n            return 0; // dash at the ending of a hex sequence is not allowed\r\n        }\r\n\r\n        if (!isHexDigit(code)) {\r\n            return 0; // not a hex digit\r\n        }\r\n\r\n        if (++hexlen > 6) {\r\n            return 0; // too many hex digits\r\n        };\r\n    }\r\n\r\n    return hexlen;\r\n}\r\n\r\nfunction withQuestionMarkSequence(consumed, length, getNextToken) {\r\n    if (!consumed) {\r\n        return 0; // nothing consumed\r\n    }\r\n\r\n    while (isDelim(getNextToken(length), QUESTIONMARK)) {\r\n        if (++consumed > 6) {\r\n            return 0; // too many question marks\r\n        }\r\n\r\n        length++;\r\n    }\r\n\r\n    return length;\r\n}\r\n\r\n// https://drafts.csswg.org/css-syntax/#urange\r\n// Informally, the <urange> production has three forms:\r\n// U+0001\r\n//      Defines a range consisting of a single code point, in this case the code point \"1\".\r\n// U+0001-00ff\r\n//      Defines a range of codepoints between the first and the second value, in this case\r\n//      the range between \"1\" and \"ff\" (255 in decimal) inclusive.\r\n// U+00??\r\n//      Defines a range of codepoints where the \"?\" characters range over all hex digits,\r\n//      in this case defining the same as the value U+0000-00ff.\r\n// In each form, a maximum of 6 digits is allowed for each hexadecimal number (if you treat \"?\" as a hexadecimal digit).\r\n//\r\n// <urange> =\r\n//   u '+' <ident-token> '?'* |\r\n//   u <dimension-token> '?'* |\r\n//   u <number-token> '?'* |\r\n//   u <number-token> <dimension-token> |\r\n//   u <number-token> <number-token> |\r\n//   u '+' '?'+\r\nmodule.exports = function urange(token, getNextToken) {\r\n    var length = 0;\r\n\r\n    // should start with `u` or `U`\r\n    if (token === null || token.type !== IDENT || !cmpChar(token.value, 0, U)) {\r\n        return 0;\r\n    }\r\n\r\n    token = getNextToken(++length);\r\n    if (token === null) {\r\n        return 0;\r\n    }\r\n\r\n    // u '+' <ident-token> '?'*\r\n    // u '+' '?'+\r\n    if (isDelim(token, PLUSSIGN)) {\r\n        token = getNextToken(++length);\r\n        if (token === null) {\r\n            return 0;\r\n        }\r\n\r\n        if (token.type === IDENT) {\r\n            // u '+' <ident-token> '?'*\r\n            return withQuestionMarkSequence(hexSequence(token, 0, true), ++length, getNextToken);\r\n        }\r\n\r\n        if (isDelim(token, QUESTIONMARK)) {\r\n            // u '+' '?'+\r\n            return withQuestionMarkSequence(1, ++length, getNextToken);\r\n        }\r\n\r\n        // Hex digit or question mark is expected\r\n        return 0;\r\n    }\r\n\r\n    // u <number-token> '?'*\r\n    // u <number-token> <dimension-token>\r\n    // u <number-token> <number-token>\r\n    if (token.type === NUMBER) {\r\n        if (!startsWith(token, PLUSSIGN)) {\r\n            return 0;\r\n        }\r\n\r\n        var consumedHexLength = hexSequence(token, 1, true);\r\n        if (consumedHexLength === 0) {\r\n            return 0;\r\n        }\r\n\r\n        token = getNextToken(++length);\r\n        if (token === null) {\r\n            // u <number-token> <eof>\r\n            return length;\r\n        }\r\n\r\n        if (token.type === DIMENSION || token.type === NUMBER) {\r\n            // u <number-token> <dimension-token>\r\n            // u <number-token> <number-token>\r\n            if (!startsWith(token, HYPHENMINUS) || !hexSequence(token, 1, false)) {\r\n                return 0;\r\n            }\r\n\r\n            return length + 1;\r\n        }\r\n\r\n        // u <number-token> '?'*\r\n        return withQuestionMarkSequence(consumedHexLength, length, getNextToken);\r\n    }\r\n\r\n    // u <dimension-token> '?'*\r\n    if (token.type === DIMENSION) {\r\n        if (!startsWith(token, PLUSSIGN)) {\r\n            return 0;\r\n        }\r\n\r\n        return withQuestionMarkSequence(hexSequence(token, 1, true), ++length, getNextToken);\r\n    }\r\n\r\n    return 0;\r\n};\r\n","var tokenizer = require('../tokenizer');\r\nvar isIdentifierStart = tokenizer.isIdentifierStart;\r\nvar isHexDigit = tokenizer.isHexDigit;\r\nvar isDigit = tokenizer.isDigit;\r\nvar cmpStr = tokenizer.cmpStr;\r\nvar consumeNumber = tokenizer.consumeNumber;\r\nvar TYPE = tokenizer.TYPE;\r\nvar anPlusB = require('./generic-an-plus-b');\r\nvar urange = require('./generic-urange');\r\n\r\nvar cssWideKeywords = ['unset', 'initial', 'inherit'];\r\nvar calcFunctionNames = ['calc(', '-moz-calc(', '-webkit-calc('];\r\n\r\n// https://www.w3.org/TR/css-values-3/#lengths\r\nvar LENGTH = {\r\n    // absolute length units\r\n    'px': true,\r\n    'mm': true,\r\n    'cm': true,\r\n    'in': true,\r\n    'pt': true,\r\n    'pc': true,\r\n    'q': true,\r\n\r\n    // relative length units\r\n    'em': true,\r\n    'ex': true,\r\n    'ch': true,\r\n    'rem': true,\r\n\r\n    // viewport-percentage lengths\r\n    'vh': true,\r\n    'vw': true,\r\n    'vmin': true,\r\n    'vmax': true,\r\n    'vm': true\r\n};\r\n\r\nvar ANGLE = {\r\n    'deg': true,\r\n    'grad': true,\r\n    'rad': true,\r\n    'turn': true\r\n};\r\n\r\nvar TIME = {\r\n    's': true,\r\n    'ms': true\r\n};\r\n\r\nvar FREQUENCY = {\r\n    'hz': true,\r\n    'khz': true\r\n};\r\n\r\n// https://www.w3.org/TR/css-values-3/#resolution (https://drafts.csswg.org/css-values/#resolution)\r\nvar RESOLUTION = {\r\n    'dpi': true,\r\n    'dpcm': true,\r\n    'dppx': true,\r\n    'x': true      // https://github.com/w3c/csswg-drafts/issues/461\r\n};\r\n\r\n// https://drafts.csswg.org/css-grid/#fr-unit\r\nvar FLEX = {\r\n    'fr': true\r\n};\r\n\r\n// https://www.w3.org/TR/css3-speech/#mixing-props-voice-volume\r\nvar DECIBEL = {\r\n    'db': true\r\n};\r\n\r\n// https://www.w3.org/TR/css3-speech/#voice-props-voice-pitch\r\nvar SEMITONES = {\r\n    'st': true\r\n};\r\n\r\n// safe char code getter\r\nfunction charCode(str, index) {\r\n    return index < str.length ? str.charCodeAt(index) : 0;\r\n}\r\n\r\nfunction eqStr(actual, expected) {\r\n    return cmpStr(actual, 0, actual.length, expected);\r\n}\r\n\r\nfunction eqStrAny(actual, expected) {\r\n    for (var i = 0; i < expected.length; i++) {\r\n        if (eqStr(actual, expected[i])) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\n// IE postfix hack, i.e. 123\\0 or 123px\\9\r\nfunction isPostfixIeHack(str, offset) {\r\n    if (offset !== str.length - 2) {\r\n        return false;\r\n    }\r\n\r\n    return (\r\n        str.charCodeAt(offset) === 0x005C &&  // U+005C REVERSE SOLIDUS (\\)\r\n        isDigit(str.charCodeAt(offset + 1))\r\n    );\r\n}\r\n\r\nfunction outOfRange(opts, value, numEnd) {\r\n    if (opts && opts.type === 'Range') {\r\n        var num = Number(\r\n            numEnd !== undefined && numEnd !== value.length\r\n                ? value.substr(0, numEnd)\r\n                : value\r\n        );\r\n\r\n        if (isNaN(num)) {\r\n            return true;\r\n        }\r\n\r\n        if (opts.min !== null && num < opts.min) {\r\n            return true;\r\n        }\r\n\r\n        if (opts.max !== null && num > opts.max) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\nfunction consumeFunction(token, getNextToken) {\r\n    var startIdx = token.index;\r\n    var length = 0;\r\n\r\n    // balanced token consuming\r\n    do {\r\n        length++;\r\n\r\n        if (token.balance <= startIdx) {\r\n            break;\r\n        }\r\n    } while (token = getNextToken(length));\r\n\r\n    return length;\r\n}\r\n\r\n// TODO: implement\r\n// can be used wherever <length>, <frequency>, <angle>, <time>, <percentage>, <number>, or <integer> values are allowed\r\n// https://drafts.csswg.org/css-values/#calc-notation\r\nfunction calc(next) {\r\n    return function(token, getNextToken, opts) {\r\n        if (token === null) {\r\n            return 0;\r\n        }\r\n\r\n        if (token.type === TYPE.Function && eqStrAny(token.value, calcFunctionNames)) {\r\n            return consumeFunction(token, getNextToken);\r\n        }\r\n\r\n        return next(token, getNextToken, opts);\r\n    };\r\n}\r\n\r\nfunction tokenType(expectedTokenType) {\r\n    return function(token) {\r\n        if (token === null || token.type !== expectedTokenType) {\r\n            return 0;\r\n        }\r\n\r\n        return 1;\r\n    };\r\n}\r\n\r\nfunction func(name) {\r\n    name = name + '(';\r\n\r\n    return function(token, getNextToken) {\r\n        if (token !== null && eqStr(token.value, name)) {\r\n            return consumeFunction(token, getNextToken);\r\n        }\r\n\r\n        return 0;\r\n    };\r\n}\r\n\r\n// =========================\r\n// Complex types\r\n//\r\n\r\n// https://drafts.csswg.org/css-values-4/#custom-idents\r\n// 4.2. Author-defined Identifiers: the <custom-ident> type\r\n// Some properties accept arbitrary author-defined identifiers as a component value.\r\n// This generic data type is denoted by <custom-ident>, and represents any valid CSS identifier\r\n// that would not be misinterpreted as a pre-defined keyword in that property’s value definition.\r\n//\r\n// See also: https://developer.mozilla.org/en-US/docs/Web/CSS/custom-ident\r\nfunction customIdent(token) {\r\n    if (token === null || token.type !== TYPE.Ident) {\r\n        return 0;\r\n    }\r\n\r\n    var name = token.value.toLowerCase();\r\n\r\n    // The CSS-wide keywords are not valid <custom-ident>s\r\n    if (eqStrAny(name, cssWideKeywords)) {\r\n        return 0;\r\n    }\r\n\r\n    // The default keyword is reserved and is also not a valid <custom-ident>\r\n    if (eqStr(name, 'default')) {\r\n        return 0;\r\n    }\r\n\r\n    // TODO: ignore property specific keywords (as described https://developer.mozilla.org/en-US/docs/Web/CSS/custom-ident)\r\n    // Specifications using <custom-ident> must specify clearly what other keywords\r\n    // are excluded from <custom-ident>, if any—for example by saying that any pre-defined keywords\r\n    // in that property’s value definition are excluded. Excluded keywords are excluded\r\n    // in all ASCII case permutations.\r\n\r\n    return 1;\r\n}\r\n\r\n// https://drafts.csswg.org/css-variables/#typedef-custom-property-name\r\n// A custom property is any property whose name starts with two dashes (U+002D HYPHEN-MINUS), like --foo.\r\n// The <custom-property-name> production corresponds to this: it’s defined as any valid identifier\r\n// that starts with two dashes, except -- itself, which is reserved for future use by CSS.\r\n// NOTE: Current implementation treat `--` as a valid name since most (all?) major browsers treat it as valid.\r\nfunction customPropertyName(token) {\r\n    // ... defined as any valid identifier\r\n    if (token === null || token.type !== TYPE.Ident) {\r\n        return 0;\r\n    }\r\n\r\n    // ... that starts with two dashes (U+002D HYPHEN-MINUS)\r\n    if (charCode(token.value, 0) !== 0x002D || charCode(token.value, 1) !== 0x002D) {\r\n        return 0;\r\n    }\r\n\r\n    return 1;\r\n}\r\n\r\n// https://drafts.csswg.org/css-color-4/#hex-notation\r\n// The syntax of a <hex-color> is a <hash-token> token whose value consists of 3, 4, 6, or 8 hexadecimal digits.\r\n// In other words, a hex color is written as a hash character, \"#\", followed by some number of digits 0-9 or\r\n// letters a-f (the case of the letters doesn’t matter - #00ff00 is identical to #00FF00).\r\nfunction hexColor(token) {\r\n    if (token === null || token.type !== TYPE.Hash) {\r\n        return 0;\r\n    }\r\n\r\n    var length = token.value.length;\r\n\r\n    // valid values (length): #rgb (4), #rgba (5), #rrggbb (7), #rrggbbaa (9)\r\n    if (length !== 4 && length !== 5 && length !== 7 && length !== 9) {\r\n        return 0;\r\n    }\r\n\r\n    for (var i = 1; i < length; i++) {\r\n        if (!isHexDigit(token.value.charCodeAt(i))) {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    return 1;\r\n}\r\n\r\nfunction idSelector(token) {\r\n    if (token === null || token.type !== TYPE.Hash) {\r\n        return 0;\r\n    }\r\n\r\n    if (!isIdentifierStart(charCode(token.value, 1), charCode(token.value, 2), charCode(token.value, 3))) {\r\n        return 0;\r\n    }\r\n\r\n    return 1;\r\n}\r\n\r\n// https://drafts.csswg.org/css-syntax/#any-value\r\n// It represents the entirety of what a valid declaration can have as its value.\r\nfunction declarationValue(token, getNextToken) {\r\n    if (!token) {\r\n        return 0;\r\n    }\r\n\r\n    var length = 0;\r\n    var level = 0;\r\n    var startIdx = token.index;\r\n\r\n    // The <declaration-value> production matches any sequence of one or more tokens,\r\n    // so long as the sequence ...\r\n    scan:\r\n    do {\r\n        switch (token.type) {\r\n            // ... does not contain <bad-string-token>, <bad-url-token>,\r\n            case TYPE.BadString:\r\n            case TYPE.BadUrl:\r\n                break scan;\r\n\r\n            // ... unmatched <)-token>, <]-token>, or <}-token>,\r\n            case TYPE.RightCurlyBracket:\r\n            case TYPE.RightParenthesis:\r\n            case TYPE.RightSquareBracket:\r\n                if (token.balance > token.index || token.balance < startIdx) {\r\n                    break scan;\r\n                }\r\n\r\n                level--;\r\n                break;\r\n\r\n            // ... or top-level <semicolon-token> tokens\r\n            case TYPE.Semicolon:\r\n                if (level === 0) {\r\n                    break scan;\r\n                }\r\n\r\n                break;\r\n\r\n            // ... or <delim-token> tokens with a value of \"!\"\r\n            case TYPE.Delim:\r\n                if (token.value === '!' && level === 0) {\r\n                    break scan;\r\n                }\r\n\r\n                break;\r\n\r\n            case TYPE.Function:\r\n            case TYPE.LeftParenthesis:\r\n            case TYPE.LeftSquareBracket:\r\n            case TYPE.LeftCurlyBracket:\r\n                level++;\r\n                break;\r\n        }\r\n\r\n        length++;\r\n\r\n        // until balance closing\r\n        if (token.balance <= startIdx) {\r\n            break;\r\n        }\r\n    } while (token = getNextToken(length));\r\n\r\n    return length;\r\n}\r\n\r\n// https://drafts.csswg.org/css-syntax/#any-value\r\n// The <any-value> production is identical to <declaration-value>, but also\r\n// allows top-level <semicolon-token> tokens and <delim-token> tokens\r\n// with a value of \"!\". It represents the entirety of what valid CSS can be in any context.\r\nfunction anyValue(token, getNextToken) {\r\n    if (!token) {\r\n        return 0;\r\n    }\r\n\r\n    var startIdx = token.index;\r\n    var length = 0;\r\n\r\n    // The <any-value> production matches any sequence of one or more tokens,\r\n    // so long as the sequence ...\r\n    scan:\r\n    do {\r\n        switch (token.type) {\r\n            // ... does not contain <bad-string-token>, <bad-url-token>,\r\n            case TYPE.BadString:\r\n            case TYPE.BadUrl:\r\n                break scan;\r\n\r\n            // ... unmatched <)-token>, <]-token>, or <}-token>,\r\n            case TYPE.RightCurlyBracket:\r\n            case TYPE.RightParenthesis:\r\n            case TYPE.RightSquareBracket:\r\n                if (token.balance > token.index || token.balance < startIdx) {\r\n                    break scan;\r\n                }\r\n\r\n                break;\r\n        }\r\n\r\n        length++;\r\n\r\n        // until balance closing\r\n        if (token.balance <= startIdx) {\r\n            break;\r\n        }\r\n    } while (token = getNextToken(length));\r\n\r\n    return length;\r\n}\r\n\r\n// =========================\r\n// Dimensions\r\n//\r\n\r\nfunction dimension(type) {\r\n    return function(token, getNextToken, opts) {\r\n        if (token === null || token.type !== TYPE.Dimension) {\r\n            return 0;\r\n        }\r\n\r\n        var numberEnd = consumeNumber(token.value, 0);\r\n\r\n        // check unit\r\n        if (type !== null) {\r\n            // check for IE postfix hack, i.e. 123px\\0 or 123px\\9\r\n            var reverseSolidusOffset = token.value.indexOf('\\\\', numberEnd);\r\n            var unit = reverseSolidusOffset === -1 || !isPostfixIeHack(token.value, reverseSolidusOffset)\r\n                ? token.value.substr(numberEnd)\r\n                : token.value.substring(numberEnd, reverseSolidusOffset);\r\n\r\n            if (type.hasOwnProperty(unit.toLowerCase()) === false) {\r\n                return 0;\r\n            }\r\n        }\r\n\r\n        // check range if specified\r\n        if (outOfRange(opts, token.value, numberEnd)) {\r\n            return 0;\r\n        }\r\n\r\n        return 1;\r\n    };\r\n}\r\n\r\n// =========================\r\n// Percentage\r\n//\r\n\r\n// §5.5. Percentages: the <percentage> type\r\n// https://drafts.csswg.org/css-values-4/#percentages\r\nfunction percentage(token, getNextToken, opts) {\r\n    // ... corresponds to the <percentage-token> production\r\n    if (token === null || token.type !== TYPE.Percentage) {\r\n        return 0;\r\n    }\r\n\r\n    // check range if specified\r\n    if (outOfRange(opts, token.value, token.value.length - 1)) {\r\n        return 0;\r\n    }\r\n\r\n    return 1;\r\n}\r\n\r\n// =========================\r\n// Numeric\r\n//\r\n\r\n// https://drafts.csswg.org/css-values-4/#numbers\r\n// The value <zero> represents a literal number with the value 0. Expressions that merely\r\n// evaluate to a <number> with the value 0 (for example, calc(0)) do not match <zero>;\r\n// only literal <number-token>s do.\r\nfunction zero(next) {\r\n    if (typeof next !== 'function') {\r\n        next = function() {\r\n            return 0;\r\n        };\r\n    }\r\n\r\n    return function(token, getNextToken, opts) {\r\n        if (token !== null && token.type === TYPE.Number) {\r\n            if (Number(token.value) === 0) {\r\n                return 1;\r\n            }\r\n        }\r\n\r\n        return next(token, getNextToken, opts);\r\n    };\r\n}\r\n\r\n// § 5.3. Real Numbers: the <number> type\r\n// https://drafts.csswg.org/css-values-4/#numbers\r\n// Number values are denoted by <number>, and represent real numbers, possibly with a fractional component.\r\n// ... It corresponds to the <number-token> production\r\nfunction number(token, getNextToken, opts) {\r\n    if (token === null) {\r\n        return 0;\r\n    }\r\n\r\n    var numberEnd = consumeNumber(token.value, 0);\r\n    var isNumber = numberEnd === token.value.length;\r\n    if (!isNumber && !isPostfixIeHack(token.value, numberEnd)) {\r\n        return 0;\r\n    }\r\n\r\n    // check range if specified\r\n    if (outOfRange(opts, token.value, numberEnd)) {\r\n        return 0;\r\n    }\r\n\r\n    return 1;\r\n}\r\n\r\n// §5.2. Integers: the <integer> type\r\n// https://drafts.csswg.org/css-values-4/#integers\r\nfunction integer(token, getNextToken, opts) {\r\n    // ... corresponds to a subset of the <number-token> production\r\n    if (token === null || token.type !== TYPE.Number) {\r\n        return 0;\r\n    }\r\n\r\n    // The first digit of an integer may be immediately preceded by `-` or `+` to indicate the integer’s sign.\r\n    var i = token.value.charCodeAt(0) === 0x002B ||       // U+002B PLUS SIGN (+)\r\n            token.value.charCodeAt(0) === 0x002D ? 1 : 0; // U+002D HYPHEN-MINUS (-)\r\n\r\n    // When written literally, an integer is one or more decimal digits 0 through 9 ...\r\n    for (; i < token.value.length; i++) {\r\n        if (!isDigit(token.value.charCodeAt(i))) {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    // check range if specified\r\n    if (outOfRange(opts, token.value, i)) {\r\n        return 0;\r\n    }\r\n\r\n    return 1;\r\n}\r\n\r\nmodule.exports = {\r\n    // token types\r\n    'ident-token': tokenType(TYPE.Ident),\r\n    'function-token': tokenType(TYPE.Function),\r\n    'at-keyword-token': tokenType(TYPE.AtKeyword),\r\n    'hash-token': tokenType(TYPE.Hash),\r\n    'string-token': tokenType(TYPE.String),\r\n    'bad-string-token': tokenType(TYPE.BadString),\r\n    'url-token': tokenType(TYPE.Url),\r\n    'bad-url-token': tokenType(TYPE.BadUrl),\r\n    'delim-token': tokenType(TYPE.Delim),\r\n    'number-token': tokenType(TYPE.Number),\r\n    'percentage-token': tokenType(TYPE.Percentage),\r\n    'dimension-token': tokenType(TYPE.Dimension),\r\n    'whitespace-token': tokenType(TYPE.WhiteSpace),\r\n    'CDO-token': tokenType(TYPE.CDO),\r\n    'CDC-token': tokenType(TYPE.CDC),\r\n    'colon-token': tokenType(TYPE.Colon),\r\n    'semicolon-token': tokenType(TYPE.Semicolon),\r\n    'comma-token': tokenType(TYPE.Comma),\r\n    '[-token': tokenType(TYPE.LeftSquareBracket),\r\n    ']-token': tokenType(TYPE.RightSquareBracket),\r\n    '(-token': tokenType(TYPE.LeftParenthesis),\r\n    ')-token': tokenType(TYPE.RightParenthesis),\r\n    '{-token': tokenType(TYPE.LeftCurlyBracket),\r\n    '}-token': tokenType(TYPE.RightCurlyBracket),\r\n\r\n    // token type aliases\r\n    'string': tokenType(TYPE.String),\r\n    'ident': tokenType(TYPE.Ident),\r\n\r\n    // complex types\r\n    'custom-ident': customIdent,\r\n    'custom-property-name': customPropertyName,\r\n    'hex-color': hexColor,\r\n    'id-selector': idSelector, // element( <id-selector> )\r\n    'an-plus-b': anPlusB,\r\n    'urange': urange,\r\n    'declaration-value': declarationValue,\r\n    'any-value': anyValue,\r\n\r\n    // dimensions\r\n    'dimension': calc(dimension(null)),\r\n    'angle': calc(dimension(ANGLE)),\r\n    'decibel': calc(dimension(DECIBEL)),\r\n    'frequency': calc(dimension(FREQUENCY)),\r\n    'flex': calc(dimension(FLEX)),\r\n    'length': calc(zero(dimension(LENGTH))),\r\n    'resolution': calc(dimension(RESOLUTION)),\r\n    'semitones': calc(dimension(SEMITONES)),\r\n    'time': calc(dimension(TIME)),\r\n\r\n    // percentage\r\n    'percentage': calc(percentage),\r\n\r\n    // numeric\r\n    'zero': zero(),\r\n    'number': calc(number),\r\n    'integer': calc(integer),\r\n\r\n    // old IE stuff\r\n    '-ms-legacy-expression': func('expression')\r\n};\r\n","var createCustomError = require('../utils/createCustomError');\r\n\r\nmodule.exports = function SyntaxError(message, input, offset) {\r\n    var error = createCustomError('SyntaxError', message);\r\n\r\n    error.input = input;\r\n    error.offset = offset;\r\n    error.rawMessage = message;\r\n    error.message = error.rawMessage + '\\n' +\r\n        '  ' + error.input + '\\n' +\r\n        '--' + new Array((error.offset || error.input.length) + 1).join('-') + '^';\r\n\r\n    return error;\r\n};\r\n","var SyntaxError = require('./SyntaxError');\r\n\r\nvar TAB = 9;\r\nvar N = 10;\r\nvar F = 12;\r\nvar R = 13;\r\nvar SPACE = 32;\r\n\r\nvar Tokenizer = function(str) {\r\n    this.str = str;\r\n    this.pos = 0;\r\n};\r\n\r\nTokenizer.prototype = {\r\n    charCodeAt: function(pos) {\r\n        return pos < this.str.length ? this.str.charCodeAt(pos) : 0;\r\n    },\r\n    charCode: function() {\r\n        return this.charCodeAt(this.pos);\r\n    },\r\n    nextCharCode: function() {\r\n        return this.charCodeAt(this.pos + 1);\r\n    },\r\n    nextNonWsCode: function(pos) {\r\n        return this.charCodeAt(this.findWsEnd(pos));\r\n    },\r\n    findWsEnd: function(pos) {\r\n        for (; pos < this.str.length; pos++) {\r\n            var code = this.str.charCodeAt(pos);\r\n            if (code !== R && code !== N && code !== F && code !== SPACE && code !== TAB) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        return pos;\r\n    },\r\n    substringToPos: function(end) {\r\n        return this.str.substring(this.pos, this.pos = end);\r\n    },\r\n    eat: function(code) {\r\n        if (this.charCode() !== code) {\r\n            this.error('Expect `' + String.fromCharCode(code) + '`');\r\n        }\r\n\r\n        this.pos++;\r\n    },\r\n    peek: function() {\r\n        return this.pos < this.str.length ? this.str.charAt(this.pos++) : '';\r\n    },\r\n    error: function(message) {\r\n        throw new SyntaxError(message, this.str, this.pos);\r\n    }\r\n};\r\n\r\nmodule.exports = Tokenizer;\r\n","var Tokenizer = require('./tokenizer');\r\nvar TAB = 9;\r\nvar N = 10;\r\nvar F = 12;\r\nvar R = 13;\r\nvar SPACE = 32;\r\nvar EXCLAMATIONMARK = 33;    // !\r\nvar NUMBERSIGN = 35;         // #\r\nvar AMPERSAND = 38;          // &\r\nvar APOSTROPHE = 39;         // '\r\nvar LEFTPARENTHESIS = 40;    // (\r\nvar RIGHTPARENTHESIS = 41;   // )\r\nvar ASTERISK = 42;           // *\r\nvar PLUSSIGN = 43;           // +\r\nvar COMMA = 44;              // ,\r\nvar HYPERMINUS = 45;         // -\r\nvar LESSTHANSIGN = 60;       // <\r\nvar GREATERTHANSIGN = 62;    // >\r\nvar QUESTIONMARK = 63;       // ?\r\nvar COMMERCIALAT = 64;       // @\r\nvar LEFTSQUAREBRACKET = 91;  // [\r\nvar RIGHTSQUAREBRACKET = 93; // ]\r\nvar LEFTCURLYBRACKET = 123;  // {\r\nvar VERTICALLINE = 124;      // |\r\nvar RIGHTCURLYBRACKET = 125; // }\r\nvar INFINITY = 8734;         // ∞\r\nvar NAME_CHAR = createCharMap(function(ch) {\r\n    return /[a-zA-Z0-9\\-]/.test(ch);\r\n});\r\nvar COMBINATOR_PRECEDENCE = {\r\n    ' ': 1,\r\n    '&&': 2,\r\n    '||': 3,\r\n    '|': 4\r\n};\r\n\r\nfunction createCharMap(fn) {\r\n    var array = typeof Uint32Array === 'function' ? new Uint32Array(128) : new Array(128);\r\n    for (var i = 0; i < 128; i++) {\r\n        array[i] = fn(String.fromCharCode(i)) ? 1 : 0;\r\n    }\r\n    return array;\r\n}\r\n\r\nfunction scanSpaces(tokenizer) {\r\n    return tokenizer.substringToPos(\r\n        tokenizer.findWsEnd(tokenizer.pos)\r\n    );\r\n}\r\n\r\nfunction scanWord(tokenizer) {\r\n    var end = tokenizer.pos;\r\n\r\n    for (; end < tokenizer.str.length; end++) {\r\n        var code = tokenizer.str.charCodeAt(end);\r\n        if (code >= 128 || NAME_CHAR[code] === 0) {\r\n            break;\r\n        }\r\n    }\r\n\r\n    if (tokenizer.pos === end) {\r\n        tokenizer.error('Expect a keyword');\r\n    }\r\n\r\n    return tokenizer.substringToPos(end);\r\n}\r\n\r\nfunction scanNumber(tokenizer) {\r\n    var end = tokenizer.pos;\r\n\r\n    for (; end < tokenizer.str.length; end++) {\r\n        var code = tokenizer.str.charCodeAt(end);\r\n        if (code < 48 || code > 57) {\r\n            break;\r\n        }\r\n    }\r\n\r\n    if (tokenizer.pos === end) {\r\n        tokenizer.error('Expect a number');\r\n    }\r\n\r\n    return tokenizer.substringToPos(end);\r\n}\r\n\r\nfunction scanString(tokenizer) {\r\n    var end = tokenizer.str.indexOf('\\'', tokenizer.pos + 1);\r\n\r\n    if (end === -1) {\r\n        tokenizer.pos = tokenizer.str.length;\r\n        tokenizer.error('Expect an apostrophe');\r\n    }\r\n\r\n    return tokenizer.substringToPos(end + 1);\r\n}\r\n\r\nfunction readMultiplierRange(tokenizer) {\r\n    var min = null;\r\n    var max = null;\r\n\r\n    tokenizer.eat(LEFTCURLYBRACKET);\r\n\r\n    min = scanNumber(tokenizer);\r\n\r\n    if (tokenizer.charCode() === COMMA) {\r\n        tokenizer.pos++;\r\n        if (tokenizer.charCode() !== RIGHTCURLYBRACKET) {\r\n            max = scanNumber(tokenizer);\r\n        }\r\n    } else {\r\n        max = min;\r\n    }\r\n\r\n    tokenizer.eat(RIGHTCURLYBRACKET);\r\n\r\n    return {\r\n        min: Number(min),\r\n        max: max ? Number(max) : 0\r\n    };\r\n}\r\n\r\nfunction readMultiplier(tokenizer) {\r\n    var range = null;\r\n    var comma = false;\r\n\r\n    switch (tokenizer.charCode()) {\r\n        case ASTERISK:\r\n            tokenizer.pos++;\r\n\r\n            range = {\r\n                min: 0,\r\n                max: 0\r\n            };\r\n\r\n            break;\r\n\r\n        case PLUSSIGN:\r\n            tokenizer.pos++;\r\n\r\n            range = {\r\n                min: 1,\r\n                max: 0\r\n            };\r\n\r\n            break;\r\n\r\n        case QUESTIONMARK:\r\n            tokenizer.pos++;\r\n\r\n            range = {\r\n                min: 0,\r\n                max: 1\r\n            };\r\n\r\n            break;\r\n\r\n        case NUMBERSIGN:\r\n            tokenizer.pos++;\r\n\r\n            comma = true;\r\n\r\n            if (tokenizer.charCode() === LEFTCURLYBRACKET) {\r\n                range = readMultiplierRange(tokenizer);\r\n            } else {\r\n                range = {\r\n                    min: 1,\r\n                    max: 0\r\n                };\r\n            }\r\n\r\n            break;\r\n\r\n        case LEFTCURLYBRACKET:\r\n            range = readMultiplierRange(tokenizer);\r\n            break;\r\n\r\n        default:\r\n            return null;\r\n    }\r\n\r\n    return {\r\n        type: 'Multiplier',\r\n        comma: comma,\r\n        min: range.min,\r\n        max: range.max,\r\n        term: null\r\n    };\r\n}\r\n\r\nfunction maybeMultiplied(tokenizer, node) {\r\n    var multiplier = readMultiplier(tokenizer);\r\n\r\n    if (multiplier !== null) {\r\n        multiplier.term = node;\r\n        return multiplier;\r\n    }\r\n\r\n    return node;\r\n}\r\n\r\nfunction maybeToken(tokenizer) {\r\n    var ch = tokenizer.peek();\r\n\r\n    if (ch === '') {\r\n        return null;\r\n    }\r\n\r\n    return {\r\n        type: 'Token',\r\n        value: ch\r\n    };\r\n}\r\n\r\nfunction readProperty(tokenizer) {\r\n    var name;\r\n\r\n    tokenizer.eat(LESSTHANSIGN);\r\n    tokenizer.eat(APOSTROPHE);\r\n\r\n    name = scanWord(tokenizer);\r\n\r\n    tokenizer.eat(APOSTROPHE);\r\n    tokenizer.eat(GREATERTHANSIGN);\r\n\r\n    return maybeMultiplied(tokenizer, {\r\n        type: 'Property',\r\n        name: name\r\n    });\r\n}\r\n\r\n// https://drafts.csswg.org/css-values-3/#numeric-ranges\r\n// 4.1. Range Restrictions and Range Definition Notation\r\n//\r\n// Range restrictions can be annotated in the numeric type notation using CSS bracketed\r\n// range notation—[min,max]—within the angle brackets, after the identifying keyword,\r\n// indicating a closed range between (and including) min and max.\r\n// For example, <integer [0, 10]> indicates an integer between 0 and 10, inclusive.\r\nfunction readTypeRange(tokenizer) {\r\n    // use null for Infinity to make AST format JSON serializable/deserializable\r\n    var min = null; // -Infinity\r\n    var max = null; // Infinity\r\n    var sign = 1;\r\n\r\n    tokenizer.eat(LEFTSQUAREBRACKET);\r\n\r\n    if (tokenizer.charCode() === HYPERMINUS) {\r\n        tokenizer.peek();\r\n        sign = -1;\r\n    }\r\n\r\n    if (sign == -1 && tokenizer.charCode() === INFINITY) {\r\n        tokenizer.peek();\r\n    } else {\r\n        min = sign * Number(scanNumber(tokenizer));\r\n    }\r\n\r\n    scanSpaces(tokenizer);\r\n    tokenizer.eat(COMMA);\r\n    scanSpaces(tokenizer);\r\n\r\n    if (tokenizer.charCode() === INFINITY) {\r\n        tokenizer.peek();\r\n    } else {\r\n        sign = 1;\r\n\r\n        if (tokenizer.charCode() === HYPERMINUS) {\r\n            tokenizer.peek();\r\n            sign = -1;\r\n        }\r\n\r\n        max = sign * Number(scanNumber(tokenizer));\r\n    }\r\n\r\n    tokenizer.eat(RIGHTSQUAREBRACKET);\r\n\r\n    // If no range is indicated, either by using the bracketed range notation\r\n    // or in the property description, then [−∞,∞] is assumed.\r\n    if (min === null && max === null) {\r\n        return null;\r\n    }\r\n\r\n    return {\r\n        type: 'Range',\r\n        min: min,\r\n        max: max\r\n    };\r\n}\r\n\r\nfunction readType(tokenizer) {\r\n    var name;\r\n    var opts = null;\r\n\r\n    tokenizer.eat(LESSTHANSIGN);\r\n    name = scanWord(tokenizer);\r\n\r\n    if (tokenizer.charCode() === LEFTPARENTHESIS &&\r\n        tokenizer.nextCharCode() === RIGHTPARENTHESIS) {\r\n        tokenizer.pos += 2;\r\n        name += '()';\r\n    }\r\n\r\n    if (tokenizer.charCodeAt(tokenizer.findWsEnd(tokenizer.pos)) === LEFTSQUAREBRACKET) {\r\n        scanSpaces(tokenizer);\r\n        opts = readTypeRange(tokenizer);\r\n    }\r\n\r\n    tokenizer.eat(GREATERTHANSIGN);\r\n\r\n    return maybeMultiplied(tokenizer, {\r\n        type: 'Type',\r\n        name: name,\r\n        opts: opts\r\n    });\r\n}\r\n\r\nfunction readKeywordOrFunction(tokenizer) {\r\n    var name;\r\n\r\n    name = scanWord(tokenizer);\r\n\r\n    if (tokenizer.charCode() === LEFTPARENTHESIS) {\r\n        tokenizer.pos++;\r\n\r\n        return {\r\n            type: 'Function',\r\n            name: name\r\n        };\r\n    }\r\n\r\n    return maybeMultiplied(tokenizer, {\r\n        type: 'Keyword',\r\n        name: name\r\n    });\r\n}\r\n\r\nfunction regroupTerms(terms, combinators) {\r\n    function createGroup(terms, combinator) {\r\n        return {\r\n            type: 'Group',\r\n            terms: terms,\r\n            combinator: combinator,\r\n            disallowEmpty: false,\r\n            explicit: false\r\n        };\r\n    }\r\n\r\n    combinators = Object.keys(combinators).sort(function(a, b) {\r\n        return COMBINATOR_PRECEDENCE[a] - COMBINATOR_PRECEDENCE[b];\r\n    });\r\n\r\n    while (combinators.length > 0) {\r\n        var combinator = combinators.shift();\r\n        for (var i = 0, subgroupStart = 0; i < terms.length; i++) {\r\n            var term = terms[i];\r\n            if (term.type === 'Combinator') {\r\n                if (term.value === combinator) {\r\n                    if (subgroupStart === -1) {\r\n                        subgroupStart = i - 1;\r\n                    }\r\n                    terms.splice(i, 1);\r\n                    i--;\r\n                } else {\r\n                    if (subgroupStart !== -1 && i - subgroupStart > 1) {\r\n                        terms.splice(\r\n                            subgroupStart,\r\n                            i - subgroupStart,\r\n                            createGroup(terms.slice(subgroupStart, i), combinator)\r\n                        );\r\n                        i = subgroupStart + 1;\r\n                    }\r\n                    subgroupStart = -1;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (subgroupStart !== -1 && combinators.length) {\r\n            terms.splice(\r\n                subgroupStart,\r\n                i - subgroupStart,\r\n                createGroup(terms.slice(subgroupStart, i), combinator)\r\n            );\r\n        }\r\n    }\r\n\r\n    return combinator;\r\n}\r\n\r\nfunction readImplicitGroup(tokenizer) {\r\n    var terms = [];\r\n    var combinators = {};\r\n    var token;\r\n    var prevToken = null;\r\n    var prevTokenPos = tokenizer.pos;\r\n\r\n    while (token = peek(tokenizer)) {\r\n        if (token.type !== 'Spaces') {\r\n            if (token.type === 'Combinator') {\r\n                // check for combinator in group beginning and double combinator sequence\r\n                if (prevToken === null || prevToken.type === 'Combinator') {\r\n                    tokenizer.pos = prevTokenPos;\r\n                    tokenizer.error('Unexpected combinator');\r\n                }\r\n\r\n                combinators[token.value] = true;\r\n            } else if (prevToken !== null && prevToken.type !== 'Combinator') {\r\n                combinators[' '] = true;  // a b\r\n                terms.push({\r\n                    type: 'Combinator',\r\n                    value: ' '\r\n                });\r\n            }\r\n\r\n            terms.push(token);\r\n            prevToken = token;\r\n            prevTokenPos = tokenizer.pos;\r\n        }\r\n    }\r\n\r\n    // check for combinator in group ending\r\n    if (prevToken !== null && prevToken.type === 'Combinator') {\r\n        tokenizer.pos -= prevTokenPos;\r\n        tokenizer.error('Unexpected combinator');\r\n    }\r\n\r\n    return {\r\n        type: 'Group',\r\n        terms: terms,\r\n        combinator: regroupTerms(terms, combinators) || ' ',\r\n        disallowEmpty: false,\r\n        explicit: false\r\n    };\r\n}\r\n\r\nfunction readGroup(tokenizer) {\r\n    var result;\r\n\r\n    tokenizer.eat(LEFTSQUAREBRACKET);\r\n    result = readImplicitGroup(tokenizer);\r\n    tokenizer.eat(RIGHTSQUAREBRACKET);\r\n\r\n    result.explicit = true;\r\n\r\n    if (tokenizer.charCode() === EXCLAMATIONMARK) {\r\n        tokenizer.pos++;\r\n        result.disallowEmpty = true;\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nfunction peek(tokenizer) {\r\n    var code = tokenizer.charCode();\r\n\r\n    if (code < 128 && NAME_CHAR[code] === 1) {\r\n        return readKeywordOrFunction(tokenizer);\r\n    }\r\n\r\n    switch (code) {\r\n        case RIGHTSQUAREBRACKET:\r\n            // don't eat, stop scan a group\r\n            break;\r\n\r\n        case LEFTSQUAREBRACKET:\r\n            return maybeMultiplied(tokenizer, readGroup(tokenizer));\r\n\r\n        case LESSTHANSIGN:\r\n            return tokenizer.nextCharCode() === APOSTROPHE\r\n                ? readProperty(tokenizer)\r\n                : readType(tokenizer);\r\n\r\n        case VERTICALLINE:\r\n            return {\r\n                type: 'Combinator',\r\n                value: tokenizer.substringToPos(\r\n                    tokenizer.nextCharCode() === VERTICALLINE\r\n                        ? tokenizer.pos + 2\r\n                        : tokenizer.pos + 1\r\n                )\r\n            };\r\n\r\n        case AMPERSAND:\r\n            tokenizer.pos++;\r\n            tokenizer.eat(AMPERSAND);\r\n\r\n            return {\r\n                type: 'Combinator',\r\n                value: '&&'\r\n            };\r\n\r\n        case COMMA:\r\n            tokenizer.pos++;\r\n            return {\r\n                type: 'Comma'\r\n            };\r\n\r\n        case APOSTROPHE:\r\n            return maybeMultiplied(tokenizer, {\r\n                type: 'String',\r\n                value: scanString(tokenizer)\r\n            });\r\n\r\n        case SPACE:\r\n        case TAB:\r\n        case N:\r\n        case R:\r\n        case F:\r\n            return {\r\n                type: 'Spaces',\r\n                value: scanSpaces(tokenizer)\r\n            };\r\n\r\n        case COMMERCIALAT:\r\n            code = tokenizer.nextCharCode();\r\n\r\n            if (code < 128 && NAME_CHAR[code] === 1) {\r\n                tokenizer.pos++;\r\n                return {\r\n                    type: 'AtKeyword',\r\n                    name: scanWord(tokenizer)\r\n                };\r\n            }\r\n\r\n            return maybeToken(tokenizer);\r\n\r\n        case ASTERISK:\r\n        case PLUSSIGN:\r\n        case QUESTIONMARK:\r\n        case NUMBERSIGN:\r\n        case EXCLAMATIONMARK:\r\n            // prohibited tokens (used as a multiplier start)\r\n            break;\r\n\r\n        case LEFTCURLYBRACKET:\r\n            // LEFTCURLYBRACKET is allowed since mdn/data uses it w/o quoting\r\n            // check next char isn't a number, because it's likely a disjoined multiplier\r\n            code = tokenizer.nextCharCode();\r\n\r\n            if (code < 48 || code > 57) {\r\n                return maybeToken(tokenizer);\r\n            }\r\n\r\n            break;\r\n\r\n        default:\r\n            return maybeToken(tokenizer);\r\n    }\r\n}\r\n\r\nfunction parse(source) {\r\n    var tokenizer = new Tokenizer(source);\r\n    var result = readImplicitGroup(tokenizer);\r\n\r\n    if (tokenizer.pos !== source.length) {\r\n        tokenizer.error('Unexpected input');\r\n    }\r\n\r\n    // reduce redundant groups with single group term\r\n    if (result.terms.length === 1 && result.terms[0].type === 'Group') {\r\n        result = result.terms[0];\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\n// warm up parse to elimitate code branches that never execute\r\n// fix soft deoptimizations (insufficient type feedback)\r\nparse('[a&&<b>#|<\\'c\\'>*||e() f{2} /,(% g#{1,2} h{2,})]!');\r\n\r\nmodule.exports = parse;\r\n","var noop = function() {};\r\n\r\nfunction ensureFunction(value) {\r\n    return typeof value === 'function' ? value : noop;\r\n}\r\n\r\nmodule.exports = function(node, options, context) {\r\n    function walk(node) {\r\n        enter.call(context, node);\r\n\r\n        switch (node.type) {\r\n            case 'Group':\r\n                node.terms.forEach(walk);\r\n                break;\r\n\r\n            case 'Multiplier':\r\n                walk(node.term);\r\n                break;\r\n\r\n            case 'Type':\r\n            case 'Property':\r\n            case 'Keyword':\r\n            case 'AtKeyword':\r\n            case 'Function':\r\n            case 'String':\r\n            case 'Token':\r\n            case 'Comma':\r\n                break;\r\n\r\n            default:\r\n                throw new Error('Unknown type: ' + node.type);\r\n        }\r\n\r\n        leave.call(context, node);\r\n    }\r\n\r\n    var enter = noop;\r\n    var leave = noop;\r\n\r\n    if (typeof options === 'function') {\r\n        enter = options;\r\n    } else if (options) {\r\n        enter = ensureFunction(options.enter);\r\n        leave = ensureFunction(options.leave);\r\n    }\r\n\r\n    if (enter === noop && leave === noop) {\r\n        throw new Error('Neither `enter` nor `leave` walker handler is set or both aren\\'t a function');\r\n    }\r\n\r\n    walk(node, context);\r\n};\r\n","var tokenize = require('../tokenizer');\r\nvar TokenStream = require('../common/TokenStream');\r\nvar tokenStream = new TokenStream();\r\nvar astToTokens = {\r\n    decorator: function(handlers) {\r\n        var curNode = null;\r\n        var prev = { len: 0, node: null };\r\n        var nodes = [prev];\r\n        var buffer = '';\r\n\r\n        return {\r\n            children: handlers.children,\r\n            node: function(node) {\r\n                var tmp = curNode;\r\n                curNode = node;\r\n                handlers.node.call(this, node);\r\n                curNode = tmp;\r\n            },\r\n            chunk: function(chunk) {\r\n                buffer += chunk;\r\n                if (prev.node !== curNode) {\r\n                    nodes.push({\r\n                        len: chunk.length,\r\n                        node: curNode\r\n                    });\r\n                } else {\r\n                    prev.len += chunk.length;\r\n                }\r\n            },\r\n            result: function() {\r\n                return prepareTokens(buffer, nodes);\r\n            }\r\n        };\r\n    }\r\n};\r\n\r\nfunction prepareTokens(str, nodes) {\r\n    var tokens = [];\r\n    var nodesOffset = 0;\r\n    var nodesIndex = 0;\r\n    var currentNode = nodes ? nodes[nodesIndex].node : null;\r\n\r\n    tokenize(str, tokenStream);\r\n\r\n    while (!tokenStream.eof) {\r\n        if (nodes) {\r\n            while (nodesIndex < nodes.length && nodesOffset + nodes[nodesIndex].len <= tokenStream.tokenStart) {\r\n                nodesOffset += nodes[nodesIndex++].len;\r\n                currentNode = nodes[nodesIndex].node;\r\n            }\r\n        }\r\n\r\n        tokens.push({\r\n            type: tokenStream.tokenType,\r\n            value: tokenStream.getTokenValue(),\r\n            index: tokenStream.tokenIndex, // TODO: remove it, temporary solution\r\n            balance: tokenStream.balance[tokenStream.tokenIndex], // TODO: remove it, temporary solution\r\n            node: currentNode\r\n        });\r\n        tokenStream.next();\r\n        // console.log({ ...tokens[tokens.length - 1], node: undefined });\r\n    }\r\n\r\n    return tokens;\r\n}\r\n\r\nmodule.exports = function(value, syntax) {\r\n    if (typeof value === 'string') {\r\n        return prepareTokens(value, null);\r\n    }\r\n\r\n    return syntax.generate(value, astToTokens);\r\n};\r\n","var parse = require('../definition-syntax/parse');\r\n\r\nvar MATCH = { type: 'Match' };\r\nvar MISMATCH = { type: 'Mismatch' };\r\nvar DISALLOW_EMPTY = { type: 'DisallowEmpty' };\r\nvar LEFTPARENTHESIS = 40;  // (\r\nvar RIGHTPARENTHESIS = 41; // )\r\n\r\nfunction createCondition(match, thenBranch, elseBranch) {\r\n    // reduce node count\r\n    if (thenBranch === MATCH && elseBranch === MISMATCH) {\r\n        return match;\r\n    }\r\n\r\n    if (match === MATCH && thenBranch === MATCH && elseBranch === MATCH) {\r\n        return match;\r\n    }\r\n\r\n    if (match.type === 'If' && match.else === MISMATCH && thenBranch === MATCH) {\r\n        thenBranch = match.then;\r\n        match = match.match;\r\n    }\r\n\r\n    return {\r\n        type: 'If',\r\n        match: match,\r\n        then: thenBranch,\r\n        else: elseBranch\r\n    };\r\n}\r\n\r\nfunction isFunctionType(name) {\r\n    return (\r\n        name.length > 2 &&\r\n        name.charCodeAt(name.length - 2) === LEFTPARENTHESIS &&\r\n        name.charCodeAt(name.length - 1) === RIGHTPARENTHESIS\r\n    );\r\n}\r\n\r\nfunction isEnumCapatible(term) {\r\n    return (\r\n        term.type === 'Keyword' ||\r\n        term.type === 'AtKeyword' ||\r\n        term.type === 'Function' ||\r\n        term.type === 'Type' && isFunctionType(term.name)\r\n    );\r\n}\r\n\r\nfunction buildGroupMatchGraph(combinator, terms, atLeastOneTermMatched) {\r\n    switch (combinator) {\r\n        case ' ':\r\n            // Juxtaposing components means that all of them must occur, in the given order.\r\n            //\r\n            // a b c\r\n            // =\r\n            // match a\r\n            //   then match b\r\n            //     then match c\r\n            //       then MATCH\r\n            //       else MISMATCH\r\n            //     else MISMATCH\r\n            //   else MISMATCH\r\n            var result = MATCH;\r\n\r\n            for (var i = terms.length - 1; i >= 0; i--) {\r\n                var term = terms[i];\r\n\r\n                result = createCondition(\r\n                    term,\r\n                    result,\r\n                    MISMATCH\r\n                );\r\n            };\r\n\r\n            return result;\r\n\r\n        case '|':\r\n            // A bar (|) separates two or more alternatives: exactly one of them must occur.\r\n            //\r\n            // a | b | c\r\n            // =\r\n            // match a\r\n            //   then MATCH\r\n            //   else match b\r\n            //     then MATCH\r\n            //     else match c\r\n            //       then MATCH\r\n            //       else MISMATCH\r\n\r\n            var result = MISMATCH;\r\n            var map = null;\r\n\r\n            for (var i = terms.length - 1; i >= 0; i--) {\r\n                var term = terms[i];\r\n\r\n                // reduce sequence of keywords into a Enum\r\n                if (isEnumCapatible(term)) {\r\n                    if (map === null && i > 0 && isEnumCapatible(terms[i - 1])) {\r\n                        map = Object.create(null);\r\n                        result = createCondition(\r\n                            {\r\n                                type: 'Enum',\r\n                                map: map\r\n                            },\r\n                            MATCH,\r\n                            result\r\n                        );\r\n                    }\r\n\r\n                    if (map !== null) {\r\n                        var key = (isFunctionType(term.name) ? term.name.slice(0, -1) : term.name).toLowerCase();\r\n                        if (key in map === false) {\r\n                            map[key] = term;\r\n                            continue;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                map = null;\r\n\r\n                // create a new conditonal node\r\n                result = createCondition(\r\n                    term,\r\n                    MATCH,\r\n                    result\r\n                );\r\n            };\r\n\r\n            return result;\r\n\r\n        case '&&':\r\n            // A double ampersand (&&) separates two or more components,\r\n            // all of which must occur, in any order.\r\n\r\n            // Use MatchOnce for groups with a large number of terms,\r\n            // since &&-groups produces at least N!-node trees\r\n            if (terms.length > 5) {\r\n                return {\r\n                    type: 'MatchOnce',\r\n                    terms: terms,\r\n                    all: true\r\n                };\r\n            }\r\n\r\n            // Use a combination tree for groups with small number of terms\r\n            //\r\n            // a && b && c\r\n            // =\r\n            // match a\r\n            //   then [b && c]\r\n            //   else match b\r\n            //     then [a && c]\r\n            //     else match c\r\n            //       then [a && b]\r\n            //       else MISMATCH\r\n            //\r\n            // a && b\r\n            // =\r\n            // match a\r\n            //   then match b\r\n            //     then MATCH\r\n            //     else MISMATCH\r\n            //   else match b\r\n            //     then match a\r\n            //       then MATCH\r\n            //       else MISMATCH\r\n            //     else MISMATCH\r\n            var result = MISMATCH;\r\n\r\n            for (var i = terms.length - 1; i >= 0; i--) {\r\n                var term = terms[i];\r\n                var thenClause;\r\n\r\n                if (terms.length > 1) {\r\n                    thenClause = buildGroupMatchGraph(\r\n                        combinator,\r\n                        terms.filter(function(newGroupTerm) {\r\n                            return newGroupTerm !== term;\r\n                        }),\r\n                        false\r\n                    );\r\n                } else {\r\n                    thenClause = MATCH;\r\n                }\r\n\r\n                result = createCondition(\r\n                    term,\r\n                    thenClause,\r\n                    result\r\n                );\r\n            };\r\n\r\n            return result;\r\n\r\n        case '||':\r\n            // A double bar (||) separates two or more options:\r\n            // one or more of them must occur, in any order.\r\n\r\n            // Use MatchOnce for groups with a large number of terms,\r\n            // since ||-groups produces at least N!-node trees\r\n            if (terms.length > 5) {\r\n                return {\r\n                    type: 'MatchOnce',\r\n                    terms: terms,\r\n                    all: false\r\n                };\r\n            }\r\n\r\n            // Use a combination tree for groups with small number of terms\r\n            //\r\n            // a || b || c\r\n            // =\r\n            // match a\r\n            //   then [b || c]\r\n            //   else match b\r\n            //     then [a || c]\r\n            //     else match c\r\n            //       then [a || b]\r\n            //       else MISMATCH\r\n            //\r\n            // a || b\r\n            // =\r\n            // match a\r\n            //   then match b\r\n            //     then MATCH\r\n            //     else MATCH\r\n            //   else match b\r\n            //     then match a\r\n            //       then MATCH\r\n            //       else MATCH\r\n            //     else MISMATCH\r\n            var result = atLeastOneTermMatched ? MATCH : MISMATCH;\r\n\r\n            for (var i = terms.length - 1; i >= 0; i--) {\r\n                var term = terms[i];\r\n                var thenClause;\r\n\r\n                if (terms.length > 1) {\r\n                    thenClause = buildGroupMatchGraph(\r\n                        combinator,\r\n                        terms.filter(function(newGroupTerm) {\r\n                            return newGroupTerm !== term;\r\n                        }),\r\n                        true\r\n                    );\r\n                } else {\r\n                    thenClause = MATCH;\r\n                }\r\n\r\n                result = createCondition(\r\n                    term,\r\n                    thenClause,\r\n                    result\r\n                );\r\n            };\r\n\r\n            return result;\r\n    }\r\n}\r\n\r\nfunction buildMultiplierMatchGraph(node) {\r\n    var result = MATCH;\r\n    var matchTerm = buildMatchGraph(node.term);\r\n\r\n    if (node.max === 0) {\r\n        // disable repeating of empty match to prevent infinite loop\r\n        matchTerm = createCondition(\r\n            matchTerm,\r\n            DISALLOW_EMPTY,\r\n            MISMATCH\r\n        );\r\n\r\n        // an occurrence count is not limited, make a cycle;\r\n        // to collect more terms on each following matching mismatch\r\n        result = createCondition(\r\n            matchTerm,\r\n            null, // will be a loop\r\n            MISMATCH\r\n        );\r\n\r\n        result.then = createCondition(\r\n            MATCH,\r\n            MATCH,\r\n            result // make a loop\r\n        );\r\n\r\n        if (node.comma) {\r\n            result.then.else = createCondition(\r\n                { type: 'Comma', syntax: node },\r\n                result,\r\n                MISMATCH\r\n            );\r\n        }\r\n    } else {\r\n        // create a match node chain for [min .. max] interval with optional matches\r\n        for (var i = node.min || 1; i <= node.max; i++) {\r\n            if (node.comma && result !== MATCH) {\r\n                result = createCondition(\r\n                    { type: 'Comma', syntax: node },\r\n                    result,\r\n                    MISMATCH\r\n                );\r\n            }\r\n\r\n            result = createCondition(\r\n                matchTerm,\r\n                createCondition(\r\n                    MATCH,\r\n                    MATCH,\r\n                    result\r\n                ),\r\n                MISMATCH\r\n            );\r\n        }\r\n    }\r\n\r\n    if (node.min === 0) {\r\n        // allow zero match\r\n        result = createCondition(\r\n            MATCH,\r\n            MATCH,\r\n            result\r\n        );\r\n    } else {\r\n        // create a match node chain to collect [0 ... min - 1] required matches\r\n        for (var i = 0; i < node.min - 1; i++) {\r\n            if (node.comma && result !== MATCH) {\r\n                result = createCondition(\r\n                    { type: 'Comma', syntax: node },\r\n                    result,\r\n                    MISMATCH\r\n                );\r\n            }\r\n\r\n            result = createCondition(\r\n                matchTerm,\r\n                result,\r\n                MISMATCH\r\n            );\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nfunction buildMatchGraph(node) {\r\n    if (typeof node === 'function') {\r\n        return {\r\n            type: 'Generic',\r\n            fn: node\r\n        };\r\n    }\r\n\r\n    switch (node.type) {\r\n        case 'Group':\r\n            var result = buildGroupMatchGraph(\r\n                node.combinator,\r\n                node.terms.map(buildMatchGraph),\r\n                false\r\n            );\r\n\r\n            if (node.disallowEmpty) {\r\n                result = createCondition(\r\n                    result,\r\n                    DISALLOW_EMPTY,\r\n                    MISMATCH\r\n                );\r\n            }\r\n\r\n            return result;\r\n\r\n        case 'Multiplier':\r\n            return buildMultiplierMatchGraph(node);\r\n\r\n        case 'Type':\r\n        case 'Property':\r\n            return {\r\n                type: node.type,\r\n                name: node.name,\r\n                syntax: node\r\n            };\r\n\r\n        case 'Keyword':\r\n            return {\r\n                type: node.type,\r\n                name: node.name.toLowerCase(),\r\n                syntax: node\r\n            };\r\n\r\n        case 'AtKeyword':\r\n            return {\r\n                type: node.type,\r\n                name: '@' + node.name.toLowerCase(),\r\n                syntax: node\r\n            };\r\n\r\n        case 'Function':\r\n            return {\r\n                type: node.type,\r\n                name: node.name.toLowerCase() + '(',\r\n                syntax: node\r\n            };\r\n\r\n        case 'String':\r\n            // convert a one char length String to a Token\r\n            if (node.value.length === 3) {\r\n                return {\r\n                    type: 'Token',\r\n                    value: node.value.charAt(1),\r\n                    syntax: node\r\n                };\r\n            }\r\n\r\n            // otherwise use it as is\r\n            return {\r\n                type: node.type,\r\n                value: node.value.substr(1, node.value.length - 2).replace(/\\\\'/g, '\\''),\r\n                syntax: node\r\n            };\r\n\r\n        case 'Token':\r\n            return {\r\n                type: node.type,\r\n                value: node.value,\r\n                syntax: node\r\n            };\r\n\r\n        case 'Comma':\r\n            return {\r\n                type: node.type,\r\n                syntax: node\r\n            };\r\n\r\n        default:\r\n            throw new Error('Unknown node type:', node.type);\r\n    }\r\n}\r\n\r\nmodule.exports = {\r\n    MATCH: MATCH,\r\n    MISMATCH: MISMATCH,\r\n    DISALLOW_EMPTY: DISALLOW_EMPTY,\r\n    buildMatchGraph: function(syntaxTree, ref) {\r\n        if (typeof syntaxTree === 'string') {\r\n            syntaxTree = parse(syntaxTree);\r\n        }\r\n\r\n        return {\r\n            type: 'MatchGraph',\r\n            match: buildMatchGraph(syntaxTree),\r\n            syntax: ref || null,\r\n            source: syntaxTree\r\n        };\r\n    }\r\n};\r\n","var hasOwnProperty = Object.prototype.hasOwnProperty;\r\nvar matchGraph = require('./match-graph');\r\nvar MATCH = matchGraph.MATCH;\r\nvar MISMATCH = matchGraph.MISMATCH;\r\nvar DISALLOW_EMPTY = matchGraph.DISALLOW_EMPTY;\r\nvar TYPE = require('../tokenizer/const').TYPE;\r\n\r\nvar STUB = 0;\r\nvar TOKEN = 1;\r\nvar OPEN_SYNTAX = 2;\r\nvar CLOSE_SYNTAX = 3;\r\n\r\nvar EXIT_REASON_MATCH = 'Match';\r\nvar EXIT_REASON_MISMATCH = 'Mismatch';\r\nvar EXIT_REASON_ITERATION_LIMIT = 'Maximum iteration number exceeded (please fill an issue on https://github.com/csstree/csstree/issues)';\r\n\r\nvar ITERATION_LIMIT = 15000;\r\nvar totalIterationCount = 0;\r\n\r\nfunction reverseList(list) {\r\n    var prev = null;\r\n    var next = null;\r\n    var item = list;\r\n\r\n    while (item !== null) {\r\n        next = item.prev;\r\n        item.prev = prev;\r\n        prev = item;\r\n        item = next;\r\n    }\r\n\r\n    return prev;\r\n}\r\n\r\nfunction areStringsEqualCaseInsensitive(testStr, referenceStr) {\r\n    if (testStr.length !== referenceStr.length) {\r\n        return false;\r\n    }\r\n\r\n    for (var i = 0; i < testStr.length; i++) {\r\n        var testCode = testStr.charCodeAt(i);\r\n        var referenceCode = referenceStr.charCodeAt(i);\r\n\r\n        // testCode.toLowerCase() for U+0041 LATIN CAPITAL LETTER A (A) .. U+005A LATIN CAPITAL LETTER Z (Z).\r\n        if (testCode >= 0x0041 && testCode <= 0x005A) {\r\n            testCode = testCode | 32;\r\n        }\r\n\r\n        if (testCode !== referenceCode) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nfunction isCommaContextStart(token) {\r\n    if (token === null) {\r\n        return true;\r\n    }\r\n\r\n    return (\r\n        token.type === TYPE.Comma ||\r\n        token.type === TYPE.Function ||\r\n        token.type === TYPE.LeftParenthesis ||\r\n        token.type === TYPE.LeftSquareBracket ||\r\n        token.type === TYPE.LeftCurlyBracket ||\r\n        token.type === TYPE.Delim\r\n    );\r\n}\r\n\r\nfunction isCommaContextEnd(token) {\r\n    if (token === null) {\r\n        return true;\r\n    }\r\n\r\n    return (\r\n        token.type === TYPE.RightParenthesis ||\r\n        token.type === TYPE.RightSquareBracket ||\r\n        token.type === TYPE.RightCurlyBracket ||\r\n        token.type === TYPE.Delim\r\n    );\r\n}\r\n\r\nfunction internalMatch(tokens, state, syntaxes) {\r\n    function moveToNextToken() {\r\n        do {\r\n            tokenIndex++;\r\n            token = tokenIndex < tokens.length ? tokens[tokenIndex] : null;\r\n        } while (token !== null && (token.type === TYPE.WhiteSpace || token.type === TYPE.Comment));\r\n    }\r\n\r\n    function getNextToken(offset) {\r\n        var nextIndex = tokenIndex + offset;\r\n\r\n        return nextIndex < tokens.length ? tokens[nextIndex] : null;\r\n    }\r\n\r\n    function stateSnapshotFromSyntax(nextState, prev) {\r\n        return {\r\n            nextState: nextState,\r\n            matchStack: matchStack,\r\n            syntaxStack: syntaxStack,\r\n            thenStack: thenStack,\r\n            tokenIndex: tokenIndex,\r\n            prev: prev\r\n        };\r\n    }\r\n\r\n    function pushThenStack(nextState) {\r\n        thenStack = {\r\n            nextState: nextState,\r\n            matchStack: matchStack,\r\n            syntaxStack: syntaxStack,\r\n            prev: thenStack\r\n        };\r\n    }\r\n\r\n    function pushElseStack(nextState) {\r\n        elseStack = stateSnapshotFromSyntax(nextState, elseStack);\r\n    }\r\n\r\n    function addTokenToMatch() {\r\n        matchStack = {\r\n            type: TOKEN,\r\n            syntax: state.syntax,\r\n            token: token,\r\n            prev: matchStack\r\n        };\r\n\r\n        moveToNextToken();\r\n        syntaxStash = null;\r\n\r\n        if (tokenIndex > longestMatch) {\r\n            longestMatch = tokenIndex;\r\n        }\r\n    }\r\n\r\n    function openSyntax() {\r\n        syntaxStack = {\r\n            syntax: state.syntax,\r\n            opts: state.syntax.opts || (syntaxStack !== null && syntaxStack.opts) || null,\r\n            prev: syntaxStack\r\n        };\r\n\r\n        matchStack = {\r\n            type: OPEN_SYNTAX,\r\n            syntax: state.syntax,\r\n            token: matchStack.token,\r\n            prev: matchStack\r\n        };\r\n    }\r\n\r\n    function closeSyntax() {\r\n        if (matchStack.type === OPEN_SYNTAX) {\r\n            matchStack = matchStack.prev;\r\n        } else {\r\n            matchStack = {\r\n                type: CLOSE_SYNTAX,\r\n                syntax: syntaxStack.syntax,\r\n                token: matchStack.token,\r\n                prev: matchStack\r\n            };\r\n        }\r\n\r\n        syntaxStack = syntaxStack.prev;\r\n    }\r\n\r\n    var syntaxStack = null;\r\n    var thenStack = null;\r\n    var elseStack = null;\r\n\r\n    // null – stashing allowed, nothing stashed\r\n    // false – stashing disabled, nothing stashed\r\n    // anithing else – fail stashable syntaxes, some syntax stashed\r\n    var syntaxStash = null;\r\n\r\n    var iterationCount = 0; // count iterations and prevent infinite loop\r\n    var exitReason = null;\r\n\r\n    var token = null;\r\n    var tokenIndex = -1;\r\n    var longestMatch = 0;\r\n    var matchStack = {\r\n        type: STUB,\r\n        syntax: null,\r\n        token: null,\r\n        prev: null\r\n    };\r\n\r\n    moveToNextToken();\r\n\r\n    while (exitReason === null && ++iterationCount < ITERATION_LIMIT) {\r\n        // function mapList(list, fn) {\r\n        //     var result = [];\r\n        //     while (list) {\r\n        //         result.unshift(fn(list));\r\n        //         list = list.prev;\r\n        //     }\r\n        //     return result;\r\n        // }\r\n        // console.log('--\\n',\r\n        //     '#' + iterationCount,\r\n        //     require('util').inspect({\r\n        //         match: mapList(matchStack, x => x.type === TOKEN ? x.token && x.token.value : x.syntax ? ({ [OPEN_SYNTAX]: '<', [CLOSE_SYNTAX]: '</' }[x.type] || x.type) + '!' + x.syntax.name : null),\r\n        //         token: token && token.value,\r\n        //         tokenIndex,\r\n        //         syntax: syntax.type + (syntax.id ? ' #' + syntax.id : '')\r\n        //     }, { depth: null })\r\n        // );\r\n        switch (state.type) {\r\n            case 'Match':\r\n                if (thenStack === null) {\r\n                    // turn to MISMATCH when some tokens left unmatched\r\n                    if (token !== null) {\r\n                        // doesn't mismatch if just one token left and it's an IE hack\r\n                        if (tokenIndex !== tokens.length - 1 || (token.value !== '\\\\0' && token.value !== '\\\\9')) {\r\n                            state = MISMATCH;\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    // break the main loop, return a result - MATCH\r\n                    exitReason = EXIT_REASON_MATCH;\r\n                    break;\r\n                }\r\n\r\n                // go to next syntax (`then` branch)\r\n                state = thenStack.nextState;\r\n\r\n                // check match is not empty\r\n                if (state === DISALLOW_EMPTY) {\r\n                    if (thenStack.matchStack === matchStack) {\r\n                        state = MISMATCH;\r\n                        break;\r\n                    } else {\r\n                        state = MATCH;\r\n                    }\r\n                }\r\n\r\n                // close syntax if needed\r\n                while (thenStack.syntaxStack !== syntaxStack) {\r\n                    closeSyntax();\r\n                }\r\n\r\n                // pop stack\r\n                thenStack = thenStack.prev;\r\n                break;\r\n\r\n            case 'Mismatch':\r\n                // when some syntax is stashed\r\n                if (syntaxStash !== null && syntaxStash !== false) {\r\n                    // there is no else branches or a branch reduce match stack\r\n                    if (elseStack === null || tokenIndex > elseStack.tokenIndex) {\r\n                        // restore state from the stash\r\n                        elseStack = syntaxStash;\r\n                        syntaxStash = false; // disable stashing\r\n                    }\r\n                } else if (elseStack === null) {\r\n                    // no else branches -> break the main loop\r\n                    // return a result - MISMATCH\r\n                    exitReason = EXIT_REASON_MISMATCH;\r\n                    break;\r\n                }\r\n\r\n                // go to next syntax (`else` branch)\r\n                state = elseStack.nextState;\r\n\r\n                // restore all the rest stack states\r\n                thenStack = elseStack.thenStack;\r\n                syntaxStack = elseStack.syntaxStack;\r\n                matchStack = elseStack.matchStack;\r\n                tokenIndex = elseStack.tokenIndex;\r\n                token = tokenIndex < tokens.length ? tokens[tokenIndex] : null;\r\n\r\n                // pop stack\r\n                elseStack = elseStack.prev;\r\n                break;\r\n\r\n            case 'MatchGraph':\r\n                state = state.match;\r\n                break;\r\n\r\n            case 'If':\r\n                // IMPORTANT: else stack push must go first,\r\n                // since it stores the state of thenStack before changes\r\n                if (state.else !== MISMATCH) {\r\n                    pushElseStack(state.else);\r\n                }\r\n\r\n                if (state.then !== MATCH) {\r\n                    pushThenStack(state.then);\r\n                }\r\n\r\n                state = state.match;\r\n                break;\r\n\r\n            case 'MatchOnce':\r\n                state = {\r\n                    type: 'MatchOnceBuffer',\r\n                    syntax: state,\r\n                    index: 0,\r\n                    mask: 0\r\n                };\r\n                break;\r\n\r\n            case 'MatchOnceBuffer':\r\n                var terms = state.syntax.terms;\r\n\r\n                if (state.index === terms.length) {\r\n                    // no matches at all or it's required all terms to be matched\r\n                    if (state.mask === 0 || state.syntax.all) {\r\n                        state = MISMATCH;\r\n                        break;\r\n                    }\r\n\r\n                    // a partial match is ok\r\n                    state = MATCH;\r\n                    break;\r\n                }\r\n\r\n                // all terms are matched\r\n                if (state.mask === (1 << terms.length) - 1) {\r\n                    state = MATCH;\r\n                    break;\r\n                }\r\n\r\n                for (; state.index < terms.length; state.index++) {\r\n                    var matchFlag = 1 << state.index;\r\n\r\n                    if ((state.mask & matchFlag) === 0) {\r\n                        // IMPORTANT: else stack push must go first,\r\n                        // since it stores the state of thenStack before changes\r\n                        pushElseStack(state);\r\n                        pushThenStack({\r\n                            type: 'AddMatchOnce',\r\n                            syntax: state.syntax,\r\n                            mask: state.mask | matchFlag\r\n                        });\r\n\r\n                        // match\r\n                        state = terms[state.index++];\r\n                        break;\r\n                    }\r\n                }\r\n                break;\r\n\r\n            case 'AddMatchOnce':\r\n                state = {\r\n                    type: 'MatchOnceBuffer',\r\n                    syntax: state.syntax,\r\n                    index: 0,\r\n                    mask: state.mask\r\n                };\r\n                break;\r\n\r\n            case 'Enum':\r\n                if (token !== null) {\r\n                    var name = token.value.toLowerCase();\r\n\r\n                    // drop \\0 and \\9 hack from keyword name\r\n                    if (name.indexOf('\\\\') !== -1) {\r\n                        name = name.replace(/\\\\[09].*$/, '');\r\n                    }\r\n\r\n                    if (hasOwnProperty.call(state.map, name)) {\r\n                        state = state.map[name];\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                state = MISMATCH;\r\n                break;\r\n\r\n            case 'Generic':\r\n                var opts = syntaxStack !== null ? syntaxStack.opts : null;\r\n                var lastTokenIndex = tokenIndex + Math.floor(state.fn(token, getNextToken, opts));\r\n\r\n                if (!isNaN(lastTokenIndex) && lastTokenIndex > tokenIndex) {\r\n                    while (tokenIndex < lastTokenIndex) {\r\n                        addTokenToMatch();\r\n                    }\r\n\r\n                    state = MATCH;\r\n                } else {\r\n                    state = MISMATCH;\r\n                }\r\n\r\n                break;\r\n\r\n            case 'Type':\r\n            case 'Property':\r\n                var syntaxDict = state.type === 'Type' ? 'types' : 'properties';\r\n                var dictSyntax = hasOwnProperty.call(syntaxes, syntaxDict) ? syntaxes[syntaxDict][state.name] : null;\r\n\r\n                if (!dictSyntax || !dictSyntax.match) {\r\n                    throw new Error(\r\n                        'Bad syntax reference: ' +\r\n                        (state.type === 'Type'\r\n                            ? '<' + state.name + '>'\r\n                            : '<\\'' + state.name + '\\'>')\r\n                    );\r\n                }\r\n\r\n                // stash a syntax for types with low priority\r\n                if (syntaxStash !== false && token !== null && state.type === 'Type') {\r\n                    var lowPriorityMatching =\r\n                        // https://drafts.csswg.org/css-values-4/#custom-idents\r\n                        // When parsing positionally-ambiguous keywords in a property value, a <custom-ident> production\r\n                        // can only claim the keyword if no other unfulfilled production can claim it.\r\n                        (state.name === 'custom-ident' && token.type === TYPE.Ident) ||\r\n\r\n                        // https://drafts.csswg.org/css-values-4/#lengths\r\n                        // ... if a `0` could be parsed as either a <number> or a <length> in a property (such as line-height),\r\n                        // it must parse as a <number>\r\n                        (state.name === 'length' && token.value === '0');\r\n\r\n                    if (lowPriorityMatching) {\r\n                        if (syntaxStash === null) {\r\n                            syntaxStash = stateSnapshotFromSyntax(state, elseStack);\r\n                        }\r\n\r\n                        state = MISMATCH;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                openSyntax();\r\n                state = dictSyntax.match;\r\n                break;\r\n\r\n            case 'Keyword':\r\n                var name = state.name;\r\n\r\n                if (token !== null) {\r\n                    var keywordName = token.value;\r\n\r\n                    // drop \\0 and \\9 hack from keyword name\r\n                    if (keywordName.indexOf('\\\\') !== -1) {\r\n                        keywordName = keywordName.replace(/\\\\[09].*$/, '');\r\n                    }\r\n\r\n                    if (areStringsEqualCaseInsensitive(keywordName, name)) {\r\n                        addTokenToMatch();\r\n                        state = MATCH;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                state = MISMATCH;\r\n                break;\r\n\r\n            case 'AtKeyword':\r\n            case 'Function':\r\n                if (token !== null && areStringsEqualCaseInsensitive(token.value, state.name)) {\r\n                    addTokenToMatch();\r\n                    state = MATCH;\r\n                    break;\r\n                }\r\n\r\n                state = MISMATCH;\r\n                break;\r\n\r\n            case 'Token':\r\n                if (token !== null && token.value === state.value) {\r\n                    addTokenToMatch();\r\n                    state = MATCH;\r\n                    break;\r\n                }\r\n\r\n                state = MISMATCH;\r\n                break;\r\n\r\n            case 'Comma':\r\n                if (token !== null && token.type === TYPE.Comma) {\r\n                    if (isCommaContextStart(matchStack.token)) {\r\n                        state = MISMATCH;\r\n                    } else {\r\n                        addTokenToMatch();\r\n                        state = isCommaContextEnd(token) ? MISMATCH : MATCH;\r\n                    }\r\n                } else {\r\n                    state = isCommaContextStart(matchStack.token) || isCommaContextEnd(token) ? MATCH : MISMATCH;\r\n                }\r\n\r\n                break;\r\n\r\n            case 'String':\r\n                var string = '';\r\n\r\n                for (var lastTokenIndex = tokenIndex; lastTokenIndex < tokens.length && string.length < state.value.length; lastTokenIndex++) {\r\n                    string += tokens[lastTokenIndex].value;\r\n                }\r\n\r\n                if (areStringsEqualCaseInsensitive(string, state.value)) {\r\n                    while (tokenIndex < lastTokenIndex) {\r\n                        addTokenToMatch();\r\n                    }\r\n\r\n                    state = MATCH;\r\n                } else {\r\n                    state = MISMATCH;\r\n                }\r\n\r\n                break;\r\n\r\n            default:\r\n                throw new Error('Unknown node type: ' + state.type);\r\n        }\r\n    }\r\n\r\n    totalIterationCount += iterationCount;\r\n\r\n    switch (exitReason) {\r\n        case null:\r\n            console.warn('[csstree-match] BREAK after ' + ITERATION_LIMIT + ' iterations');\r\n            exitReason = EXIT_REASON_ITERATION_LIMIT;\r\n            matchStack = null;\r\n            break;\r\n\r\n        case EXIT_REASON_MATCH:\r\n            while (syntaxStack !== null) {\r\n                closeSyntax();\r\n            }\r\n            break;\r\n\r\n        default:\r\n            matchStack = null;\r\n    }\r\n\r\n    return {\r\n        tokens: tokens,\r\n        reason: exitReason,\r\n        iterations: iterationCount,\r\n        match: matchStack,\r\n        longestMatch: longestMatch\r\n    };\r\n}\r\n\r\nfunction matchAsList(tokens, matchGraph, syntaxes) {\r\n    var matchResult = internalMatch(tokens, matchGraph, syntaxes || {});\r\n\r\n    if (matchResult.match !== null) {\r\n        var item = reverseList(matchResult.match).prev;\r\n\r\n        matchResult.match = [];\r\n\r\n        while (item !== null) {\r\n            switch (item.type) {\r\n                case STUB:\r\n                    break;\r\n\r\n                case OPEN_SYNTAX:\r\n                case CLOSE_SYNTAX:\r\n                    matchResult.match.push({\r\n                        type: item.type,\r\n                        syntax: item.syntax\r\n                    });\r\n                    break;\r\n\r\n                default:\r\n                    matchResult.match.push({\r\n                        token: item.token.value,\r\n                        node: item.token.node\r\n                    });\r\n                    break;\r\n            }\r\n\r\n            item = item.prev;\r\n        }\r\n    }\r\n\r\n    return matchResult;\r\n}\r\n\r\nfunction matchAsTree(tokens, matchGraph, syntaxes) {\r\n    var matchResult = internalMatch(tokens, matchGraph, syntaxes || {});\r\n\r\n    if (matchResult.match === null) {\r\n        return matchResult;\r\n    }\r\n\r\n    var item = matchResult.match;\r\n    var host = matchResult.match = {\r\n        syntax: matchGraph.syntax || null,\r\n        match: []\r\n    };\r\n    var hostStack = [host];\r\n\r\n    // revert a list and start with 2nd item since 1st is a stub item\r\n    item = reverseList(item).prev;\r\n\r\n    // build a tree\r\n    while (item !== null) {\r\n        switch (item.type) {\r\n            case OPEN_SYNTAX:\r\n                host.match.push(host = {\r\n                    syntax: item.syntax,\r\n                    match: []\r\n                });\r\n                hostStack.push(host);\r\n                break;\r\n\r\n            case CLOSE_SYNTAX:\r\n                hostStack.pop();\r\n                host = hostStack[hostStack.length - 1];\r\n                break;\r\n\r\n            default:\r\n                host.match.push({\r\n                    syntax: item.syntax || null,\r\n                    token: item.token.value,\r\n                    node: item.token.node\r\n                });\r\n        }\r\n\r\n        item = item.prev;\r\n    }\r\n\r\n    return matchResult;\r\n}\r\n\r\nmodule.exports = {\r\n    matchAsList: matchAsList,\r\n    matchAsTree: matchAsTree,\r\n    getTotalIterationCount: function() {\r\n        return totalIterationCount;\r\n    }\r\n};\r\n","function getTrace(node) {\r\n    function shouldPutToTrace(syntax) {\r\n        if (syntax === null) {\r\n            return false;\r\n        }\r\n\r\n        return (\r\n            syntax.type === 'Type' ||\r\n            syntax.type === 'Property' ||\r\n            syntax.type === 'Keyword'\r\n        );\r\n    }\r\n\r\n    function hasMatch(matchNode) {\r\n        if (Array.isArray(matchNode.match)) {\r\n            // use for-loop for better perfomance\r\n            for (var i = 0; i < matchNode.match.length; i++) {\r\n                if (hasMatch(matchNode.match[i])) {\r\n                    if (shouldPutToTrace(matchNode.syntax)) {\r\n                        result.unshift(matchNode.syntax);\r\n                    }\r\n\r\n                    return true;\r\n                }\r\n            }\r\n        } else if (matchNode.node === node) {\r\n            result = shouldPutToTrace(matchNode.syntax)\r\n                ? [matchNode.syntax]\r\n                : [];\r\n\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    var result = null;\r\n\r\n    if (this.matched !== null) {\r\n        hasMatch(this.matched);\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nfunction testNode(match, node, fn) {\r\n    var trace = getTrace.call(match, node);\r\n\r\n    if (trace === null) {\r\n        return false;\r\n    }\r\n\r\n    return trace.some(fn);\r\n}\r\n\r\nfunction isType(node, type) {\r\n    return testNode(this, node, function(matchNode) {\r\n        return matchNode.type === 'Type' && matchNode.name === type;\r\n    });\r\n}\r\n\r\nfunction isProperty(node, property) {\r\n    return testNode(this, node, function(matchNode) {\r\n        return matchNode.type === 'Property' && matchNode.name === property;\r\n    });\r\n}\r\n\r\nfunction isKeyword(node) {\r\n    return testNode(this, node, function(matchNode) {\r\n        return matchNode.type === 'Keyword';\r\n    });\r\n}\r\n\r\nmodule.exports = {\r\n    getTrace: getTrace,\r\n    isType: isType,\r\n    isProperty: isProperty,\r\n    isKeyword: isKeyword\r\n};\r\n","var List = require('../common/List');\r\n\r\nfunction getFirstMatchNode(matchNode) {\r\n    if ('node' in matchNode) {\r\n        return matchNode.node;\r\n    }\r\n\r\n    return getFirstMatchNode(matchNode.match[0]);\r\n}\r\n\r\nfunction getLastMatchNode(matchNode) {\r\n    if ('node' in matchNode) {\r\n        return matchNode.node;\r\n    }\r\n\r\n    return getLastMatchNode(matchNode.match[matchNode.match.length - 1]);\r\n}\r\n\r\nfunction matchFragments(lexer, ast, match, type, name) {\r\n    function findFragments(matchNode) {\r\n        if (matchNode.syntax !== null &&\r\n            matchNode.syntax.type === type &&\r\n            matchNode.syntax.name === name) {\r\n            var start = getFirstMatchNode(matchNode);\r\n            var end = getLastMatchNode(matchNode);\r\n\r\n            lexer.syntax.walk(ast, function(node, item, list) {\r\n                if (node === start) {\r\n                    var nodes = new List();\r\n\r\n                    do {\r\n                        nodes.appendData(item.data);\r\n\r\n                        if (item.data === end) {\r\n                            break;\r\n                        }\r\n\r\n                        item = item.next;\r\n                    } while (item !== null);\r\n\r\n                    fragments.push({\r\n                        parent: list,\r\n                        nodes: nodes\r\n                    });\r\n                }\r\n            });\r\n        }\r\n\r\n        if (Array.isArray(matchNode.match)) {\r\n            matchNode.match.forEach(findFragments);\r\n        }\r\n    }\r\n\r\n    var fragments = [];\r\n\r\n    if (match.matched !== null) {\r\n        findFragments(match.matched);\r\n    }\r\n\r\n    return fragments;\r\n}\r\n\r\nmodule.exports = {\r\n    matchFragments: matchFragments\r\n};\r\n","var List = require('../common/List');\r\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\r\n\r\nfunction isValidNumber(value) {\r\n    // Number.isInteger(value) && value >= 0\r\n    return (\r\n        typeof value === 'number' &&\r\n        isFinite(value) &&\r\n        Math.floor(value) === value &&\r\n        value >= 0\r\n    );\r\n}\r\n\r\nfunction isValidLocation(loc) {\r\n    return (\r\n        Boolean(loc) &&\r\n        isValidNumber(loc.offset) &&\r\n        isValidNumber(loc.line) &&\r\n        isValidNumber(loc.column)\r\n    );\r\n}\r\n\r\nfunction createNodeStructureChecker(type, fields) {\r\n    return function checkNode(node, warn) {\r\n        if (!node || node.constructor !== Object) {\r\n            return warn(node, 'Type of node should be an Object');\r\n        }\r\n\r\n        for (var key in node) {\r\n            var valid = true;\r\n\r\n            if (hasOwnProperty.call(node, key) === false) {\r\n                continue;\r\n            }\r\n\r\n            if (key === 'type') {\r\n                if (node.type !== type) {\r\n                    warn(node, 'Wrong node type `' + node.type + '`, expected `' + type + '`');\r\n                }\r\n            } else if (key === 'loc') {\r\n                if (node.loc === null) {\r\n                    continue;\r\n                } else if (node.loc && node.loc.constructor === Object) {\r\n                    if (typeof node.loc.source !== 'string') {\r\n                        key += '.source';\r\n                    } else if (!isValidLocation(node.loc.start)) {\r\n                        key += '.start';\r\n                    } else if (!isValidLocation(node.loc.end)) {\r\n                        key += '.end';\r\n                    } else {\r\n                        continue;\r\n                    }\r\n                }\r\n\r\n                valid = false;\r\n            } else if (fields.hasOwnProperty(key)) {\r\n                for (var i = 0, valid = false; !valid && i < fields[key].length; i++) {\r\n                    var fieldType = fields[key][i];\r\n\r\n                    switch (fieldType) {\r\n                        case String:\r\n                            valid = typeof node[key] === 'string';\r\n                            break;\r\n\r\n                        case Boolean:\r\n                            valid = typeof node[key] === 'boolean';\r\n                            break;\r\n\r\n                        case null:\r\n                            valid = node[key] === null;\r\n                            break;\r\n\r\n                        default:\r\n                            if (typeof fieldType === 'string') {\r\n                                valid = node[key] && node[key].type === fieldType;\r\n                            } else if (Array.isArray(fieldType)) {\r\n                                valid = node[key] instanceof List;\r\n                            }\r\n                    }\r\n                }\r\n            } else {\r\n                warn(node, 'Unknown field `' + key + '` for ' + type + ' node type');\r\n            }\r\n\r\n            if (!valid) {\r\n                warn(node, 'Bad value for `' + type + '.' + key + '`');\r\n            }\r\n        }\r\n\r\n        for (var key in fields) {\r\n            if (hasOwnProperty.call(fields, key) &&\r\n                hasOwnProperty.call(node, key) === false) {\r\n                warn(node, 'Field `' + type + '.' + key + '` is missed');\r\n            }\r\n        }\r\n    };\r\n}\r\n\r\nfunction processStructure(name, nodeType) {\r\n    var structure = nodeType.structure;\r\n    var fields = {\r\n        type: String,\r\n        loc: true\r\n    };\r\n    var docs = {\r\n        type: '\"' + name + '\"'\r\n    };\r\n\r\n    for (var key in structure) {\r\n        if (hasOwnProperty.call(structure, key) === false) {\r\n            continue;\r\n        }\r\n\r\n        var docsTypes = [];\r\n        var fieldTypes = fields[key] = Array.isArray(structure[key])\r\n            ? structure[key].slice()\r\n            : [structure[key]];\r\n\r\n        for (var i = 0; i < fieldTypes.length; i++) {\r\n            var fieldType = fieldTypes[i];\r\n            if (fieldType === String || fieldType === Boolean) {\r\n                docsTypes.push(fieldType.name);\r\n            } else if (fieldType === null) {\r\n                docsTypes.push('null');\r\n            } else if (typeof fieldType === 'string') {\r\n                docsTypes.push('<' + fieldType + '>');\r\n            } else if (Array.isArray(fieldType)) {\r\n                docsTypes.push('List'); // TODO: use type enum\r\n            } else {\r\n                throw new Error('Wrong value `' + fieldType + '` in `' + name + '.' + key + '` structure definition');\r\n            }\r\n        }\r\n\r\n        docs[key] = docsTypes.join(' | ');\r\n    }\r\n\r\n    return {\r\n        docs: docs,\r\n        check: createNodeStructureChecker(name, fields)\r\n    };\r\n}\r\n\r\nmodule.exports = {\r\n    getStructureFromConfig: function(config) {\r\n        var structure = {};\r\n\r\n        if (config.node) {\r\n            for (var name in config.node) {\r\n                if (hasOwnProperty.call(config.node, name)) {\r\n                    var nodeType = config.node[name];\r\n\r\n                    if (nodeType.structure) {\r\n                        structure[name] = processStructure(name, nodeType);\r\n                    } else {\r\n                        throw new Error('Missed `structure` field in `' + name + '` node type definition');\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return structure;\r\n    }\r\n};\r\n","var SyntaxReferenceError = require('./error').SyntaxReferenceError;\r\nvar MatchError = require('./error').MatchError;\r\nvar names = require('../utils/names');\r\nvar generic = require('./generic');\r\nvar parse = require('../definition-syntax/parse');\r\nvar generate = require('../definition-syntax/generate');\r\nvar walk = require('../definition-syntax/walk');\r\nvar prepareTokens = require('./prepare-tokens');\r\nvar buildMatchGraph = require('./match-graph').buildMatchGraph;\r\nvar matchAsTree = require('./match').matchAsTree;\r\nvar trace = require('./trace');\r\nvar search = require('./search');\r\nvar getStructureFromConfig = require('./structure').getStructureFromConfig;\r\nvar cssWideKeywords = buildMatchGraph('inherit | initial | unset');\r\nvar cssWideKeywordsWithExpression = buildMatchGraph('inherit | initial | unset | <-ms-legacy-expression>');\r\n\r\nfunction dumpMapSyntax(map, compact, syntaxAsAst) {\r\n    var result = {};\r\n\r\n    for (var name in map) {\r\n        if (map[name].syntax) {\r\n            result[name] = syntaxAsAst\r\n                ? map[name].syntax\r\n                : generate(map[name].syntax, { compact: compact });\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nfunction valueHasVar(tokens) {\r\n    for (var i = 0; i < tokens.length; i++) {\r\n        if (tokens[i].value.toLowerCase() === 'var(') {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\nfunction buildMatchResult(match, error, iterations) {\r\n    return {\r\n        matched: match,\r\n        iterations: iterations,\r\n        error: error,\r\n        getTrace: trace.getTrace,\r\n        isType: trace.isType,\r\n        isProperty: trace.isProperty,\r\n        isKeyword: trace.isKeyword\r\n    };\r\n}\r\n\r\nfunction matchSyntax(lexer, syntax, value, useCommon) {\r\n    var tokens = prepareTokens(value, lexer.syntax);\r\n    var result;\r\n\r\n    if (valueHasVar(tokens)) {\r\n        return buildMatchResult(null, new Error('Matching for a tree with var() is not supported'));\r\n    }\r\n\r\n    if (useCommon) {\r\n        result = matchAsTree(tokens, lexer.valueCommonSyntax, lexer);\r\n    }\r\n\r\n    if (!useCommon || !result.match) {\r\n        result = matchAsTree(tokens, syntax.match, lexer);\r\n        if (!result.match) {\r\n            return buildMatchResult(\r\n                null,\r\n                new MatchError(result.reason, syntax.syntax, value, result),\r\n                result.iterations\r\n            );\r\n        }\r\n    }\r\n\r\n    return buildMatchResult(result.match, null, result.iterations);\r\n}\r\n\r\nvar Lexer = function(config, syntax, structure) {\r\n    this.valueCommonSyntax = cssWideKeywords;\r\n    this.syntax = syntax;\r\n    this.generic = false;\r\n    this.atrules = {};\r\n    this.properties = {};\r\n    this.types = {};\r\n    this.structure = structure || getStructureFromConfig(config);\r\n\r\n    if (config) {\r\n        if (config.types) {\r\n            for (var name in config.types) {\r\n                this.addType_(name, config.types[name]);\r\n            }\r\n        }\r\n\r\n        if (config.generic) {\r\n            this.generic = true;\r\n            for (var name in generic) {\r\n                this.addType_(name, generic[name]);\r\n            }\r\n        }\r\n\r\n        if (config.atrules) {\r\n            for (var name in config.atrules) {\r\n                this.addAtrule_(name, config.atrules[name]);\r\n            }\r\n        }\r\n\r\n        if (config.properties) {\r\n            for (var name in config.properties) {\r\n                this.addProperty_(name, config.properties[name]);\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nLexer.prototype = {\r\n    structure: {},\r\n    checkStructure: function(ast) {\r\n        function collectWarning(node, message) {\r\n            warns.push({\r\n                node: node,\r\n                message: message\r\n            });\r\n        }\r\n\r\n        var structure = this.structure;\r\n        var warns = [];\r\n\r\n        this.syntax.walk(ast, function(node) {\r\n            if (structure.hasOwnProperty(node.type)) {\r\n                structure[node.type].check(node, collectWarning);\r\n            } else {\r\n                collectWarning(node, 'Unknown node type `' + node.type + '`');\r\n            }\r\n        });\r\n\r\n        return warns.length ? warns : false;\r\n    },\r\n\r\n    createDescriptor: function(syntax, type, name) {\r\n        var ref = {\r\n            type: type,\r\n            name: name\r\n        };\r\n        var descriptor = {\r\n            type: type,\r\n            name: name,\r\n            syntax: null,\r\n            match: null\r\n        };\r\n\r\n        if (typeof syntax === 'function') {\r\n            descriptor.match = buildMatchGraph(syntax, ref);\r\n        } else {\r\n            if (typeof syntax === 'string') {\r\n                // lazy parsing on first access\r\n                Object.defineProperty(descriptor, 'syntax', {\r\n                    get: function() {\r\n                        Object.defineProperty(descriptor, 'syntax', {\r\n                            value: parse(syntax)\r\n                        });\r\n\r\n                        return descriptor.syntax;\r\n                    }\r\n                });\r\n            } else {\r\n                descriptor.syntax = syntax;\r\n            }\r\n\r\n            // lazy graph build on first access\r\n            Object.defineProperty(descriptor, 'match', {\r\n                get: function() {\r\n                    Object.defineProperty(descriptor, 'match', {\r\n                        value: buildMatchGraph(descriptor.syntax, ref)\r\n                    });\r\n\r\n                    return descriptor.match;\r\n                }\r\n            });\r\n        }\r\n\r\n        return descriptor;\r\n    },\r\n    addAtrule_: function(name, syntax) {\r\n        this.atrules[name] = {\r\n            prelude: syntax.prelude ? this.createDescriptor(syntax.prelude, 'AtrulePrelude', name) : null,\r\n            descriptors: syntax.descriptors\r\n                ? Object.keys(syntax.descriptors).reduce((res, name) => {\r\n                    res[name] = this.createDescriptor(syntax.descriptors[name], 'AtruleDescriptor', name);\r\n                    return res;\r\n                }, {})\r\n                : null\r\n        };\r\n    },\r\n    addProperty_: function(name, syntax) {\r\n        this.properties[name] = this.createDescriptor(syntax, 'Property', name);\r\n    },\r\n    addType_: function(name, syntax) {\r\n        this.types[name] = this.createDescriptor(syntax, 'Type', name);\r\n\r\n        if (syntax === generic['-ms-legacy-expression']) {\r\n            this.valueCommonSyntax = cssWideKeywordsWithExpression;\r\n        }\r\n    },\r\n\r\n    matchAtrulePrelude: function(atruleName, prelude) {\r\n        var atrule = names.keyword(atruleName);\r\n\r\n        var atrulePreludeSyntax = atrule.vendor\r\n            ? this.getAtrulePrelude(atrule.name) || this.getAtrulePrelude(atrule.basename)\r\n            : this.getAtrulePrelude(atrule.name);\r\n\r\n        if (!atrulePreludeSyntax) {\r\n            if (atrule.basename in this.atrules) {\r\n                return buildMatchResult(null, new Error('At-rule `' + atruleName + '` should not contain a prelude'));\r\n            }\r\n\r\n            return buildMatchResult(null, new SyntaxReferenceError('Unknown at-rule', atruleName));\r\n        }\r\n\r\n        return matchSyntax(this, atrulePreludeSyntax, prelude, true);\r\n    },\r\n    matchAtruleDescriptor: function(atruleName, descriptorName, value) {\r\n        var atrule = names.keyword(atruleName);\r\n        var descriptor = names.keyword(descriptorName);\r\n\r\n        var atruleEntry = atrule.vendor\r\n            ? this.atrules[atrule.name] || this.atrules[atrule.basename]\r\n            : this.atrules[atrule.name];\r\n\r\n        if (!atruleEntry) {\r\n            return buildMatchResult(null, new SyntaxReferenceError('Unknown at-rule', atruleName));\r\n        }\r\n\r\n        if (!atruleEntry.descriptors) {\r\n            return buildMatchResult(null, new Error('At-rule `' + atruleName + '` has no known descriptors'));\r\n        }\r\n\r\n        var atruleDescriptorSyntax = descriptor.vendor\r\n            ? atruleEntry.descriptors[descriptor.name] || atruleEntry.descriptors[descriptor.basename]\r\n            : atruleEntry.descriptors[descriptor.name];\r\n\r\n        if (!atruleDescriptorSyntax) {\r\n            return buildMatchResult(null, new SyntaxReferenceError('Unknown at-rule descriptor', descriptorName));\r\n        }\r\n\r\n        return matchSyntax(this, atruleDescriptorSyntax, value, true);\r\n    },\r\n    matchDeclaration: function(node) {\r\n        if (node.type !== 'Declaration') {\r\n            return buildMatchResult(null, new Error('Not a Declaration node'));\r\n        }\r\n\r\n        return this.matchProperty(node.property, node.value);\r\n    },\r\n    matchProperty: function(propertyName, value) {\r\n        var property = names.property(propertyName);\r\n\r\n        // don't match syntax for a custom property\r\n        if (property.custom) {\r\n            return buildMatchResult(null, new Error('Lexer matching doesn\\'t applicable for custom properties'));\r\n        }\r\n\r\n        var propertySyntax = property.vendor\r\n            ? this.getProperty(property.name) || this.getProperty(property.basename)\r\n            : this.getProperty(property.name);\r\n\r\n        if (!propertySyntax) {\r\n            return buildMatchResult(null, new SyntaxReferenceError('Unknown property', propertyName));\r\n        }\r\n\r\n        return matchSyntax(this, propertySyntax, value, true);\r\n    },\r\n    matchType: function(typeName, value) {\r\n        var typeSyntax = this.getType(typeName);\r\n\r\n        if (!typeSyntax) {\r\n            return buildMatchResult(null, new SyntaxReferenceError('Unknown type', typeName));\r\n        }\r\n\r\n        return matchSyntax(this, typeSyntax, value, false);\r\n    },\r\n    match: function(syntax, value) {\r\n        if (typeof syntax !== 'string' && (!syntax || !syntax.type)) {\r\n            return buildMatchResult(null, new SyntaxReferenceError('Bad syntax'));\r\n        }\r\n\r\n        if (typeof syntax === 'string' || !syntax.match) {\r\n            syntax = this.createDescriptor(syntax, 'Type', 'anonymous');\r\n        }\r\n\r\n        return matchSyntax(this, syntax, value, false);\r\n    },\r\n\r\n    findValueFragments: function(propertyName, value, type, name) {\r\n        return search.matchFragments(this, value, this.matchProperty(propertyName, value), type, name);\r\n    },\r\n    findDeclarationValueFragments: function(declaration, type, name) {\r\n        return search.matchFragments(this, declaration.value, this.matchDeclaration(declaration), type, name);\r\n    },\r\n    findAllFragments: function(ast, type, name) {\r\n        var result = [];\r\n\r\n        this.syntax.walk(ast, {\r\n            visit: 'Declaration',\r\n            enter: function(declaration) {\r\n                result.push.apply(result, this.findDeclarationValueFragments(declaration, type, name));\r\n            }.bind(this)\r\n        });\r\n\r\n        return result;\r\n    },\r\n\r\n    getAtrulePrelude: function(atruleName) {\r\n        return this.atrules.hasOwnProperty(atruleName) ? this.atrules[atruleName].prelude : null;\r\n    },\r\n    getAtruleDescriptor: function(atruleName, name) {\r\n        return this.atrules.hasOwnProperty(atruleName) && this.atrules.declarators\r\n            ? this.atrules[atruleName].declarators[name] || null\r\n            : null;\r\n    },\r\n    getProperty: function(name) {\r\n        return this.properties.hasOwnProperty(name) ? this.properties[name] : null;\r\n    },\r\n    getType: function(name) {\r\n        return this.types.hasOwnProperty(name) ? this.types[name] : null;\r\n    },\r\n\r\n    validate: function() {\r\n        function validate(syntax, name, broken, descriptor) {\r\n            if (broken.hasOwnProperty(name)) {\r\n                return broken[name];\r\n            }\r\n\r\n            broken[name] = false;\r\n            if (descriptor.syntax !== null) {\r\n                walk(descriptor.syntax, function(node) {\r\n                    if (node.type !== 'Type' && node.type !== 'Property') {\r\n                        return;\r\n                    }\r\n\r\n                    var map = node.type === 'Type' ? syntax.types : syntax.properties;\r\n                    var brokenMap = node.type === 'Type' ? brokenTypes : brokenProperties;\r\n\r\n                    if (!map.hasOwnProperty(node.name) || validate(syntax, node.name, brokenMap, map[node.name])) {\r\n                        broken[name] = true;\r\n                    }\r\n                }, this);\r\n            }\r\n        }\r\n\r\n        var brokenTypes = {};\r\n        var brokenProperties = {};\r\n\r\n        for (var key in this.types) {\r\n            validate(this, key, brokenTypes, this.types[key]);\r\n        }\r\n\r\n        for (var key in this.properties) {\r\n            validate(this, key, brokenProperties, this.properties[key]);\r\n        }\r\n\r\n        brokenTypes = Object.keys(brokenTypes).filter(function(name) {\r\n            return brokenTypes[name];\r\n        });\r\n        brokenProperties = Object.keys(brokenProperties).filter(function(name) {\r\n            return brokenProperties[name];\r\n        });\r\n\r\n        if (brokenTypes.length || brokenProperties.length) {\r\n            return {\r\n                types: brokenTypes,\r\n                properties: brokenProperties\r\n            };\r\n        }\r\n\r\n        return null;\r\n    },\r\n    dump: function(syntaxAsAst, pretty) {\r\n        return {\r\n            generic: this.generic,\r\n            types: dumpMapSyntax(this.types, !pretty, syntaxAsAst),\r\n            properties: dumpMapSyntax(this.properties, !pretty, syntaxAsAst)\r\n        };\r\n    },\r\n    toString: function() {\r\n        return JSON.stringify(this.dump());\r\n    }\r\n};\r\n\r\nmodule.exports = Lexer;\r\n","module.exports = {\r\n    SyntaxError: require('./SyntaxError'),\r\n    parse: require('./parse'),\r\n    generate: require('./generate'),\r\n    walk: require('./walk')\r\n};\r\n","var adoptBuffer = require('./adopt-buffer');\r\nvar isBOM = require('../tokenizer').isBOM;\r\n\r\nvar N = 10;\r\nvar F = 12;\r\nvar R = 13;\r\n\r\nfunction computeLinesAndColumns(host, source) {\r\n    var sourceLength = source.length;\r\n    var lines = adoptBuffer(host.lines, sourceLength); // +1\r\n    var line = host.startLine;\r\n    var columns = adoptBuffer(host.columns, sourceLength);\r\n    var column = host.startColumn;\r\n    var startOffset = source.length > 0 ? isBOM(source.charCodeAt(0)) : 0;\r\n\r\n    for (var i = startOffset; i < sourceLength; i++) { // -1\r\n        var code = source.charCodeAt(i);\r\n\r\n        lines[i] = line;\r\n        columns[i] = column++;\r\n\r\n        if (code === N || code === R || code === F) {\r\n            if (code === R && i + 1 < sourceLength && source.charCodeAt(i + 1) === N) {\r\n                i++;\r\n                lines[i] = line;\r\n                columns[i] = column;\r\n            }\r\n\r\n            line++;\r\n            column = 1;\r\n        }\r\n    }\r\n\r\n    lines[i] = line;\r\n    columns[i] = column;\r\n\r\n    host.lines = lines;\r\n    host.columns = columns;\r\n}\r\n\r\nvar OffsetToLocation = function() {\r\n    this.lines = null;\r\n    this.columns = null;\r\n    this.linesAndColumnsComputed = false;\r\n};\r\n\r\nOffsetToLocation.prototype = {\r\n    setSource: function(source, startOffset, startLine, startColumn) {\r\n        this.source = source;\r\n        this.startOffset = typeof startOffset === 'undefined' ? 0 : startOffset;\r\n        this.startLine = typeof startLine === 'undefined' ? 1 : startLine;\r\n        this.startColumn = typeof startColumn === 'undefined' ? 1 : startColumn;\r\n        this.linesAndColumnsComputed = false;\r\n    },\r\n\r\n    ensureLinesAndColumnsComputed: function() {\r\n        if (!this.linesAndColumnsComputed) {\r\n            computeLinesAndColumns(this, this.source);\r\n            this.linesAndColumnsComputed = true;\r\n        }\r\n    },\r\n    getLocation: function(offset, filename) {\r\n        this.ensureLinesAndColumnsComputed();\r\n\r\n        return {\r\n            source: filename,\r\n            offset: this.startOffset + offset,\r\n            line: this.lines[offset],\r\n            column: this.columns[offset]\r\n        };\r\n    },\r\n    getLocationRange: function(start, end, filename) {\r\n        this.ensureLinesAndColumnsComputed();\r\n\r\n        return {\r\n            source: filename,\r\n            start: {\r\n                offset: this.startOffset + start,\r\n                line: this.lines[start],\r\n                column: this.columns[start]\r\n            },\r\n            end: {\r\n                offset: this.startOffset + end,\r\n                line: this.lines[end],\r\n                column: this.columns[end]\r\n            }\r\n        };\r\n    }\r\n};\r\n\r\nmodule.exports = OffsetToLocation;\r\n","var TYPE = require('../tokenizer').TYPE;\r\nvar WHITESPACE = TYPE.WhiteSpace;\r\nvar COMMENT = TYPE.Comment;\r\n\r\nmodule.exports = function readSequence(recognizer) {\r\n    var children = this.createList();\r\n    var child = null;\r\n    var context = {\r\n        recognizer: recognizer,\r\n        space: null,\r\n        ignoreWS: false,\r\n        ignoreWSAfter: false\r\n    };\r\n\r\n    this.scanner.skipSC();\r\n\r\n    while (!this.scanner.eof) {\r\n        switch (this.scanner.tokenType) {\r\n            case COMMENT:\r\n                this.scanner.next();\r\n                continue;\r\n\r\n            case WHITESPACE:\r\n                if (context.ignoreWS) {\r\n                    this.scanner.next();\r\n                } else {\r\n                    context.space = this.WhiteSpace();\r\n                }\r\n                continue;\r\n        }\r\n\r\n        child = recognizer.getNode.call(this, context);\r\n\r\n        if (child === undefined) {\r\n            break;\r\n        }\r\n\r\n        if (context.space !== null) {\r\n            children.push(context.space);\r\n            context.space = null;\r\n        }\r\n\r\n        children.push(child);\r\n\r\n        if (context.ignoreWSAfter) {\r\n            context.ignoreWSAfter = false;\r\n            context.ignoreWS = true;\r\n        } else {\r\n            context.ignoreWS = false;\r\n        }\r\n    }\r\n\r\n    return children;\r\n};\r\n","var OffsetToLocation = require('../common/OffsetToLocation');\r\nvar SyntaxError = require('../common/SyntaxError');\r\nvar TokenStream = require('../common/TokenStream');\r\nvar List = require('../common/List');\r\nvar tokenize = require('../tokenizer');\r\nvar constants = require('../tokenizer/const');\r\nvar findWhiteSpaceStart = require('../tokenizer/utils').findWhiteSpaceStart;\r\nvar sequence = require('./sequence');\r\nvar noop = function() {};\r\n\r\nvar TYPE = constants.TYPE;\r\nvar NAME = constants.NAME;\r\nvar WHITESPACE = TYPE.WhiteSpace;\r\nvar IDENT = TYPE.Ident;\r\nvar FUNCTION = TYPE.Function;\r\nvar URL = TYPE.Url;\r\nvar HASH = TYPE.Hash;\r\nvar PERCENTAGE = TYPE.Percentage;\r\nvar NUMBER = TYPE.Number;\r\nvar NUMBERSIGN = 0x0023; // U+0023 NUMBER SIGN (#)\r\nvar NULL = 0;\r\n\r\nfunction createParseContext(name) {\r\n    return function() {\r\n        return this[name]();\r\n    };\r\n}\r\n\r\nfunction processConfig(config) {\r\n    var parserConfig = {\r\n        context: {},\r\n        scope: {},\r\n        atrule: {},\r\n        pseudo: {}\r\n    };\r\n\r\n    if (config.parseContext) {\r\n        for (var name in config.parseContext) {\r\n            switch (typeof config.parseContext[name]) {\r\n                case 'function':\r\n                    parserConfig.context[name] = config.parseContext[name];\r\n                    break;\r\n\r\n                case 'string':\r\n                    parserConfig.context[name] = createParseContext(config.parseContext[name]);\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    if (config.scope) {\r\n        for (var name in config.scope) {\r\n            parserConfig.scope[name] = config.scope[name];\r\n        }\r\n    }\r\n\r\n    if (config.atrule) {\r\n        for (var name in config.atrule) {\r\n            var atrule = config.atrule[name];\r\n\r\n            if (atrule.parse) {\r\n                parserConfig.atrule[name] = atrule.parse;\r\n            }\r\n        }\r\n    }\r\n\r\n    if (config.pseudo) {\r\n        for (var name in config.pseudo) {\r\n            var pseudo = config.pseudo[name];\r\n\r\n            if (pseudo.parse) {\r\n                parserConfig.pseudo[name] = pseudo.parse;\r\n            }\r\n        }\r\n    }\r\n\r\n    if (config.node) {\r\n        for (var name in config.node) {\r\n            parserConfig[name] = config.node[name].parse;\r\n        }\r\n    }\r\n\r\n    return parserConfig;\r\n}\r\n\r\nmodule.exports = function createParser(config) {\r\n    var parser = {\r\n        scanner: new TokenStream(),\r\n        locationMap: new OffsetToLocation(),\r\n\r\n        filename: '<unknown>',\r\n        needPositions: false,\r\n        onParseError: noop,\r\n        onParseErrorThrow: false,\r\n        parseAtrulePrelude: true,\r\n        parseRulePrelude: true,\r\n        parseValue: true,\r\n        parseCustomProperty: false,\r\n\r\n        readSequence: sequence,\r\n\r\n        createList: function() {\r\n            return new List();\r\n        },\r\n        createSingleNodeList: function(node) {\r\n            return new List().appendData(node);\r\n        },\r\n        getFirstListNode: function(list) {\r\n            return list && list.first();\r\n        },\r\n        getLastListNode: function(list) {\r\n            return list.last();\r\n        },\r\n\r\n        parseWithFallback: function(consumer, fallback) {\r\n            var startToken = this.scanner.tokenIndex;\r\n\r\n            try {\r\n                return consumer.call(this);\r\n            } catch (e) {\r\n                if (this.onParseErrorThrow) {\r\n                    throw e;\r\n                }\r\n\r\n                var fallbackNode = fallback.call(this, startToken);\r\n\r\n                this.onParseErrorThrow = true;\r\n                this.onParseError(e, fallbackNode);\r\n                this.onParseErrorThrow = false;\r\n\r\n                return fallbackNode;\r\n            }\r\n        },\r\n\r\n        lookupNonWSType: function(offset) {\r\n            do {\r\n                var type = this.scanner.lookupType(offset++);\r\n                if (type !== WHITESPACE) {\r\n                    return type;\r\n                }\r\n            } while (type !== NULL);\r\n\r\n            return NULL;\r\n        },\r\n\r\n        eat: function(tokenType) {\r\n            if (this.scanner.tokenType !== tokenType) {\r\n                var offset = this.scanner.tokenStart;\r\n                var message = NAME[tokenType] + ' is expected';\r\n\r\n                // tweak message and offset\r\n                switch (tokenType) {\r\n                    case IDENT:\r\n                        // when identifier is expected but there is a function or url\r\n                        if (this.scanner.tokenType === FUNCTION || this.scanner.tokenType === URL) {\r\n                            offset = this.scanner.tokenEnd - 1;\r\n                            message = 'Identifier is expected but function found';\r\n                        } else {\r\n                            message = 'Identifier is expected';\r\n                        }\r\n                        break;\r\n\r\n                    case HASH:\r\n                        if (this.scanner.isDelim(NUMBERSIGN)) {\r\n                            this.scanner.next();\r\n                            offset++;\r\n                            message = 'Name is expected';\r\n                        }\r\n                        break;\r\n\r\n                    case PERCENTAGE:\r\n                        if (this.scanner.tokenType === NUMBER) {\r\n                            offset = this.scanner.tokenEnd;\r\n                            message = 'Percent sign is expected';\r\n                        }\r\n                        break;\r\n\r\n                    default:\r\n                        // when test type is part of another token show error for current position + 1\r\n                        // e.g. eat(HYPHENMINUS) will fail on \"-foo\", but pointing on \"-\" is odd\r\n                        if (this.scanner.source.charCodeAt(this.scanner.tokenStart) === tokenType) {\r\n                            offset = offset + 1;\r\n                        }\r\n                }\r\n\r\n                this.error(message, offset);\r\n            }\r\n\r\n            this.scanner.next();\r\n        },\r\n\r\n        consume: function(tokenType) {\r\n            var value = this.scanner.getTokenValue();\r\n\r\n            this.eat(tokenType);\r\n\r\n            return value;\r\n        },\r\n        consumeFunctionName: function() {\r\n            var name = this.scanner.source.substring(this.scanner.tokenStart, this.scanner.tokenEnd - 1);\r\n\r\n            this.eat(FUNCTION);\r\n\r\n            return name;\r\n        },\r\n\r\n        getLocation: function(start, end) {\r\n            if (this.needPositions) {\r\n                return this.locationMap.getLocationRange(\r\n                    start,\r\n                    end,\r\n                    this.filename\r\n                );\r\n            }\r\n\r\n            return null;\r\n        },\r\n        getLocationFromList: function(list) {\r\n            if (this.needPositions) {\r\n                var head = this.getFirstListNode(list);\r\n                var tail = this.getLastListNode(list);\r\n                return this.locationMap.getLocationRange(\r\n                    head !== null ? head.loc.start.offset - this.locationMap.startOffset : this.scanner.tokenStart,\r\n                    tail !== null ? tail.loc.end.offset - this.locationMap.startOffset : this.scanner.tokenStart,\r\n                    this.filename\r\n                );\r\n            }\r\n\r\n            return null;\r\n        },\r\n\r\n        error: function(message, offset) {\r\n            var location = typeof offset !== 'undefined' && offset < this.scanner.source.length\r\n                ? this.locationMap.getLocation(offset)\r\n                : this.scanner.eof\r\n                    ? this.locationMap.getLocation(findWhiteSpaceStart(this.scanner.source, this.scanner.source.length - 1))\r\n                    : this.locationMap.getLocation(this.scanner.tokenStart);\r\n\r\n            throw new SyntaxError(\r\n                message || 'Unexpected input',\r\n                this.scanner.source,\r\n                location.offset,\r\n                location.line,\r\n                location.column\r\n            );\r\n        }\r\n    };\r\n\r\n    config = processConfig(config || {});\r\n    for (var key in config) {\r\n        parser[key] = config[key];\r\n    }\r\n\r\n    return function(source, options) {\r\n        options = options || {};\r\n\r\n        var context = options.context || 'default';\r\n        var ast;\r\n\r\n        tokenize(source, parser.scanner);\r\n        parser.locationMap.setSource(\r\n            source,\r\n            options.offset,\r\n            options.line,\r\n            options.column\r\n        );\r\n\r\n        parser.filename = options.filename || '<unknown>';\r\n        parser.needPositions = Boolean(options.positions);\r\n        parser.onParseError = typeof options.onParseError === 'function' ? options.onParseError : noop;\r\n        parser.onParseErrorThrow = false;\r\n        parser.parseAtrulePrelude = 'parseAtrulePrelude' in options ? Boolean(options.parseAtrulePrelude) : true;\r\n        parser.parseRulePrelude = 'parseRulePrelude' in options ? Boolean(options.parseRulePrelude) : true;\r\n        parser.parseValue = 'parseValue' in options ? Boolean(options.parseValue) : true;\r\n        parser.parseCustomProperty = 'parseCustomProperty' in options ? Boolean(options.parseCustomProperty) : false;\r\n\r\n        if (!parser.context.hasOwnProperty(context)) {\r\n            throw new Error('Unknown context `' + context + '`');\r\n        }\r\n\r\n        ast = parser.context[context].call(parser, options);\r\n\r\n        if (!parser.scanner.eof) {\r\n            parser.error();\r\n        }\r\n\r\n        return ast;\r\n    };\r\n};\r\n","var hasOwnProperty = Object.prototype.hasOwnProperty;\r\n\r\nfunction processChildren(node, delimeter) {\r\n    var list = node.children;\r\n    var prev = null;\r\n\r\n    if (typeof delimeter !== 'function') {\r\n        list.forEach(this.node, this);\r\n    } else {\r\n        list.forEach(function(node) {\r\n            if (prev !== null) {\r\n                delimeter.call(this, prev);\r\n            }\r\n\r\n            this.node(node);\r\n            prev = node;\r\n        }, this);\r\n    }\r\n}\r\n\r\nmodule.exports = function createGenerator(config) {\r\n    function processNode(node) {\r\n        if (hasOwnProperty.call(types, node.type)) {\r\n            types[node.type].call(this, node);\r\n        } else {\r\n            throw new Error('Unknown node type: ' + node.type);\r\n        }\r\n    }\r\n\r\n    var types = {};\r\n\r\n    if (config.node) {\r\n        for (var name in config.node) {\r\n            types[name] = config.node[name].generate;\r\n        }\r\n    }\r\n\r\n    return function(node, options) {\r\n        var buffer = '';\r\n        var handlers = {\r\n            children: processChildren,\r\n            node: processNode,\r\n            chunk: function(chunk) {\r\n                buffer += chunk;\r\n            },\r\n            result: function() {\r\n                return buffer;\r\n            }\r\n        };\r\n\r\n        if (options) {\r\n            if (typeof options.decorator === 'function') {\r\n                handlers = options.decorator(handlers);\r\n            }\r\n        }\r\n\r\n        handlers.node(node);\r\n\r\n        return handlers.result();\r\n    };\r\n};\r\n","var hasOwnProperty = Object.prototype.hasOwnProperty;\r\nvar noop = function() {};\r\n\r\nfunction ensureFunction(value) {\r\n    return typeof value === 'function' ? value : noop;\r\n}\r\n\r\nfunction invokeForType(fn, type) {\r\n    return function(node, item, list) {\r\n        if (node.type === type) {\r\n            fn.call(this, node, item, list);\r\n        }\r\n    };\r\n}\r\n\r\nfunction getWalkersFromStructure(name, nodeType) {\r\n    var structure = nodeType.structure;\r\n    var walkers = [];\r\n\r\n    for (var key in structure) {\r\n        if (hasOwnProperty.call(structure, key) === false) {\r\n            continue;\r\n        }\r\n\r\n        var fieldTypes = structure[key];\r\n        var walker = {\r\n            name: key,\r\n            type: false,\r\n            nullable: false\r\n        };\r\n\r\n        if (!Array.isArray(structure[key])) {\r\n            fieldTypes = [structure[key]];\r\n        }\r\n\r\n        for (var i = 0; i < fieldTypes.length; i++) {\r\n            var fieldType = fieldTypes[i];\r\n            if (fieldType === null) {\r\n                walker.nullable = true;\r\n            } else if (typeof fieldType === 'string') {\r\n                walker.type = 'node';\r\n            } else if (Array.isArray(fieldType)) {\r\n                walker.type = 'list';\r\n            }\r\n        }\r\n\r\n        if (walker.type) {\r\n            walkers.push(walker);\r\n        }\r\n    }\r\n\r\n    if (walkers.length) {\r\n        return {\r\n            context: nodeType.walkContext,\r\n            fields: walkers\r\n        };\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nfunction getTypesFromConfig(config) {\r\n    var types = {};\r\n\r\n    for (var name in config.node) {\r\n        if (hasOwnProperty.call(config.node, name)) {\r\n            var nodeType = config.node[name];\r\n\r\n            if (!nodeType.structure) {\r\n                throw new Error('Missed `structure` field in `' + name + '` node type definition');\r\n            }\r\n\r\n            types[name] = getWalkersFromStructure(name, nodeType);\r\n        }\r\n    }\r\n\r\n    return types;\r\n}\r\n\r\nfunction createTypeIterator(config, reverse) {\r\n    var fields = config.fields.slice();\r\n    var contextName = config.context;\r\n    var useContext = typeof contextName === 'string';\r\n\r\n    if (reverse) {\r\n        fields.reverse();\r\n    }\r\n\r\n    return function(node, context, walk) {\r\n        var prevContextValue;\r\n\r\n        if (useContext) {\r\n            prevContextValue = context[contextName];\r\n            context[contextName] = node;\r\n        }\r\n\r\n        for (var i = 0; i < fields.length; i++) {\r\n            var field = fields[i];\r\n            var ref = node[field.name];\r\n\r\n            if (!field.nullable || ref) {\r\n                if (field.type === 'list') {\r\n                    if (reverse) {\r\n                        ref.forEachRight(walk);\r\n                    } else {\r\n                        ref.forEach(walk);\r\n                    }\r\n                } else {\r\n                    walk(ref);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (useContext) {\r\n            context[contextName] = prevContextValue;\r\n        }\r\n    };\r\n}\r\n\r\nfunction createFastTraveralMap(iterators) {\r\n    return {\r\n        Atrule: {\r\n            StyleSheet: iterators.StyleSheet,\r\n            Atrule: iterators.Atrule,\r\n            Rule: iterators.Rule,\r\n            Block: iterators.Block\r\n        },\r\n        Rule: {\r\n            StyleSheet: iterators.StyleSheet,\r\n            Atrule: iterators.Atrule,\r\n            Rule: iterators.Rule,\r\n            Block: iterators.Block\r\n        },\r\n        Declaration: {\r\n            StyleSheet: iterators.StyleSheet,\r\n            Atrule: iterators.Atrule,\r\n            Rule: iterators.Rule,\r\n            Block: iterators.Block,\r\n            DeclarationList: iterators.DeclarationList\r\n        }\r\n    };\r\n}\r\n\r\nmodule.exports = function createWalker(config) {\r\n    var types = getTypesFromConfig(config);\r\n    var iteratorsNatural = {};\r\n    var iteratorsReverse = {};\r\n\r\n    for (var name in types) {\r\n        if (hasOwnProperty.call(types, name) && types[name] !== null) {\r\n            iteratorsNatural[name] = createTypeIterator(types[name], false);\r\n            iteratorsReverse[name] = createTypeIterator(types[name], true);\r\n        }\r\n    }\r\n\r\n    var fastTraversalIteratorsNatural = createFastTraveralMap(iteratorsNatural);\r\n    var fastTraversalIteratorsReverse = createFastTraveralMap(iteratorsReverse);\r\n\r\n    var walk = function(root, options) {\r\n        function walkNode(node, item, list) {\r\n            enter.call(context, node, item, list);\r\n\r\n            if (iterators.hasOwnProperty(node.type)) {\r\n                iterators[node.type](node, context, walkNode);\r\n            }\r\n\r\n            leave.call(context, node, item, list);\r\n        }\r\n\r\n        var enter = noop;\r\n        var leave = noop;\r\n        var iterators = iteratorsNatural;\r\n        var context = {\r\n            root: root,\r\n            stylesheet: null,\r\n            atrule: null,\r\n            atrulePrelude: null,\r\n            rule: null,\r\n            selector: null,\r\n            block: null,\r\n            declaration: null,\r\n            function: null\r\n        };\r\n\r\n        if (typeof options === 'function') {\r\n            enter = options;\r\n        } else if (options) {\r\n            enter = ensureFunction(options.enter);\r\n            leave = ensureFunction(options.leave);\r\n\r\n            if (options.reverse) {\r\n                iterators = iteratorsReverse;\r\n            }\r\n\r\n            if (options.visit) {\r\n                if (fastTraversalIteratorsNatural.hasOwnProperty(options.visit)) {\r\n                    iterators = options.reverse\r\n                        ? fastTraversalIteratorsReverse[options.visit]\r\n                        : fastTraversalIteratorsNatural[options.visit];\r\n                } else if (!types.hasOwnProperty(options.visit)) {\r\n                    throw new Error('Bad value `' + options.visit + '` for `visit` option (should be: ' + Object.keys(types).join(', ') + ')');\r\n                }\r\n\r\n                enter = invokeForType(enter, options.visit);\r\n                leave = invokeForType(leave, options.visit);\r\n            }\r\n        }\r\n\r\n        if (enter === noop && leave === noop) {\r\n            throw new Error('Neither `enter` nor `leave` walker handler is set or both aren\\'t a function');\r\n        }\r\n\r\n        // swap handlers in reverse mode to invert visit order\r\n        if (options.reverse) {\r\n            var tmp = enter;\r\n            enter = leave;\r\n            leave = tmp;\r\n        }\r\n\r\n        walkNode(root);\r\n    };\r\n\r\n    walk.find = function(ast, fn) {\r\n        var found = null;\r\n\r\n        walk(ast, function(node, item, list) {\r\n            if (found === null && fn.call(this, node, item, list)) {\r\n                found = node;\r\n            }\r\n        });\r\n\r\n        return found;\r\n    };\r\n\r\n    walk.findLast = function(ast, fn) {\r\n        var found = null;\r\n\r\n        walk(ast, {\r\n            reverse: true,\r\n            enter: function(node, item, list) {\r\n                if (found === null && fn.call(this, node, item, list)) {\r\n                    found = node;\r\n                }\r\n            }\r\n        });\r\n\r\n        return found;\r\n    };\r\n\r\n    walk.findAll = function(ast, fn) {\r\n        var found = [];\r\n\r\n        walk(ast, function(node, item, list) {\r\n            if (fn.call(this, node, item, list)) {\r\n                found.push(node);\r\n            }\r\n        });\r\n\r\n        return found;\r\n    };\r\n\r\n    return walk;\r\n};\r\n","var List = require('../common/List');\r\n\r\nmodule.exports = function clone(node) {\r\n    var result = {};\r\n\r\n    for (var key in node) {\r\n        var value = node[key];\r\n\r\n        if (value) {\r\n            if (Array.isArray(value) || value instanceof List) {\r\n                value = value.map(clone);\r\n            } else if (value.constructor === Object) {\r\n                value = clone(value);\r\n            }\r\n        }\r\n\r\n        result[key] = value;\r\n    }\r\n\r\n    return result;\r\n};\r\n","var hasOwnProperty = Object.prototype.hasOwnProperty;\r\nvar shape = {\r\n    generic: true,\r\n    types: {},\r\n    atrules: {},\r\n    properties: {},\r\n    parseContext: {},\r\n    scope: {},\r\n    atrule: ['parse'],\r\n    pseudo: ['parse'],\r\n    node: ['name', 'structure', 'parse', 'generate', 'walkContext']\r\n};\r\n\r\nfunction isObject(value) {\r\n    return value && value.constructor === Object;\r\n}\r\n\r\nfunction copy(value) {\r\n    if (isObject(value)) {\r\n        return Object.assign({}, value);\r\n    } else {\r\n        return value;\r\n    }\r\n}\r\nfunction extend(dest, src) {\r\n    for (var key in src) {\r\n        if (hasOwnProperty.call(src, key)) {\r\n            if (isObject(dest[key])) {\r\n                extend(dest[key], copy(src[key]));\r\n            } else {\r\n                dest[key] = copy(src[key]);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction mix(dest, src, shape) {\r\n    for (var key in shape) {\r\n        if (hasOwnProperty.call(shape, key) === false) {\r\n            continue;\r\n        }\r\n\r\n        if (shape[key] === true) {\r\n            if (key in src) {\r\n                if (hasOwnProperty.call(src, key)) {\r\n                    dest[key] = copy(src[key]);\r\n                }\r\n            }\r\n        } else if (shape[key]) {\r\n            if (isObject(shape[key])) {\r\n                var res = {};\r\n                extend(res, dest[key]);\r\n                extend(res, src[key]);\r\n                dest[key] = res;\r\n            } else if (Array.isArray(shape[key])) {\r\n                var res = {};\r\n                var innerShape = shape[key].reduce(function(s, k) {\r\n                    s[k] = true;\r\n                    return s;\r\n                }, {});\r\n                for (var name in dest[key]) {\r\n                    if (hasOwnProperty.call(dest[key], name)) {\r\n                        res[name] = {};\r\n                        if (dest[key] && dest[key][name]) {\r\n                            mix(res[name], dest[key][name], innerShape);\r\n                        }\r\n                    }\r\n                }\r\n                for (var name in src[key]) {\r\n                    if (hasOwnProperty.call(src[key], name)) {\r\n                        if (!res[name]) {\r\n                            res[name] = {};\r\n                        }\r\n                        if (src[key] && src[key][name]) {\r\n                            mix(res[name], src[key][name], innerShape);\r\n                        }\r\n                    }\r\n                }\r\n                dest[key] = res;\r\n            }\r\n        }\r\n    }\r\n    return dest;\r\n}\r\n\r\nmodule.exports = function(dest, src) {\r\n    return mix(dest, src, shape);\r\n};\r\n","var List = require('../common/List');\r\nvar SyntaxError = require('../common/SyntaxError');\r\nvar TokenStream = require('../common/TokenStream');\r\nvar Lexer = require('../lexer/Lexer');\r\nvar definitionSyntax = require('../definition-syntax');\r\nvar tokenize = require('../tokenizer');\r\nvar createParser = require('../parser/create');\r\nvar createGenerator = require('../generator/create');\r\nvar createConvertor = require('../convertor/create');\r\nvar createWalker = require('../walker/create');\r\nvar clone = require('../utils/clone');\r\nvar names = require('../utils/names');\r\nvar mix = require('./config/mix');\r\n\r\nfunction createSyntax(config) {\r\n    var parse = createParser(config);\r\n    var walk = createWalker(config);\r\n    var generate = createGenerator(config);\r\n    var convert = createConvertor(walk);\r\n\r\n    var syntax = {\r\n        List: List,\r\n        SyntaxError: SyntaxError,\r\n        TokenStream: TokenStream,\r\n        Lexer: Lexer,\r\n\r\n        vendorPrefix: names.vendorPrefix,\r\n        keyword: names.keyword,\r\n        property: names.property,\r\n        isCustomProperty: names.isCustomProperty,\r\n\r\n        definitionSyntax: definitionSyntax,\r\n        lexer: null,\r\n        createLexer: function(config) {\r\n            return new Lexer(config, syntax, syntax.lexer.structure);\r\n        },\r\n\r\n        tokenize: tokenize,\r\n        parse: parse,\r\n        walk: walk,\r\n        generate: generate,\r\n\r\n        find: walk.find,\r\n        findLast: walk.findLast,\r\n        findAll: walk.findAll,\r\n\r\n        clone: clone,\r\n        fromPlainObject: convert.fromPlainObject,\r\n        toPlainObject: convert.toPlainObject,\r\n\r\n        createSyntax: function(config) {\r\n            return createSyntax(mix({}, config));\r\n        },\r\n        fork: function(extension) {\r\n            var base = mix({}, config); // copy of config\r\n            return createSyntax(\r\n                typeof extension === 'function'\r\n                    ? extension(base, Object.assign)\r\n                    : mix(base, extension)\r\n            );\r\n        }\r\n    };\r\n\r\n    syntax.lexer = new Lexer({\r\n        generic: true,\r\n        types: config.types,\r\n        atrules: config.atrules,\r\n        properties: config.properties,\r\n        node: config.node\r\n    }, syntax);\r\n\r\n    return syntax;\r\n};\r\n\r\nexports.create = function(config) {\r\n    return createSyntax(mix({}, config));\r\n};\r\n","var List = require('../common/List');\r\n\r\nmodule.exports = function createConvertors(walk) {\r\n    return {\r\n        fromPlainObject: function(ast) {\r\n            walk(ast, {\r\n                enter: function(node) {\r\n                    if (node.children && node.children instanceof List === false) {\r\n                        node.children = new List().fromArray(node.children);\r\n                    }\r\n                }\r\n            });\r\n\r\n            return ast;\r\n        },\r\n        toPlainObject: function(ast) {\r\n            walk(ast, {\r\n                leave: function(node) {\r\n                    if (node.children && node.children instanceof List) {\r\n                        node.children = node.children.toArray();\r\n                    }\r\n                }\r\n            });\r\n\r\n            return ast;\r\n        }\r\n    };\r\n};\r\n","var mdnAtrules = require('mdn-data-animatable/css/at-rules.json');\r\nvar mdnProperties = require('mdn-data-animatable/css/properties.json');\r\nvar mdnSyntaxes = require('mdn-data-animatable/css/syntaxes.json');\r\nvar patch = require('./patch.json');\r\n\r\nfunction preprocessAtrules(dict) {\r\n    var result = Object.create(null);\r\n\r\n    for (var atruleName in dict) {\r\n        var atrule = dict[atruleName];\r\n        var descriptors = null;\r\n\r\n        if (atrule.descriptors) {\r\n            descriptors = Object.create(null);\r\n\r\n            for (var descriptor in atrule.descriptors) {\r\n                descriptors[descriptor] = atrule.descriptors[descriptor].syntax;\r\n            }\r\n        }\r\n\r\n        result[atruleName.substr(1)] = {\r\n            prelude: atrule.syntax.trim().match(/^@\\S+\\s+([^;\\{]*)/)[1].trim() || null,\r\n            descriptors\r\n        };\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nfunction buildDictionary(dict, patchDict) {\r\n    var result = {};\r\n\r\n    // copy all syntaxes for an original dict\r\n    for (var key in dict) {\r\n        result[key] = dict[key].syntax;\r\n    }\r\n\r\n    // apply a patch\r\n    for (var key in patchDict) {\r\n        if (key in dict) {\r\n            if (patchDict[key].syntax) {\r\n                result[key] = patchDict[key].syntax;\r\n            } else {\r\n                delete result[key];\r\n            }\r\n        } else {\r\n            if (patchDict[key].syntax) {\r\n                result[key] = patchDict[key].syntax;\r\n            }\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nmodule.exports = {\r\n    types: buildDictionary(mdnSyntaxes, patch.syntaxes),\r\n    atrules: preprocessAtrules(mdnAtrules),\r\n    properties: buildDictionary(mdnProperties, patch.properties)\r\n};\r\n","var cmpChar = require('../../tokenizer').cmpChar;\r\nvar isDigit = require('../../tokenizer').isDigit;\r\nvar TYPE = require('../../tokenizer').TYPE;\r\n\r\nvar WHITESPACE = TYPE.WhiteSpace;\r\nvar COMMENT = TYPE.Comment;\r\nvar IDENT = TYPE.Ident;\r\nvar NUMBER = TYPE.Number;\r\nvar DIMENSION = TYPE.Dimension;\r\nvar PLUSSIGN = 0x002B;    // U+002B PLUS SIGN (+)\r\nvar HYPHENMINUS = 0x002D; // U+002D HYPHEN-MINUS (-)\r\nvar N = 0x006E;           // U+006E LATIN SMALL LETTER N (n)\r\nvar DISALLOW_SIGN = true;\r\nvar ALLOW_SIGN = false;\r\n\r\nfunction checkInteger(offset, disallowSign) {\r\n    var pos = this.scanner.tokenStart + offset;\r\n    var code = this.scanner.source.charCodeAt(pos);\r\n\r\n    if (code === PLUSSIGN || code === HYPHENMINUS) {\r\n        if (disallowSign) {\r\n            this.error('Number sign is not allowed');\r\n        }\r\n        pos++;\r\n    }\r\n\r\n    for (; pos < this.scanner.tokenEnd; pos++) {\r\n        if (!isDigit(this.scanner.source.charCodeAt(pos))) {\r\n            this.error('Integer is expected', pos);\r\n        }\r\n    }\r\n}\r\n\r\nfunction checkTokenIsInteger(disallowSign) {\r\n    return checkInteger.call(this, 0, disallowSign);\r\n}\r\n\r\nfunction expectCharCode(offset, code) {\r\n    if (!cmpChar(this.scanner.source, this.scanner.tokenStart + offset, code)) {\r\n        var msg = '';\r\n\r\n        switch (code) {\r\n            case N:\r\n                msg = 'N is expected';\r\n                break;\r\n            case HYPHENMINUS:\r\n                msg = 'HyphenMinus is expected';\r\n                break;\r\n        }\r\n\r\n        this.error(msg, this.scanner.tokenStart + offset);\r\n    }\r\n}\r\n\r\n// ... <signed-integer>\r\n// ... ['+' | '-'] <signless-integer>\r\nfunction consumeB() {\r\n    var offset = 0;\r\n    var sign = 0;\r\n    var type = this.scanner.tokenType;\r\n\r\n    while (type === WHITESPACE || type === COMMENT) {\r\n        type = this.scanner.lookupType(++offset);\r\n    }\r\n\r\n    if (type !== NUMBER) {\r\n        if (this.scanner.isDelim(PLUSSIGN, offset) ||\r\n            this.scanner.isDelim(HYPHENMINUS, offset)) {\r\n            sign = this.scanner.isDelim(PLUSSIGN, offset) ? PLUSSIGN : HYPHENMINUS;\r\n\r\n            do {\r\n                type = this.scanner.lookupType(++offset);\r\n            } while (type === WHITESPACE || type === COMMENT);\r\n\r\n            if (type !== NUMBER) {\r\n                this.scanner.skip(offset);\r\n                checkTokenIsInteger.call(this, DISALLOW_SIGN);\r\n            }\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    if (offset > 0) {\r\n        this.scanner.skip(offset);\r\n    }\r\n\r\n    if (sign === 0) {\r\n        type = this.scanner.source.charCodeAt(this.scanner.tokenStart);\r\n        if (type !== PLUSSIGN && type !== HYPHENMINUS) {\r\n            this.error('Number sign is expected');\r\n        }\r\n    }\r\n\r\n    checkTokenIsInteger.call(this, sign !== 0);\r\n    return sign === HYPHENMINUS ? '-' + this.consume(NUMBER) : this.consume(NUMBER);\r\n}\r\n\r\n// An+B microsyntax https://www.w3.org/TR/css-syntax-3/#anb\r\nmodule.exports = {\r\n    name: 'AnPlusB',\r\n    structure: {\r\n        a: [String, null],\r\n        b: [String, null]\r\n    },\r\n    parse: function() {\r\n        /* eslint-disable brace-style*/\r\n        var start = this.scanner.tokenStart;\r\n        var a = null;\r\n        var b = null;\r\n\r\n        // <integer>\r\n        if (this.scanner.tokenType === NUMBER) {\r\n            checkTokenIsInteger.call(this, ALLOW_SIGN);\r\n            b = this.consume(NUMBER);\r\n        }\r\n\r\n        // -n\r\n        // -n <signed-integer>\r\n        // -n ['+' | '-'] <signless-integer>\r\n        // -n- <signless-integer>\r\n        // <dashndashdigit-ident>\r\n        else if (this.scanner.tokenType === IDENT && cmpChar(this.scanner.source, this.scanner.tokenStart, HYPHENMINUS)) {\r\n            a = '-1';\r\n\r\n            expectCharCode.call(this, 1, N);\r\n\r\n            switch (this.scanner.getTokenLength()) {\r\n                // -n\r\n                // -n <signed-integer>\r\n                // -n ['+' | '-'] <signless-integer>\r\n                case 2:\r\n                    this.scanner.next();\r\n                    b = consumeB.call(this);\r\n                    break;\r\n\r\n                // -n- <signless-integer>\r\n                case 3:\r\n                    expectCharCode.call(this, 2, HYPHENMINUS);\r\n\r\n                    this.scanner.next();\r\n                    this.scanner.skipSC();\r\n\r\n                    checkTokenIsInteger.call(this, DISALLOW_SIGN);\r\n\r\n                    b = '-' + this.consume(NUMBER);\r\n                    break;\r\n\r\n                // <dashndashdigit-ident>\r\n                default:\r\n                    expectCharCode.call(this, 2, HYPHENMINUS);\r\n                    checkInteger.call(this, 3, DISALLOW_SIGN);\r\n                    this.scanner.next();\r\n\r\n                    b = this.scanner.substrToCursor(start + 2);\r\n            }\r\n        }\r\n\r\n        // '+'? n\r\n        // '+'? n <signed-integer>\r\n        // '+'? n ['+' | '-'] <signless-integer>\r\n        // '+'? n- <signless-integer>\r\n        // '+'? <ndashdigit-ident>\r\n        else if (this.scanner.tokenType === IDENT || (this.scanner.isDelim(PLUSSIGN) && this.scanner.lookupType(1) === IDENT)) {\r\n            var sign = 0;\r\n            a = '1';\r\n\r\n            // just ignore a plus\r\n            if (this.scanner.isDelim(PLUSSIGN)) {\r\n                sign = 1;\r\n                this.scanner.next();\r\n            }\r\n\r\n            expectCharCode.call(this, 0, N);\r\n\r\n            switch (this.scanner.getTokenLength()) {\r\n                // '+'? n\r\n                // '+'? n <signed-integer>\r\n                // '+'? n ['+' | '-'] <signless-integer>\r\n                case 1:\r\n                    this.scanner.next();\r\n                    b = consumeB.call(this);\r\n                    break;\r\n\r\n                // '+'? n- <signless-integer>\r\n                case 2:\r\n                    expectCharCode.call(this, 1, HYPHENMINUS);\r\n\r\n                    this.scanner.next();\r\n                    this.scanner.skipSC();\r\n\r\n                    checkTokenIsInteger.call(this, DISALLOW_SIGN);\r\n\r\n                    b = '-' + this.consume(NUMBER);\r\n                    break;\r\n\r\n                // '+'? <ndashdigit-ident>\r\n                default:\r\n                    expectCharCode.call(this, 1, HYPHENMINUS);\r\n                    checkInteger.call(this, 2, DISALLOW_SIGN);\r\n                    this.scanner.next();\r\n\r\n                    b = this.scanner.substrToCursor(start + sign + 1);\r\n            }\r\n        }\r\n\r\n        // <ndashdigit-dimension>\r\n        // <ndash-dimension> <signless-integer>\r\n        // <n-dimension>\r\n        // <n-dimension> <signed-integer>\r\n        // <n-dimension> ['+' | '-'] <signless-integer>\r\n        else if (this.scanner.tokenType === DIMENSION) {\r\n            var code = this.scanner.source.charCodeAt(this.scanner.tokenStart);\r\n            var sign = code === PLUSSIGN || code === HYPHENMINUS;\r\n\r\n            for (var i = this.scanner.tokenStart + sign; i < this.scanner.tokenEnd; i++) {\r\n                if (!isDigit(this.scanner.source.charCodeAt(i))) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (i === this.scanner.tokenStart + sign) {\r\n                this.error('Integer is expected', this.scanner.tokenStart + sign);\r\n            }\r\n\r\n            expectCharCode.call(this, i - this.scanner.tokenStart, N);\r\n            a = this.scanner.source.substring(start, i);\r\n\r\n            // <n-dimension>\r\n            // <n-dimension> <signed-integer>\r\n            // <n-dimension> ['+' | '-'] <signless-integer>\r\n            if (i + 1 === this.scanner.tokenEnd) {\r\n                this.scanner.next();\r\n                b = consumeB.call(this);\r\n            } else {\r\n                expectCharCode.call(this, i - this.scanner.tokenStart + 1, HYPHENMINUS);\r\n\r\n                // <ndash-dimension> <signless-integer>\r\n                if (i + 2 === this.scanner.tokenEnd) {\r\n                    this.scanner.next();\r\n                    this.scanner.skipSC();\r\n                    checkTokenIsInteger.call(this, DISALLOW_SIGN);\r\n                    b = '-' + this.consume(NUMBER);\r\n                }\r\n                // <ndashdigit-dimension>\r\n                else {\r\n                    checkInteger.call(this, i - this.scanner.tokenStart + 2, DISALLOW_SIGN);\r\n                    this.scanner.next();\r\n                    b = this.scanner.substrToCursor(i + 1);\r\n                }\r\n            }\r\n        } else {\r\n            this.error();\r\n        }\r\n\r\n        if (a !== null && a.charCodeAt(0) === PLUSSIGN) {\r\n            a = a.substr(1);\r\n        }\r\n\r\n        if (b !== null && b.charCodeAt(0) === PLUSSIGN) {\r\n            b = b.substr(1);\r\n        }\r\n\r\n        return {\r\n            type: 'AnPlusB',\r\n            loc: this.getLocation(start, this.scanner.tokenStart),\r\n            a: a,\r\n            b: b\r\n        };\r\n    },\r\n    generate: function(node) {\r\n        var a = node.a !== null && node.a !== undefined;\r\n        var b = node.b !== null && node.b !== undefined;\r\n\r\n        if (a) {\r\n            this.chunk(\r\n                node.a === '+1' ? '+n' : // eslint-disable-line operator-linebreak, indent\r\n                node.a ===  '1' ?  'n' : // eslint-disable-line operator-linebreak, indent\r\n                node.a === '-1' ? '-n' : // eslint-disable-line operator-linebreak, indent\r\n                node.a + 'n'             // eslint-disable-line operator-linebreak, indent\r\n            );\r\n\r\n            if (b) {\r\n                b = String(node.b);\r\n                if (b.charAt(0) === '-' || b.charAt(0) === '+') {\r\n                    this.chunk(b.charAt(0));\r\n                    this.chunk(b.substr(1));\r\n                } else {\r\n                    this.chunk('+');\r\n                    this.chunk(b);\r\n                }\r\n            }\r\n        } else {\r\n            this.chunk(String(node.b));\r\n        }\r\n    }\r\n};\r\n","var tokenizer = require('../../tokenizer');\r\nvar TYPE = tokenizer.TYPE;\r\n\r\nvar WhiteSpace = TYPE.WhiteSpace;\r\nvar Semicolon = TYPE.Semicolon;\r\nvar LeftCurlyBracket = TYPE.LeftCurlyBracket;\r\nvar Delim = TYPE.Delim;\r\nvar EXCLAMATIONMARK = 0x0021; // U+0021 EXCLAMATION MARK (!)\r\n\r\nfunction getOffsetExcludeWS() {\r\n    if (this.scanner.tokenIndex > 0) {\r\n        if (this.scanner.lookupType(-1) === WhiteSpace) {\r\n            return this.scanner.tokenIndex > 1\r\n                ? this.scanner.getTokenStart(this.scanner.tokenIndex - 1)\r\n                : this.scanner.firstCharOffset;\r\n        }\r\n    }\r\n\r\n    return this.scanner.tokenStart;\r\n}\r\n\r\n// 0, 0, false\r\nfunction balanceEnd() {\r\n    return 0;\r\n}\r\n\r\n// LEFTCURLYBRACKET, 0, false\r\nfunction leftCurlyBracket(tokenType) {\r\n    return tokenType === LeftCurlyBracket ? 1 : 0;\r\n}\r\n\r\n// LEFTCURLYBRACKET, SEMICOLON, false\r\nfunction leftCurlyBracketOrSemicolon(tokenType) {\r\n    return tokenType === LeftCurlyBracket || tokenType === Semicolon ? 1 : 0;\r\n}\r\n\r\n// EXCLAMATIONMARK, SEMICOLON, false\r\nfunction exclamationMarkOrSemicolon(tokenType, source, offset) {\r\n    if (tokenType === Delim && source.charCodeAt(offset) === EXCLAMATIONMARK) {\r\n        return 1;\r\n    }\r\n\r\n    return tokenType === Semicolon ? 1 : 0;\r\n}\r\n\r\n// 0, SEMICOLON, true\r\nfunction semicolonIncluded(tokenType) {\r\n    return tokenType === Semicolon ? 2 : 0;\r\n}\r\n\r\nmodule.exports = {\r\n    name: 'Raw',\r\n    structure: {\r\n        value: String\r\n    },\r\n    parse: function(startToken, mode, excludeWhiteSpace) {\r\n        var startOffset = this.scanner.getTokenStart(startToken);\r\n        var endOffset;\r\n\r\n        this.scanner.skip(\r\n            this.scanner.getRawLength(startToken, mode || balanceEnd)\r\n        );\r\n\r\n        if (excludeWhiteSpace && this.scanner.tokenStart > startOffset) {\r\n            endOffset = getOffsetExcludeWS.call(this);\r\n        } else {\r\n            endOffset = this.scanner.tokenStart;\r\n        }\r\n\r\n        return {\r\n            type: 'Raw',\r\n            loc: this.getLocation(startOffset, endOffset),\r\n            value: this.scanner.source.substring(startOffset, endOffset)\r\n        };\r\n    },\r\n    generate: function(node) {\r\n        this.chunk(node.value);\r\n    },\r\n\r\n    mode: {\r\n        default: balanceEnd,\r\n        leftCurlyBracket: leftCurlyBracket,\r\n        leftCurlyBracketOrSemicolon: leftCurlyBracketOrSemicolon,\r\n        exclamationMarkOrSemicolon: exclamationMarkOrSemicolon,\r\n        semicolonIncluded: semicolonIncluded\r\n    }\r\n};\r\n","var TYPE = require('../../tokenizer').TYPE;\r\nvar rawMode = require('./Raw').mode;\r\n\r\nvar ATKEYWORD = TYPE.AtKeyword;\r\nvar SEMICOLON = TYPE.Semicolon;\r\nvar LEFTCURLYBRACKET = TYPE.LeftCurlyBracket;\r\nvar RIGHTCURLYBRACKET = TYPE.RightCurlyBracket;\r\n\r\nfunction consumeRaw(startToken) {\r\n    return this.Raw(startToken, rawMode.leftCurlyBracketOrSemicolon, true);\r\n}\r\n\r\nfunction isDeclarationBlockAtrule() {\r\n    for (var offset = 1, type; type = this.scanner.lookupType(offset); offset++) {\r\n        if (type === RIGHTCURLYBRACKET) {\r\n            return true;\r\n        }\r\n\r\n        if (type === LEFTCURLYBRACKET ||\r\n            type === ATKEYWORD) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\nmodule.exports = {\r\n    name: 'Atrule',\r\n    structure: {\r\n        name: String,\r\n        prelude: ['AtrulePrelude', 'Raw', null],\r\n        block: ['Block', null]\r\n    },\r\n    parse: function() {\r\n        var start = this.scanner.tokenStart;\r\n        var name;\r\n        var nameLowerCase;\r\n        var prelude = null;\r\n        var block = null;\r\n\r\n        this.eat(ATKEYWORD);\r\n\r\n        name = this.scanner.substrToCursor(start + 1);\r\n        nameLowerCase = name.toLowerCase();\r\n        this.scanner.skipSC();\r\n\r\n        // parse prelude\r\n        if (this.scanner.eof === false &&\r\n            this.scanner.tokenType !== LEFTCURLYBRACKET &&\r\n            this.scanner.tokenType !== SEMICOLON) {\r\n            if (this.parseAtrulePrelude) {\r\n                prelude = this.parseWithFallback(this.AtrulePrelude.bind(this, name), consumeRaw);\r\n\r\n                // turn empty AtrulePrelude into null\r\n                if (prelude.type === 'AtrulePrelude' && prelude.children.head === null) {\r\n                    prelude = null;\r\n                }\r\n            } else {\r\n                prelude = consumeRaw.call(this, this.scanner.tokenIndex);\r\n            }\r\n\r\n            this.scanner.skipSC();\r\n        }\r\n\r\n        switch (this.scanner.tokenType) {\r\n            case SEMICOLON:\r\n                this.scanner.next();\r\n                break;\r\n\r\n            case LEFTCURLYBRACKET:\r\n                if (this.atrule.hasOwnProperty(nameLowerCase) &&\r\n                    typeof this.atrule[nameLowerCase].block === 'function') {\r\n                    block = this.atrule[nameLowerCase].block.call(this);\r\n                } else {\r\n                    // TODO: should consume block content as Raw?\r\n                    block = this.Block(isDeclarationBlockAtrule.call(this));\r\n                }\r\n\r\n                break;\r\n        }\r\n\r\n        return {\r\n            type: 'Atrule',\r\n            loc: this.getLocation(start, this.scanner.tokenStart),\r\n            name: name,\r\n            prelude: prelude,\r\n            block: block\r\n        };\r\n    },\r\n    generate: function(node) {\r\n        this.chunk('@');\r\n        this.chunk(node.name);\r\n\r\n        if (node.prelude !== null) {\r\n            this.chunk(' ');\r\n            this.node(node.prelude);\r\n        }\r\n\r\n        if (node.block) {\r\n            this.node(node.block);\r\n        } else {\r\n            this.chunk(';');\r\n        }\r\n    },\r\n    walkContext: 'atrule'\r\n};\r\n","var TYPE = require('../../tokenizer').TYPE;\r\n\r\nvar SEMICOLON = TYPE.Semicolon;\r\nvar LEFTCURLYBRACKET = TYPE.LeftCurlyBracket;\r\n\r\nmodule.exports = {\r\n    name: 'AtrulePrelude',\r\n    structure: {\r\n        children: [[]]\r\n    },\r\n    parse: function(name) {\r\n        var children = null;\r\n\r\n        if (name !== null) {\r\n            name = name.toLowerCase();\r\n        }\r\n\r\n        this.scanner.skipSC();\r\n\r\n        if (this.atrule.hasOwnProperty(name) &&\r\n            typeof this.atrule[name].prelude === 'function') {\r\n            // custom consumer\r\n            children = this.atrule[name].prelude.call(this);\r\n        } else {\r\n            // default consumer\r\n            children = this.readSequence(this.scope.AtrulePrelude);\r\n        }\r\n\r\n        this.scanner.skipSC();\r\n\r\n        if (this.scanner.eof !== true &&\r\n            this.scanner.tokenType !== LEFTCURLYBRACKET &&\r\n            this.scanner.tokenType !== SEMICOLON) {\r\n            this.error('Semicolon or block is expected');\r\n        }\r\n\r\n        if (children === null) {\r\n            children = this.createList();\r\n        }\r\n\r\n        return {\r\n            type: 'AtrulePrelude',\r\n            loc: this.getLocationFromList(children),\r\n            children: children\r\n        };\r\n    },\r\n    generate: function(node) {\r\n        this.children(node);\r\n    },\r\n    walkContext: 'atrulePrelude'\r\n};\r\n","var TYPE = require('../../tokenizer').TYPE;\r\n\r\nvar IDENT = TYPE.Ident;\r\nvar STRING = TYPE.String;\r\nvar COLON = TYPE.Colon;\r\nvar LEFTSQUAREBRACKET = TYPE.LeftSquareBracket;\r\nvar RIGHTSQUAREBRACKET = TYPE.RightSquareBracket;\r\nvar DOLLARSIGN = 0x0024;       // U+0024 DOLLAR SIGN ($)\r\nvar ASTERISK = 0x002A;         // U+002A ASTERISK (*)\r\nvar EQUALSSIGN = 0x003D;       // U+003D EQUALS SIGN (=)\r\nvar CIRCUMFLEXACCENT = 0x005E; // U+005E (^)\r\nvar VERTICALLINE = 0x007C;     // U+007C VERTICAL LINE (|)\r\nvar TILDE = 0x007E;            // U+007E TILDE (~)\r\n\r\nfunction getAttributeName() {\r\n    if (this.scanner.eof) {\r\n        this.error('Unexpected end of input');\r\n    }\r\n\r\n    var start = this.scanner.tokenStart;\r\n    var expectIdent = false;\r\n    var checkColon = true;\r\n\r\n    if (this.scanner.isDelim(ASTERISK)) {\r\n        expectIdent = true;\r\n        checkColon = false;\r\n        this.scanner.next();\r\n    } else if (!this.scanner.isDelim(VERTICALLINE)) {\r\n        this.eat(IDENT);\r\n    }\r\n\r\n    if (this.scanner.isDelim(VERTICALLINE)) {\r\n        if (this.scanner.source.charCodeAt(this.scanner.tokenStart + 1) !== EQUALSSIGN) {\r\n            this.scanner.next();\r\n            this.eat(IDENT);\r\n        } else if (expectIdent) {\r\n            this.error('Identifier is expected', this.scanner.tokenEnd);\r\n        }\r\n    } else if (expectIdent) {\r\n        this.error('Vertical line is expected');\r\n    }\r\n\r\n    if (checkColon && this.scanner.tokenType === COLON) {\r\n        this.scanner.next();\r\n        this.eat(IDENT);\r\n    }\r\n\r\n    return {\r\n        type: 'Identifier',\r\n        loc: this.getLocation(start, this.scanner.tokenStart),\r\n        name: this.scanner.substrToCursor(start)\r\n    };\r\n}\r\n\r\nfunction getOperator() {\r\n    var start = this.scanner.tokenStart;\r\n    var code = this.scanner.source.charCodeAt(start);\r\n\r\n    if (code !== EQUALSSIGN &&        // =\r\n        code !== TILDE &&             // ~=\r\n        code !== CIRCUMFLEXACCENT &&  // ^=\r\n        code !== DOLLARSIGN &&        // $=\r\n        code !== ASTERISK &&          // *=\r\n        code !== VERTICALLINE         // |=\r\n    ) {\r\n        this.error('Attribute selector (=, ~=, ^=, $=, *=, |=) is expected');\r\n    }\r\n\r\n    this.scanner.next();\r\n\r\n    if (code !== EQUALSSIGN) {\r\n        if (!this.scanner.isDelim(EQUALSSIGN)) {\r\n            this.error('Equal sign is expected');\r\n        }\r\n\r\n        this.scanner.next();\r\n    }\r\n\r\n    return this.scanner.substrToCursor(start);\r\n}\r\n\r\n// '[' <wq-name> ']'\r\n// '[' <wq-name> <attr-matcher> [ <string-token> | <ident-token> ] <attr-modifier>? ']'\r\nmodule.exports = {\r\n    name: 'AttributeSelector',\r\n    structure: {\r\n        name: 'Identifier',\r\n        matcher: [String, null],\r\n        value: ['String', 'Identifier', null],\r\n        flags: [String, null]\r\n    },\r\n    parse: function() {\r\n        var start = this.scanner.tokenStart;\r\n        var name;\r\n        var matcher = null;\r\n        var value = null;\r\n        var flags = null;\r\n\r\n        this.eat(LEFTSQUAREBRACKET);\r\n        this.scanner.skipSC();\r\n\r\n        name = getAttributeName.call(this);\r\n        this.scanner.skipSC();\r\n\r\n        if (this.scanner.tokenType !== RIGHTSQUAREBRACKET) {\r\n            // avoid case `[name i]`\r\n            if (this.scanner.tokenType !== IDENT) {\r\n                matcher = getOperator.call(this);\r\n\r\n                this.scanner.skipSC();\r\n\r\n                value = this.scanner.tokenType === STRING\r\n                    ? this.String()\r\n                    : this.Identifier();\r\n\r\n                this.scanner.skipSC();\r\n            }\r\n\r\n            // attribute flags\r\n            if (this.scanner.tokenType === IDENT) {\r\n                flags = this.scanner.getTokenValue();\r\n                this.scanner.next();\r\n\r\n                this.scanner.skipSC();\r\n            }\r\n        }\r\n\r\n        this.eat(RIGHTSQUAREBRACKET);\r\n\r\n        return {\r\n            type: 'AttributeSelector',\r\n            loc: this.getLocation(start, this.scanner.tokenStart),\r\n            name: name,\r\n            matcher: matcher,\r\n            value: value,\r\n            flags: flags\r\n        };\r\n    },\r\n    generate: function(node) {\r\n        var flagsPrefix = ' ';\r\n\r\n        this.chunk('[');\r\n        this.node(node.name);\r\n\r\n        if (node.matcher !== null) {\r\n            this.chunk(node.matcher);\r\n\r\n            if (node.value !== null) {\r\n                this.node(node.value);\r\n\r\n                // space between string and flags is not required\r\n                if (node.value.type === 'String') {\r\n                    flagsPrefix = '';\r\n                }\r\n            }\r\n        }\r\n\r\n        if (node.flags !== null) {\r\n            this.chunk(flagsPrefix);\r\n            this.chunk(node.flags);\r\n        }\r\n\r\n        this.chunk(']');\r\n    }\r\n};\r\n","var TYPE = require('../../tokenizer').TYPE;\r\nvar rawMode = require('./Raw').mode;\r\n\r\nvar WHITESPACE = TYPE.WhiteSpace;\r\nvar COMMENT = TYPE.Comment;\r\nvar SEMICOLON = TYPE.Semicolon;\r\nvar ATKEYWORD = TYPE.AtKeyword;\r\nvar LEFTCURLYBRACKET = TYPE.LeftCurlyBracket;\r\nvar RIGHTCURLYBRACKET = TYPE.RightCurlyBracket;\r\n\r\nfunction consumeRaw(startToken) {\r\n    return this.Raw(startToken, null, true);\r\n}\r\nfunction consumeRule() {\r\n    return this.parseWithFallback(this.Rule, consumeRaw);\r\n}\r\nfunction consumeRawDeclaration(startToken) {\r\n    return this.Raw(startToken, rawMode.semicolonIncluded, true);\r\n}\r\nfunction consumeDeclaration() {\r\n    if (this.scanner.tokenType === SEMICOLON) {\r\n        return consumeRawDeclaration.call(this, this.scanner.tokenIndex);\r\n    }\r\n\r\n    var node = this.parseWithFallback(this.Declaration, consumeRawDeclaration);\r\n\r\n    if (this.scanner.tokenType === SEMICOLON) {\r\n        this.scanner.next();\r\n    }\r\n\r\n    return node;\r\n}\r\n\r\nmodule.exports = {\r\n    name: 'Block',\r\n    structure: {\r\n        children: [[\r\n            'Atrule',\r\n            'Rule',\r\n            'Declaration'\r\n        ]]\r\n    },\r\n    parse: function(isDeclaration) {\r\n        var consumer = isDeclaration ? consumeDeclaration : consumeRule;\r\n\r\n        var start = this.scanner.tokenStart;\r\n        var children = this.createList();\r\n\r\n        this.eat(LEFTCURLYBRACKET);\r\n\r\n        scan:\r\n        while (!this.scanner.eof) {\r\n            switch (this.scanner.tokenType) {\r\n                case RIGHTCURLYBRACKET:\r\n                    break scan;\r\n\r\n                case WHITESPACE:\r\n                case COMMENT:\r\n                    this.scanner.next();\r\n                    break;\r\n\r\n                case ATKEYWORD:\r\n                    children.push(this.parseWithFallback(this.Atrule, consumeRaw));\r\n                    break;\r\n\r\n                default:\r\n                    children.push(consumer.call(this));\r\n            }\r\n        }\r\n\r\n        if (!this.scanner.eof) {\r\n            this.eat(RIGHTCURLYBRACKET);\r\n        }\r\n\r\n        return {\r\n            type: 'Block',\r\n            loc: this.getLocation(start, this.scanner.tokenStart),\r\n            children: children\r\n        };\r\n    },\r\n    generate: function(node) {\r\n        this.chunk('{');\r\n        this.children(node, function(prev) {\r\n            if (prev.type === 'Declaration') {\r\n                this.chunk(';');\r\n            }\r\n        });\r\n        this.chunk('}');\r\n    },\r\n    walkContext: 'block'\r\n};\r\n","var TYPE = require('../../tokenizer').TYPE;\r\n\r\nvar LEFTSQUAREBRACKET = TYPE.LeftSquareBracket;\r\nvar RIGHTSQUAREBRACKET = TYPE.RightSquareBracket;\r\n\r\nmodule.exports = {\r\n    name: 'Brackets',\r\n    structure: {\r\n        children: [[]]\r\n    },\r\n    parse: function(readSequence, recognizer) {\r\n        var start = this.scanner.tokenStart;\r\n        var children = null;\r\n\r\n        this.eat(LEFTSQUAREBRACKET);\r\n\r\n        children = readSequence.call(this, recognizer);\r\n\r\n        if (!this.scanner.eof) {\r\n            this.eat(RIGHTSQUAREBRACKET);\r\n        }\r\n\r\n        return {\r\n            type: 'Brackets',\r\n            loc: this.getLocation(start, this.scanner.tokenStart),\r\n            children: children\r\n        };\r\n    },\r\n    generate: function(node) {\r\n        this.chunk('[');\r\n        this.children(node);\r\n        this.chunk(']');\r\n    }\r\n};\r\n","var CDC = require('../../tokenizer').TYPE.CDC;\r\n\r\nmodule.exports = {\r\n    name: 'CDC',\r\n    structure: [],\r\n    parse: function() {\r\n        var start = this.scanner.tokenStart;\r\n\r\n        this.eat(CDC); // -->\r\n\r\n        return {\r\n            type: 'CDC',\r\n            loc: this.getLocation(start, this.scanner.tokenStart)\r\n        };\r\n    },\r\n    generate: function() {\r\n        this.chunk('-->');\r\n    }\r\n};\r\n","var CDO = require('../../tokenizer').TYPE.CDO;\r\n\r\nmodule.exports = {\r\n    name: 'CDO',\r\n    structure: [],\r\n    parse: function() {\r\n        var start = this.scanner.tokenStart;\r\n\r\n        this.eat(CDO); // <!--\r\n\r\n        return {\r\n            type: 'CDO',\r\n            loc: this.getLocation(start, this.scanner.tokenStart)\r\n        };\r\n    },\r\n    generate: function() {\r\n        this.chunk('<!--');\r\n    }\r\n};\r\n","var TYPE = require('../../tokenizer').TYPE;\r\n\r\nvar IDENT = TYPE.Ident;\r\nvar FULLSTOP = 0x002E; // U+002E FULL STOP (.)\r\n\r\n// '.' ident\r\nmodule.exports = {\r\n    name: 'ClassSelector',\r\n    structure: {\r\n        name: String\r\n    },\r\n    parse: function() {\r\n        if (!this.scanner.isDelim(FULLSTOP)) {\r\n            this.error('Full stop is expected');\r\n        }\r\n\r\n        this.scanner.next();\r\n\r\n        return {\r\n            type: 'ClassSelector',\r\n            loc: this.getLocation(this.scanner.tokenStart - 1, this.scanner.tokenEnd),\r\n            name: this.consume(IDENT)\r\n        };\r\n    },\r\n    generate: function(node) {\r\n        this.chunk('.');\r\n        this.chunk(node.name);\r\n    }\r\n};\r\n","var TYPE = require('../../tokenizer').TYPE;\r\n\r\nvar IDENT = TYPE.Ident;\r\nvar PLUSSIGN = 0x002B;        // U+002B PLUS SIGN (+)\r\nvar SOLIDUS = 0x002F;         // U+002F SOLIDUS (/)\r\nvar GREATERTHANSIGN = 0x003E; // U+003E GREATER-THAN SIGN (>)\r\nvar TILDE = 0x007E;           // U+007E TILDE (~)\r\n\r\n// + | > | ~ | /deep/\r\nmodule.exports = {\r\n    name: 'Combinator',\r\n    structure: {\r\n        name: String\r\n    },\r\n    parse: function() {\r\n        var start = this.scanner.tokenStart;\r\n        var code = this.scanner.source.charCodeAt(this.scanner.tokenStart);\r\n\r\n        switch (code) {\r\n            case GREATERTHANSIGN:\r\n            case PLUSSIGN:\r\n            case TILDE:\r\n                this.scanner.next();\r\n                break;\r\n\r\n            case SOLIDUS:\r\n                this.scanner.next();\r\n\r\n                if (this.scanner.tokenType !== IDENT || this.scanner.lookupValue(0, 'deep') === false) {\r\n                    this.error('Identifier `deep` is expected');\r\n                }\r\n\r\n                this.scanner.next();\r\n\r\n                if (!this.scanner.isDelim(SOLIDUS)) {\r\n                    this.error('Solidus is expected');\r\n                }\r\n\r\n                this.scanner.next();\r\n                break;\r\n\r\n            default:\r\n                this.error('Combinator is expected');\r\n        }\r\n\r\n        return {\r\n            type: 'Combinator',\r\n            loc: this.getLocation(start, this.scanner.tokenStart),\r\n            name: this.scanner.substrToCursor(start)\r\n        };\r\n    },\r\n    generate: function(node) {\r\n        this.chunk(node.name);\r\n    }\r\n};\r\n","var TYPE = require('../../tokenizer').TYPE;\r\n\r\nvar COMMENT = TYPE.Comment;\r\nvar ASTERISK = 0x002A;        // U+002A ASTERISK (*)\r\nvar SOLIDUS = 0x002F;         // U+002F SOLIDUS (/)\r\n\r\n// '/*' .* '*/'\r\nmodule.exports = {\r\n    name: 'Comment',\r\n    structure: {\r\n        value: String\r\n    },\r\n    parse: function() {\r\n        var start = this.scanner.tokenStart;\r\n        var end = this.scanner.tokenEnd;\r\n\r\n        this.eat(COMMENT);\r\n\r\n        if ((end - start + 2) >= 2 &&\r\n            this.scanner.source.charCodeAt(end - 2) === ASTERISK &&\r\n            this.scanner.source.charCodeAt(end - 1) === SOLIDUS) {\r\n            end -= 2;\r\n        }\r\n\r\n        return {\r\n            type: 'Comment',\r\n            loc: this.getLocation(start, this.scanner.tokenStart),\r\n            value: this.scanner.source.substring(start + 2, end)\r\n        };\r\n    },\r\n    generate: function(node) {\r\n        this.chunk('/*');\r\n        this.chunk(node.value);\r\n        this.chunk('*/');\r\n    }\r\n};\r\n","var isCustomProperty = require('../../utils/names').isCustomProperty;\r\nvar TYPE = require('../../tokenizer').TYPE;\r\nvar rawMode = require('./Raw').mode;\r\n\r\nvar IDENT = TYPE.Ident;\r\nvar HASH = TYPE.Hash;\r\nvar COLON = TYPE.Colon;\r\nvar SEMICOLON = TYPE.Semicolon;\r\nvar DELIM = TYPE.Delim;\r\nvar EXCLAMATIONMARK = 0x0021; // U+0021 EXCLAMATION MARK (!)\r\nvar NUMBERSIGN = 0x0023;      // U+0023 NUMBER SIGN (#)\r\nvar DOLLARSIGN = 0x0024;      // U+0024 DOLLAR SIGN ($)\r\nvar AMPERSAND = 0x0026;       // U+0026 ANPERSAND (&)\r\nvar ASTERISK = 0x002A;        // U+002A ASTERISK (*)\r\nvar PLUSSIGN = 0x002B;        // U+002B PLUS SIGN (+)\r\nvar SOLIDUS = 0x002F;         // U+002F SOLIDUS (/)\r\n\r\nfunction consumeValueRaw(startToken) {\r\n    return this.Raw(startToken, rawMode.exclamationMarkOrSemicolon, true);\r\n}\r\n\r\nfunction consumeCustomPropertyRaw(startToken) {\r\n    return this.Raw(startToken, rawMode.exclamationMarkOrSemicolon, false);\r\n}\r\n\r\nfunction consumeValue() {\r\n    var startValueToken = this.scanner.tokenIndex;\r\n    var value = this.Value();\r\n\r\n    if (value.type !== 'Raw' &&\r\n        this.scanner.eof === false &&\r\n        this.scanner.tokenType !== SEMICOLON &&\r\n        this.scanner.isDelim(EXCLAMATIONMARK) === false &&\r\n        this.scanner.isBalanceEdge(startValueToken) === false) {\r\n        this.error();\r\n    }\r\n\r\n    return value;\r\n}\r\n\r\nmodule.exports = {\r\n    name: 'Declaration',\r\n    structure: {\r\n        important: [Boolean, String],\r\n        property: String,\r\n        value: ['Value', 'Raw']\r\n    },\r\n    parse: function() {\r\n        var start = this.scanner.tokenStart;\r\n        var startToken = this.scanner.tokenIndex;\r\n        var property = readProperty.call(this);\r\n        var customProperty = isCustomProperty(property);\r\n        var parseValue = customProperty ? this.parseCustomProperty : this.parseValue;\r\n        var consumeRaw = customProperty ? consumeCustomPropertyRaw : consumeValueRaw;\r\n        var important = false;\r\n        var value;\r\n\r\n        this.scanner.skipSC();\r\n        this.eat(COLON);\r\n\r\n        if (!customProperty) {\r\n            this.scanner.skipSC();\r\n        }\r\n\r\n        if (parseValue) {\r\n            value = this.parseWithFallback(consumeValue, consumeRaw);\r\n        } else {\r\n            value = consumeRaw.call(this, this.scanner.tokenIndex);\r\n        }\r\n\r\n        if (this.scanner.isDelim(EXCLAMATIONMARK)) {\r\n            important = getImportant.call(this);\r\n            this.scanner.skipSC();\r\n        }\r\n\r\n        // Do not include semicolon to range per spec\r\n        // https://drafts.csswg.org/css-syntax/#declaration-diagram\r\n\r\n        if (this.scanner.eof === false &&\r\n            this.scanner.tokenType !== SEMICOLON &&\r\n            this.scanner.isBalanceEdge(startToken) === false) {\r\n            this.error();\r\n        }\r\n\r\n        return {\r\n            type: 'Declaration',\r\n            loc: this.getLocation(start, this.scanner.tokenStart),\r\n            important: important,\r\n            property: property,\r\n            value: value\r\n        };\r\n    },\r\n    generate: function(node) {\r\n        this.chunk(node.property);\r\n        this.chunk(':');\r\n        this.node(node.value);\r\n\r\n        if (node.important) {\r\n            this.chunk(node.important === true ? '!important' : '!' + node.important);\r\n        }\r\n    },\r\n    walkContext: 'declaration'\r\n};\r\n\r\nfunction readProperty() {\r\n    var start = this.scanner.tokenStart;\r\n    var prefix = 0;\r\n\r\n    // hacks\r\n    if (this.scanner.tokenType === DELIM) {\r\n        switch (this.scanner.source.charCodeAt(this.scanner.tokenStart)) {\r\n            case ASTERISK:\r\n            case DOLLARSIGN:\r\n            case PLUSSIGN:\r\n            case NUMBERSIGN:\r\n            case AMPERSAND:\r\n                this.scanner.next();\r\n                break;\r\n\r\n            // TODO: not sure we should support this hack\r\n            case SOLIDUS:\r\n                this.scanner.next();\r\n                if (this.scanner.isDelim(SOLIDUS)) {\r\n                    this.scanner.next();\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    if (prefix) {\r\n        this.scanner.skip(prefix);\r\n    }\r\n\r\n    if (this.scanner.tokenType === HASH) {\r\n        this.eat(HASH);\r\n    } else {\r\n        this.eat(IDENT);\r\n    }\r\n\r\n    return this.scanner.substrToCursor(start);\r\n}\r\n\r\n// ! ws* important\r\nfunction getImportant() {\r\n    this.eat(DELIM);\r\n    this.scanner.skipSC();\r\n\r\n    var important = this.consume(IDENT);\r\n\r\n    // store original value in case it differ from `important`\r\n    // for better original source restoring and hacks like `!ie` support\r\n    return important === 'important' ? true : important;\r\n}\r\n","var TYPE = require('../../tokenizer').TYPE;\r\nvar rawMode = require('./Raw').mode;\r\n\r\nvar WHITESPACE = TYPE.WhiteSpace;\r\nvar COMMENT = TYPE.Comment;\r\nvar SEMICOLON = TYPE.Semicolon;\r\n\r\nfunction consumeRaw(startToken) {\r\n    return this.Raw(startToken, rawMode.semicolonIncluded, true);\r\n}\r\n\r\nmodule.exports = {\r\n    name: 'DeclarationList',\r\n    structure: {\r\n        children: [[\r\n            'Declaration'\r\n        ]]\r\n    },\r\n    parse: function() {\r\n        var children = this.createList();\r\n\r\n        scan:\r\n        while (!this.scanner.eof) {\r\n            switch (this.scanner.tokenType) {\r\n                case WHITESPACE:\r\n                case COMMENT:\r\n                case SEMICOLON:\r\n                    this.scanner.next();\r\n                    break;\r\n\r\n                default:\r\n                    children.push(this.parseWithFallback(this.Declaration, consumeRaw));\r\n            }\r\n        }\r\n\r\n        return {\r\n            type: 'DeclarationList',\r\n            loc: this.getLocationFromList(children),\r\n            children: children\r\n        };\r\n    },\r\n    generate: function(node) {\r\n        this.children(node, function(prev) {\r\n            if (prev.type === 'Declaration') {\r\n                this.chunk(';');\r\n            }\r\n        });\r\n    }\r\n};\r\n","var consumeNumber = require('../../tokenizer/utils').consumeNumber;\r\nvar TYPE = require('../../tokenizer').TYPE;\r\n\r\nvar DIMENSION = TYPE.Dimension;\r\n\r\nmodule.exports = {\r\n    name: 'Dimension',\r\n    structure: {\r\n        value: String,\r\n        unit: String\r\n    },\r\n    parse: function() {\r\n        var start = this.scanner.tokenStart;\r\n        var numberEnd = consumeNumber(this.scanner.source, start);\r\n\r\n        this.eat(DIMENSION);\r\n\r\n        return {\r\n            type: 'Dimension',\r\n            loc: this.getLocation(start, this.scanner.tokenStart),\r\n            value: this.scanner.source.substring(start, numberEnd),\r\n            unit: this.scanner.source.substring(numberEnd, this.scanner.tokenStart)\r\n        };\r\n    },\r\n    generate: function(node) {\r\n        this.chunk(node.value);\r\n        this.chunk(node.unit);\r\n    }\r\n};\r\n","var TYPE = require('../../tokenizer').TYPE;\r\n\r\nvar RIGHTPARENTHESIS = TYPE.RightParenthesis;\r\n\r\n// <function-token> <sequence> )\r\nmodule.exports = {\r\n    name: 'Function',\r\n    structure: {\r\n        name: String,\r\n        children: [[]]\r\n    },\r\n    parse: function(readSequence, recognizer) {\r\n        var start = this.scanner.tokenStart;\r\n        var name = this.consumeFunctionName();\r\n        var nameLowerCase = name.toLowerCase();\r\n        var children;\r\n\r\n        children = recognizer.hasOwnProperty(nameLowerCase)\r\n            ? recognizer[nameLowerCase].call(this, recognizer)\r\n            : readSequence.call(this, recognizer);\r\n\r\n        if (!this.scanner.eof) {\r\n            this.eat(RIGHTPARENTHESIS);\r\n        }\r\n\r\n        return {\r\n            type: 'Function',\r\n            loc: this.getLocation(start, this.scanner.tokenStart),\r\n            name: name,\r\n            children: children\r\n        };\r\n    },\r\n    generate: function(node) {\r\n        this.chunk(node.name);\r\n        this.chunk('(');\r\n        this.children(node);\r\n        this.chunk(')');\r\n    },\r\n    walkContext: 'function'\r\n};\r\n","var TYPE = require('../../tokenizer').TYPE;\r\n\r\nvar HASH = TYPE.Hash;\r\n\r\n// '#' ident\r\nmodule.exports = {\r\n    name: 'HexColor',\r\n    structure: {\r\n        value: String\r\n    },\r\n    parse: function() {\r\n        var start = this.scanner.tokenStart;\r\n\r\n        this.eat(HASH);\r\n\r\n        return {\r\n            type: 'HexColor',\r\n            loc: this.getLocation(start, this.scanner.tokenStart),\r\n            value: this.scanner.substrToCursor(start + 1)\r\n        };\r\n    },\r\n    generate: function(node) {\r\n        this.chunk('#');\r\n        this.chunk(node.value);\r\n    }\r\n};\r\n","var TYPE = require('../../tokenizer').TYPE;\r\n\r\nvar IDENT = TYPE.Ident;\r\n\r\nmodule.exports = {\r\n    name: 'Identifier',\r\n    structure: {\r\n        name: String\r\n    },\r\n    parse: function() {\r\n        return {\r\n            type: 'Identifier',\r\n            loc: this.getLocation(this.scanner.tokenStart, this.scanner.tokenEnd),\r\n            name: this.consume(IDENT)\r\n        };\r\n    },\r\n    generate: function(node) {\r\n        this.chunk(node.name);\r\n    }\r\n};\r\n","var TYPE = require('../../tokenizer').TYPE;\r\n\r\nvar HASH = TYPE.Hash;\r\n\r\n// <hash-token>\r\nmodule.exports = {\r\n    name: 'IdSelector',\r\n    structure: {\r\n        name: String\r\n    },\r\n    parse: function() {\r\n        var start = this.scanner.tokenStart;\r\n\r\n        // TODO: check value is an ident\r\n        this.eat(HASH);\r\n\r\n        return {\r\n            type: 'IdSelector',\r\n            loc: this.getLocation(start, this.scanner.tokenStart),\r\n            name: this.scanner.substrToCursor(start + 1)\r\n        };\r\n    },\r\n    generate: function(node) {\r\n        this.chunk('#');\r\n        this.chunk(node.name);\r\n    }\r\n};\r\n","var TYPE = require('../../tokenizer').TYPE;\r\n\r\nvar IDENT = TYPE.Ident;\r\nvar NUMBER = TYPE.Number;\r\nvar DIMENSION = TYPE.Dimension;\r\nvar LEFTPARENTHESIS = TYPE.LeftParenthesis;\r\nvar RIGHTPARENTHESIS = TYPE.RightParenthesis;\r\nvar COLON = TYPE.Colon;\r\nvar DELIM = TYPE.Delim;\r\n\r\nmodule.exports = {\r\n    name: 'MediaFeature',\r\n    structure: {\r\n        name: String,\r\n        value: ['Identifier', 'Number', 'Dimension', 'Ratio', null]\r\n    },\r\n    parse: function() {\r\n        var start = this.scanner.tokenStart;\r\n        var name;\r\n        var value = null;\r\n\r\n        this.eat(LEFTPARENTHESIS);\r\n        this.scanner.skipSC();\r\n\r\n        name = this.consume(IDENT);\r\n        this.scanner.skipSC();\r\n\r\n        if (this.scanner.tokenType !== RIGHTPARENTHESIS) {\r\n            this.eat(COLON);\r\n            this.scanner.skipSC();\r\n\r\n            switch (this.scanner.tokenType) {\r\n                case NUMBER:\r\n                    if (this.lookupNonWSType(1) === DELIM) {\r\n                        value = this.Ratio();\r\n                    } else {\r\n                        value = this.Number();\r\n                    }\r\n\r\n                    break;\r\n\r\n                case DIMENSION:\r\n                    value = this.Dimension();\r\n                    break;\r\n\r\n                case IDENT:\r\n                    value = this.Identifier();\r\n\r\n                    break;\r\n\r\n                default:\r\n                    this.error('Number, dimension, ratio or identifier is expected');\r\n            }\r\n\r\n            this.scanner.skipSC();\r\n        }\r\n\r\n        this.eat(RIGHTPARENTHESIS);\r\n\r\n        return {\r\n            type: 'MediaFeature',\r\n            loc: this.getLocation(start, this.scanner.tokenStart),\r\n            name: name,\r\n            value: value\r\n        };\r\n    },\r\n    generate: function(node) {\r\n        this.chunk('(');\r\n        this.chunk(node.name);\r\n        if (node.value !== null) {\r\n            this.chunk(':');\r\n            this.node(node.value);\r\n        }\r\n        this.chunk(')');\r\n    }\r\n};\r\n","var TYPE = require('../../tokenizer').TYPE;\r\n\r\nvar WHITESPACE = TYPE.WhiteSpace;\r\nvar COMMENT = TYPE.Comment;\r\nvar IDENT = TYPE.Ident;\r\nvar LEFTPARENTHESIS = TYPE.LeftParenthesis;\r\n\r\nmodule.exports = {\r\n    name: 'MediaQuery',\r\n    structure: {\r\n        children: [[\r\n            'Identifier',\r\n            'MediaFeature',\r\n            'WhiteSpace'\r\n        ]]\r\n    },\r\n    parse: function() {\r\n        this.scanner.skipSC();\r\n\r\n        var children = this.createList();\r\n        var child = null;\r\n        var space = null;\r\n\r\n        scan:\r\n        while (!this.scanner.eof) {\r\n            switch (this.scanner.tokenType) {\r\n                case COMMENT:\r\n                    this.scanner.next();\r\n                    continue;\r\n\r\n                case WHITESPACE:\r\n                    space = this.WhiteSpace();\r\n                    continue;\r\n\r\n                case IDENT:\r\n                    child = this.Identifier();\r\n                    break;\r\n\r\n                case LEFTPARENTHESIS:\r\n                    child = this.MediaFeature();\r\n                    break;\r\n\r\n                default:\r\n                    break scan;\r\n            }\r\n\r\n            if (space !== null) {\r\n                children.push(space);\r\n                space = null;\r\n            }\r\n\r\n            children.push(child);\r\n        }\r\n\r\n        if (child === null) {\r\n            this.error('Identifier or parenthesis is expected');\r\n        }\r\n\r\n        return {\r\n            type: 'MediaQuery',\r\n            loc: this.getLocationFromList(children),\r\n            children: children\r\n        };\r\n    },\r\n    generate: function(node) {\r\n        this.children(node);\r\n    }\r\n};\r\n","var COMMA = require('../../tokenizer').TYPE.Comma;\r\n\r\nmodule.exports = {\r\n    name: 'MediaQueryList',\r\n    structure: {\r\n        children: [[\r\n            'MediaQuery'\r\n        ]]\r\n    },\r\n    parse: function(relative) {\r\n        var children = this.createList();\r\n\r\n        this.scanner.skipSC();\r\n\r\n        while (!this.scanner.eof) {\r\n            children.push(this.MediaQuery(relative));\r\n\r\n            if (this.scanner.tokenType !== COMMA) {\r\n                break;\r\n            }\r\n\r\n            this.scanner.next();\r\n        }\r\n\r\n        return {\r\n            type: 'MediaQueryList',\r\n            loc: this.getLocationFromList(children),\r\n            children: children\r\n        };\r\n    },\r\n    generate: function(node) {\r\n        this.children(node, function() {\r\n            this.chunk(',');\r\n        });\r\n    }\r\n};\r\n","var NUMBER = require('../../tokenizer').TYPE.Number;\r\n\r\nmodule.exports = {\r\n    name: 'Number',\r\n    structure: {\r\n        value: String\r\n    },\r\n    parse: function() {\r\n        return {\r\n            type: 'Number',\r\n            loc: this.getLocation(this.scanner.tokenStart, this.scanner.tokenEnd),\r\n            value: this.consume(NUMBER)\r\n        };\r\n    },\r\n    generate: function(node) {\r\n        this.chunk(node.value);\r\n    }\r\n};\r\n","// '/' | '*' | ',' | ':' | '+' | '-'\r\nmodule.exports = {\r\n    name: 'Operator',\r\n    structure: {\r\n        value: String\r\n    },\r\n    parse: function() {\r\n        var start = this.scanner.tokenStart;\r\n\r\n        this.scanner.next();\r\n\r\n        return {\r\n            type: 'Operator',\r\n            loc: this.getLocation(start, this.scanner.tokenStart),\r\n            value: this.scanner.substrToCursor(start)\r\n        };\r\n    },\r\n    generate: function(node) {\r\n        this.chunk(node.value);\r\n    }\r\n};\r\n","var TYPE = require('../../tokenizer').TYPE;\r\n\r\nvar LEFTPARENTHESIS = TYPE.LeftParenthesis;\r\nvar RIGHTPARENTHESIS = TYPE.RightParenthesis;\r\n\r\nmodule.exports = {\r\n    name: 'Parentheses',\r\n    structure: {\r\n        children: [[]]\r\n    },\r\n    parse: function(readSequence, recognizer) {\r\n        var start = this.scanner.tokenStart;\r\n        var children = null;\r\n\r\n        this.eat(LEFTPARENTHESIS);\r\n\r\n        children = readSequence.call(this, recognizer);\r\n\r\n        if (!this.scanner.eof) {\r\n            this.eat(RIGHTPARENTHESIS);\r\n        }\r\n\r\n        return {\r\n            type: 'Parentheses',\r\n            loc: this.getLocation(start, this.scanner.tokenStart),\r\n            children: children\r\n        };\r\n    },\r\n    generate: function(node) {\r\n        this.chunk('(');\r\n        this.children(node);\r\n        this.chunk(')');\r\n    }\r\n};\r\n","var consumeNumber = require('../../tokenizer/utils').consumeNumber;\r\nvar TYPE = require('../../tokenizer').TYPE;\r\n\r\nvar PERCENTAGE = TYPE.Percentage;\r\n\r\nmodule.exports = {\r\n    name: 'Percentage',\r\n    structure: {\r\n        value: String\r\n    },\r\n    parse: function() {\r\n        var start = this.scanner.tokenStart;\r\n        var numberEnd = consumeNumber(this.scanner.source, start);\r\n\r\n        this.eat(PERCENTAGE);\r\n\r\n        return {\r\n            type: 'Percentage',\r\n            loc: this.getLocation(start, this.scanner.tokenStart),\r\n            value: this.scanner.source.substring(start, numberEnd)\r\n        };\r\n    },\r\n    generate: function(node) {\r\n        this.chunk(node.value);\r\n        this.chunk('%');\r\n    }\r\n};\r\n","var TYPE = require('../../tokenizer').TYPE;\r\n\r\nvar IDENT = TYPE.Ident;\r\nvar FUNCTION = TYPE.Function;\r\nvar COLON = TYPE.Colon;\r\nvar RIGHTPARENTHESIS = TYPE.RightParenthesis;\r\n\r\n// : [ <ident> | <function-token> <any-value>? ) ]\r\nmodule.exports = {\r\n    name: 'PseudoClassSelector',\r\n    structure: {\r\n        name: String,\r\n        children: [['Raw'], null]\r\n    },\r\n    parse: function() {\r\n        var start = this.scanner.tokenStart;\r\n        var children = null;\r\n        var name;\r\n        var nameLowerCase;\r\n\r\n        this.eat(COLON);\r\n\r\n        if (this.scanner.tokenType === FUNCTION) {\r\n            name = this.consumeFunctionName();\r\n            nameLowerCase = name.toLowerCase();\r\n\r\n            if (this.pseudo.hasOwnProperty(nameLowerCase)) {\r\n                this.scanner.skipSC();\r\n                children = this.pseudo[nameLowerCase].call(this);\r\n                this.scanner.skipSC();\r\n            } else {\r\n                children = this.createList();\r\n                children.push(\r\n                    this.Raw(this.scanner.tokenIndex, null, false)\r\n                );\r\n            }\r\n\r\n            this.eat(RIGHTPARENTHESIS);\r\n        } else {\r\n            name = this.consume(IDENT);\r\n        }\r\n\r\n        return {\r\n            type: 'PseudoClassSelector',\r\n            loc: this.getLocation(start, this.scanner.tokenStart),\r\n            name: name,\r\n            children: children\r\n        };\r\n    },\r\n    generate: function(node) {\r\n        this.chunk(':');\r\n        this.chunk(node.name);\r\n\r\n        if (node.children !== null) {\r\n            this.chunk('(');\r\n            this.children(node);\r\n            this.chunk(')');\r\n        }\r\n    },\r\n    walkContext: 'function'\r\n};\r\n","var TYPE = require('../../tokenizer').TYPE;\r\n\r\nvar IDENT = TYPE.Ident;\r\nvar FUNCTION = TYPE.Function;\r\nvar COLON = TYPE.Colon;\r\nvar RIGHTPARENTHESIS = TYPE.RightParenthesis;\r\n\r\n// :: [ <ident> | <function-token> <any-value>? ) ]\r\nmodule.exports = {\r\n    name: 'PseudoElementSelector',\r\n    structure: {\r\n        name: String,\r\n        children: [['Raw'], null]\r\n    },\r\n    parse: function() {\r\n        var start = this.scanner.tokenStart;\r\n        var children = null;\r\n        var name;\r\n        var nameLowerCase;\r\n\r\n        this.eat(COLON);\r\n        this.eat(COLON);\r\n\r\n        if (this.scanner.tokenType === FUNCTION) {\r\n            name = this.consumeFunctionName();\r\n            nameLowerCase = name.toLowerCase();\r\n\r\n            if (this.pseudo.hasOwnProperty(nameLowerCase)) {\r\n                this.scanner.skipSC();\r\n                children = this.pseudo[nameLowerCase].call(this);\r\n                this.scanner.skipSC();\r\n            } else {\r\n                children = this.createList();\r\n                children.push(\r\n                    this.Raw(this.scanner.tokenIndex, null, false)\r\n                );\r\n            }\r\n\r\n            this.eat(RIGHTPARENTHESIS);\r\n        } else {\r\n            name = this.consume(IDENT);\r\n        }\r\n\r\n        return {\r\n            type: 'PseudoElementSelector',\r\n            loc: this.getLocation(start, this.scanner.tokenStart),\r\n            name: name,\r\n            children: children\r\n        };\r\n    },\r\n    generate: function(node) {\r\n        this.chunk('::');\r\n        this.chunk(node.name);\r\n\r\n        if (node.children !== null) {\r\n            this.chunk('(');\r\n            this.children(node);\r\n            this.chunk(')');\r\n        }\r\n    },\r\n    walkContext: 'function'\r\n};\r\n","var isDigit = require('../../tokenizer').isDigit;\r\nvar TYPE = require('../../tokenizer').TYPE;\r\n\r\nvar NUMBER = TYPE.Number;\r\nvar DELIM = TYPE.Delim;\r\nvar SOLIDUS = 0x002F;  // U+002F SOLIDUS (/)\r\nvar FULLSTOP = 0x002E; // U+002E FULL STOP (.)\r\n\r\n// Terms of <ratio> should be a positive numbers (not zero or negative)\r\n// (see https://drafts.csswg.org/mediaqueries-3/#values)\r\n// However, -o-min-device-pixel-ratio takes fractional values as a ratio's term\r\n// and this is using by various sites. Therefore we relax checking on parse\r\n// to test a term is unsigned number without an exponent part.\r\n// Additional checking may be applied on lexer validation.\r\nfunction consumeNumber() {\r\n    this.scanner.skipWS();\r\n\r\n    var value = this.consume(NUMBER);\r\n\r\n    for (var i = 0; i < value.length; i++) {\r\n        var code = value.charCodeAt(i);\r\n        if (!isDigit(code) && code !== FULLSTOP) {\r\n            this.error('Unsigned number is expected', this.scanner.tokenStart - value.length + i);\r\n        }\r\n    }\r\n\r\n    if (Number(value) === 0) {\r\n        this.error('Zero number is not allowed', this.scanner.tokenStart - value.length);\r\n    }\r\n\r\n    return value;\r\n}\r\n\r\n// <positive-integer> S* '/' S* <positive-integer>\r\nmodule.exports = {\r\n    name: 'Ratio',\r\n    structure: {\r\n        left: String,\r\n        right: String\r\n    },\r\n    parse: function() {\r\n        var start = this.scanner.tokenStart;\r\n        var left = consumeNumber.call(this);\r\n        var right;\r\n\r\n        this.scanner.skipWS();\r\n\r\n        if (!this.scanner.isDelim(SOLIDUS)) {\r\n            this.error('Solidus is expected');\r\n        }\r\n        this.eat(DELIM);\r\n        right = consumeNumber.call(this);\r\n\r\n        return {\r\n            type: 'Ratio',\r\n            loc: this.getLocation(start, this.scanner.tokenStart),\r\n            left: left,\r\n            right: right\r\n        };\r\n    },\r\n    generate: function(node) {\r\n        this.chunk(node.left);\r\n        this.chunk('/');\r\n        this.chunk(node.right);\r\n    }\r\n};\r\n","var TYPE = require('../../tokenizer').TYPE;\r\nvar rawMode = require('./Raw').mode;\r\n\r\nvar LEFTCURLYBRACKET = TYPE.LeftCurlyBracket;\r\n\r\nfunction consumeRaw(startToken) {\r\n    return this.Raw(startToken, rawMode.leftCurlyBracket, true);\r\n}\r\n\r\nfunction consumePrelude() {\r\n    var prelude = this.SelectorList();\r\n\r\n    if (prelude.type !== 'Raw' &&\r\n        this.scanner.eof === false &&\r\n        this.scanner.tokenType !== LEFTCURLYBRACKET) {\r\n        this.error();\r\n    }\r\n\r\n    return prelude;\r\n}\r\n\r\nmodule.exports = {\r\n    name: 'Rule',\r\n    structure: {\r\n        prelude: ['SelectorList', 'Raw'],\r\n        block: ['Block']\r\n    },\r\n    parse: function() {\r\n        var startToken = this.scanner.tokenIndex;\r\n        var startOffset = this.scanner.tokenStart;\r\n        var prelude;\r\n        var block;\r\n\r\n        if (this.parseRulePrelude) {\r\n            prelude = this.parseWithFallback(consumePrelude, consumeRaw);\r\n        } else {\r\n            prelude = consumeRaw.call(this, startToken);\r\n        }\r\n\r\n        block = this.Block(true);\r\n\r\n        return {\r\n            type: 'Rule',\r\n            loc: this.getLocation(startOffset, this.scanner.tokenStart),\r\n            prelude: prelude,\r\n            block: block\r\n        };\r\n    },\r\n    generate: function(node) {\r\n        this.node(node.prelude);\r\n        this.node(node.block);\r\n    },\r\n    walkContext: 'rule'\r\n};\r\n","var TYPE = require('../../tokenizer').TYPE;\r\n\r\nvar COMMA = TYPE.Comma;\r\n\r\nmodule.exports = {\r\n    name: 'SelectorList',\r\n    structure: {\r\n        children: [[\r\n            'Selector',\r\n            'Raw'\r\n        ]]\r\n    },\r\n    parse: function() {\r\n        var children = this.createList();\r\n\r\n        while (!this.scanner.eof) {\r\n            children.push(this.Selector());\r\n\r\n            if (this.scanner.tokenType === COMMA) {\r\n                this.scanner.next();\r\n                continue;\r\n            }\r\n\r\n            break;\r\n        }\r\n\r\n        return {\r\n            type: 'SelectorList',\r\n            loc: this.getLocationFromList(children),\r\n            children: children\r\n        };\r\n    },\r\n    generate: function(node) {\r\n        this.children(node, function() {\r\n            this.chunk(',');\r\n        });\r\n    },\r\n    walkContext: 'selector'\r\n};\r\n","var STRING = require('../../tokenizer').TYPE.String;\r\n\r\nmodule.exports = {\r\n    name: 'String',\r\n    structure: {\r\n        value: String\r\n    },\r\n    parse: function() {\r\n        return {\r\n            type: 'String',\r\n            loc: this.getLocation(this.scanner.tokenStart, this.scanner.tokenEnd),\r\n            value: this.consume(STRING)\r\n        };\r\n    },\r\n    generate: function(node) {\r\n        this.chunk(node.value);\r\n    }\r\n};\r\n","var TYPE = require('../../tokenizer').TYPE;\r\n\r\nvar WHITESPACE = TYPE.WhiteSpace;\r\nvar COMMENT = TYPE.Comment;\r\nvar ATKEYWORD = TYPE.AtKeyword;\r\nvar CDO = TYPE.CDO;\r\nvar CDC = TYPE.CDC;\r\nvar EXCLAMATIONMARK = 0x0021; // U+0021 EXCLAMATION MARK (!)\r\n\r\nfunction consumeRaw(startToken) {\r\n    return this.Raw(startToken, null, false);\r\n}\r\n\r\nmodule.exports = {\r\n    name: 'StyleSheet',\r\n    structure: {\r\n        children: [[\r\n            'Comment',\r\n            'CDO',\r\n            'CDC',\r\n            'Atrule',\r\n            'Rule',\r\n            'Raw'\r\n        ]]\r\n    },\r\n    parse: function() {\r\n        var start = this.scanner.tokenStart;\r\n        var children = this.createList();\r\n        var child;\r\n\r\n        scan:\r\n        while (!this.scanner.eof) {\r\n            switch (this.scanner.tokenType) {\r\n                case WHITESPACE:\r\n                    this.scanner.next();\r\n                    continue;\r\n\r\n                case COMMENT:\r\n                    // ignore comments except exclamation comments (i.e. /*! .. */) on top level\r\n                    if (this.scanner.source.charCodeAt(this.scanner.tokenStart + 2) !== EXCLAMATIONMARK) {\r\n                        this.scanner.next();\r\n                        continue;\r\n                    }\r\n\r\n                    child = this.Comment();\r\n                    break;\r\n\r\n                case CDO: // <!--\r\n                    child = this.CDO();\r\n                    break;\r\n\r\n                case CDC: // -->\r\n                    child = this.CDC();\r\n                    break;\r\n\r\n                // CSS Syntax Module Level 3\r\n                // §2.2 Error handling\r\n                // At the \"top level\" of a stylesheet, an <at-keyword-token> starts an at-rule.\r\n                case ATKEYWORD:\r\n                    child = this.parseWithFallback(this.Atrule, consumeRaw);\r\n                    break;\r\n\r\n                // Anything else starts a qualified rule ...\r\n                default:\r\n                    child = this.parseWithFallback(this.Rule, consumeRaw);\r\n            }\r\n\r\n            children.push(child);\r\n        }\r\n\r\n        return {\r\n            type: 'StyleSheet',\r\n            loc: this.getLocation(start, this.scanner.tokenStart),\r\n            children: children\r\n        };\r\n    },\r\n    generate: function(node) {\r\n        this.children(node);\r\n    },\r\n    walkContext: 'stylesheet'\r\n};\r\n","var TYPE = require('../../tokenizer').TYPE;\r\n\r\nvar IDENT = TYPE.Ident;\r\nvar ASTERISK = 0x002A;     // U+002A ASTERISK (*)\r\nvar VERTICALLINE = 0x007C; // U+007C VERTICAL LINE (|)\r\n\r\nfunction eatIdentifierOrAsterisk() {\r\n    if (this.scanner.tokenType !== IDENT &&\r\n        this.scanner.isDelim(ASTERISK) === false) {\r\n        this.error('Identifier or asterisk is expected');\r\n    }\r\n\r\n    this.scanner.next();\r\n}\r\n\r\n// ident\r\n// ident|ident\r\n// ident|*\r\n// *\r\n// *|ident\r\n// *|*\r\n// |ident\r\n// |*\r\nmodule.exports = {\r\n    name: 'TypeSelector',\r\n    structure: {\r\n        name: String\r\n    },\r\n    parse: function() {\r\n        var start = this.scanner.tokenStart;\r\n\r\n        if (this.scanner.isDelim(VERTICALLINE)) {\r\n            this.scanner.next();\r\n            eatIdentifierOrAsterisk.call(this);\r\n        } else {\r\n            eatIdentifierOrAsterisk.call(this);\r\n\r\n            if (this.scanner.isDelim(VERTICALLINE)) {\r\n                this.scanner.next();\r\n                eatIdentifierOrAsterisk.call(this);\r\n            }\r\n        }\r\n\r\n        return {\r\n            type: 'TypeSelector',\r\n            loc: this.getLocation(start, this.scanner.tokenStart),\r\n            name: this.scanner.substrToCursor(start)\r\n        };\r\n    },\r\n    generate: function(node) {\r\n        this.chunk(node.name);\r\n    }\r\n};\r\n","var isHexDigit = require('../../tokenizer').isHexDigit;\r\nvar cmpChar = require('../../tokenizer').cmpChar;\r\nvar TYPE = require('../../tokenizer').TYPE;\r\nvar NAME = require('../../tokenizer').NAME;\r\n\r\nvar IDENT = TYPE.Ident;\r\nvar NUMBER = TYPE.Number;\r\nvar DIMENSION = TYPE.Dimension;\r\nvar PLUSSIGN = 0x002B;     // U+002B PLUS SIGN (+)\r\nvar HYPHENMINUS = 0x002D;  // U+002D HYPHEN-MINUS (-)\r\nvar QUESTIONMARK = 0x003F; // U+003F QUESTION MARK (?)\r\nvar U = 0x0075;            // U+0075 LATIN SMALL LETTER U (u)\r\n\r\nfunction eatHexSequence(offset, allowDash) {\r\n    for (var pos = this.scanner.tokenStart + offset, len = 0; pos < this.scanner.tokenEnd; pos++) {\r\n        var code = this.scanner.source.charCodeAt(pos);\r\n\r\n        if (code === HYPHENMINUS && allowDash && len !== 0) {\r\n            if (eatHexSequence.call(this, offset + len + 1, false) === 0) {\r\n                this.error();\r\n            }\r\n\r\n            return -1;\r\n        }\r\n\r\n        if (!isHexDigit(code)) {\r\n            this.error(\r\n                allowDash && len !== 0\r\n                    ? 'HyphenMinus' + (len < 6 ? ' or hex digit' : '') + ' is expected'\r\n                    : (len < 6 ? 'Hex digit is expected' : 'Unexpected input'),\r\n                pos\r\n            );\r\n        }\r\n\r\n        if (++len > 6) {\r\n            this.error('Too many hex digits', pos);\r\n        };\r\n    }\r\n\r\n    this.scanner.next();\r\n    return len;\r\n}\r\n\r\nfunction eatQuestionMarkSequence(max) {\r\n    var count = 0;\r\n\r\n    while (this.scanner.isDelim(QUESTIONMARK)) {\r\n        if (++count > max) {\r\n            this.error('Too many question marks');\r\n        }\r\n\r\n        this.scanner.next();\r\n    }\r\n}\r\n\r\nfunction startsWith(code) {\r\n    if (this.scanner.source.charCodeAt(this.scanner.tokenStart) !== code) {\r\n        this.error(NAME[code] + ' is expected');\r\n    }\r\n}\r\n\r\n// https://drafts.csswg.org/css-syntax/#urange\r\n// Informally, the <urange> production has three forms:\r\n// U+0001\r\n//      Defines a range consisting of a single code point, in this case the code point \"1\".\r\n// U+0001-00ff\r\n//      Defines a range of codepoints between the first and the second value, in this case\r\n//      the range between \"1\" and \"ff\" (255 in decimal) inclusive.\r\n// U+00??\r\n//      Defines a range of codepoints where the \"?\" characters range over all hex digits,\r\n//      in this case defining the same as the value U+0000-00ff.\r\n// In each form, a maximum of 6 digits is allowed for each hexadecimal number (if you treat \"?\" as a hexadecimal digit).\r\n//\r\n// <urange> =\r\n//   u '+' <ident-token> '?'* |\r\n//   u <dimension-token> '?'* |\r\n//   u <number-token> '?'* |\r\n//   u <number-token> <dimension-token> |\r\n//   u <number-token> <number-token> |\r\n//   u '+' '?'+\r\nfunction scanUnicodeRange() {\r\n    var hexLength = 0;\r\n\r\n    // u '+' <ident-token> '?'*\r\n    // u '+' '?'+\r\n    if (this.scanner.isDelim(PLUSSIGN)) {\r\n        this.scanner.next();\r\n\r\n        if (this.scanner.tokenType === IDENT) {\r\n            hexLength = eatHexSequence.call(this, 0, true);\r\n            if (hexLength > 0) {\r\n                eatQuestionMarkSequence.call(this, 6 - hexLength);\r\n            }\r\n            return;\r\n        }\r\n\r\n        if (this.scanner.isDelim(QUESTIONMARK)) {\r\n            this.scanner.next();\r\n            eatQuestionMarkSequence.call(this, 5);\r\n            return;\r\n        }\r\n\r\n        this.error('Hex digit or question mark is expected');\r\n        return;\r\n    }\r\n\r\n    // u <number-token> '?'*\r\n    // u <number-token> <dimension-token>\r\n    // u <number-token> <number-token>\r\n    if (this.scanner.tokenType === NUMBER) {\r\n        startsWith.call(this, PLUSSIGN);\r\n        hexLength = eatHexSequence.call(this, 1, true);\r\n\r\n        if (this.scanner.isDelim(QUESTIONMARK)) {\r\n            eatQuestionMarkSequence.call(this, 6 - hexLength);\r\n            return;\r\n        }\r\n\r\n        if (this.scanner.tokenType === DIMENSION ||\r\n            this.scanner.tokenType === NUMBER) {\r\n            startsWith.call(this, HYPHENMINUS);\r\n            eatHexSequence.call(this, 1, false);\r\n            return;\r\n        }\r\n\r\n        return;\r\n    }\r\n\r\n    // u <dimension-token> '?'*\r\n    if (this.scanner.tokenType === DIMENSION) {\r\n        startsWith.call(this, PLUSSIGN);\r\n        hexLength = eatHexSequence.call(this, 1, true);\r\n\r\n        if (hexLength > 0) {\r\n            eatQuestionMarkSequence.call(this, 6 - hexLength);\r\n        }\r\n\r\n        return;\r\n    }\r\n\r\n    this.error();\r\n}\r\n\r\nmodule.exports = {\r\n    name: 'UnicodeRange',\r\n    structure: {\r\n        value: String\r\n    },\r\n    parse: function() {\r\n        var start = this.scanner.tokenStart;\r\n\r\n        // U or u\r\n        if (!cmpChar(this.scanner.source, start, U)) {\r\n            this.error('U is expected');\r\n        }\r\n\r\n        if (!cmpChar(this.scanner.source, start + 1, PLUSSIGN)) {\r\n            this.error('Plus sign is expected');\r\n        }\r\n\r\n        this.scanner.next();\r\n        scanUnicodeRange.call(this);\r\n\r\n        return {\r\n            type: 'UnicodeRange',\r\n            loc: this.getLocation(start, this.scanner.tokenStart),\r\n            value: this.scanner.substrToCursor(start)\r\n        };\r\n    },\r\n    generate: function(node) {\r\n        this.chunk(node.value);\r\n    }\r\n};\r\n","var isWhiteSpace = require('../../tokenizer').isWhiteSpace;\r\nvar cmpStr = require('../../tokenizer').cmpStr;\r\nvar TYPE = require('../../tokenizer').TYPE;\r\n\r\nvar FUNCTION = TYPE.Function;\r\nvar URL = TYPE.Url;\r\nvar RIGHTPARENTHESIS = TYPE.RightParenthesis;\r\n\r\n// <url-token> | <function-token> <string> )\r\nmodule.exports = {\r\n    name: 'Url',\r\n    structure: {\r\n        value: ['String', 'Raw']\r\n    },\r\n    parse: function() {\r\n        var start = this.scanner.tokenStart;\r\n        var value;\r\n\r\n        switch (this.scanner.tokenType) {\r\n            case URL:\r\n                var rawStart = start + 4;\r\n                var rawEnd = this.scanner.tokenEnd - 1;\r\n\r\n                while (rawStart < rawEnd && isWhiteSpace(this.scanner.source.charCodeAt(rawStart))) {\r\n                    rawStart++;\r\n                }\r\n\r\n                while (rawStart < rawEnd && isWhiteSpace(this.scanner.source.charCodeAt(rawEnd - 1))) {\r\n                    rawEnd--;\r\n                }\r\n\r\n                value = {\r\n                    type: 'Raw',\r\n                    loc: this.getLocation(rawStart, rawEnd),\r\n                    value: this.scanner.source.substring(rawStart, rawEnd)\r\n                };\r\n\r\n                this.eat(URL);\r\n                break;\r\n\r\n            case FUNCTION:\r\n                if (!cmpStr(this.scanner.source, this.scanner.tokenStart, this.scanner.tokenEnd, 'url(')) {\r\n                    this.error('Function name must be `url`');\r\n                }\r\n\r\n                this.eat(FUNCTION);\r\n                this.scanner.skipSC();\r\n                value = this.String();\r\n                this.scanner.skipSC();\r\n                this.eat(RIGHTPARENTHESIS);\r\n                break;\r\n\r\n            default:\r\n                this.error('Url or Function is expected');\r\n        }\r\n\r\n        return {\r\n            type: 'Url',\r\n            loc: this.getLocation(start, this.scanner.tokenStart),\r\n            value: value\r\n        };\r\n    },\r\n    generate: function(node) {\r\n        this.chunk('url');\r\n        this.chunk('(');\r\n        this.node(node.value);\r\n        this.chunk(')');\r\n    }\r\n};\r\n","var WHITESPACE = require('../../tokenizer').TYPE.WhiteSpace;\r\nvar SPACE = Object.freeze({\r\n    type: 'WhiteSpace',\r\n    loc: null,\r\n    value: ' '\r\n});\r\n\r\nmodule.exports = {\r\n    name: 'WhiteSpace',\r\n    structure: {\r\n        value: String\r\n    },\r\n    parse: function() {\r\n        this.eat(WHITESPACE);\r\n        return SPACE;\r\n\r\n        // return {\r\n        //     type: 'WhiteSpace',\r\n        //     loc: this.getLocation(this.scanner.tokenStart, this.scanner.tokenEnd),\r\n        //     value: this.consume(WHITESPACE)\r\n        // };\r\n    },\r\n    generate: function(node) {\r\n        this.chunk(node.value);\r\n    }\r\n};\r\n","module.exports = {\r\n    AnPlusB: require('./AnPlusB'),\r\n    Atrule: require('./Atrule'),\r\n    AtrulePrelude: require('./AtrulePrelude'),\r\n    AttributeSelector: require('./AttributeSelector'),\r\n    Block: require('./Block'),\r\n    Brackets: require('./Brackets'),\r\n    CDC: require('./CDC'),\r\n    CDO: require('./CDO'),\r\n    ClassSelector: require('./ClassSelector'),\r\n    Combinator: require('./Combinator'),\r\n    Comment: require('./Comment'),\r\n    Declaration: require('./Declaration'),\r\n    DeclarationList: require('./DeclarationList'),\r\n    Dimension: require('./Dimension'),\r\n    Function: require('./Function'),\r\n    HexColor: require('./HexColor'),\r\n    Identifier: require('./Identifier'),\r\n    IdSelector: require('./IdSelector'),\r\n    MediaFeature: require('./MediaFeature'),\r\n    MediaQuery: require('./MediaQuery'),\r\n    MediaQueryList: require('./MediaQueryList'),\r\n    Nth: require('./Nth'),\r\n    Number: require('./Number'),\r\n    Operator: require('./Operator'),\r\n    Parentheses: require('./Parentheses'),\r\n    Percentage: require('./Percentage'),\r\n    PseudoClassSelector: require('./PseudoClassSelector'),\r\n    PseudoElementSelector: require('./PseudoElementSelector'),\r\n    Ratio: require('./Ratio'),\r\n    Raw: require('./Raw'),\r\n    Rule: require('./Rule'),\r\n    Selector: require('./Selector'),\r\n    SelectorList: require('./SelectorList'),\r\n    String: require('./String'),\r\n    StyleSheet: require('./StyleSheet'),\r\n    TypeSelector: require('./TypeSelector'),\r\n    UnicodeRange: require('./UnicodeRange'),\r\n    Url: require('./Url'),\r\n    Value: require('./Value'),\r\n    WhiteSpace: require('./WhiteSpace')\r\n};\r\n","module.exports = {\r\n    name: 'Nth',\r\n    structure: {\r\n        nth: ['AnPlusB', 'Identifier'],\r\n        selector: ['SelectorList', null]\r\n    },\r\n    parse: function(allowOfClause) {\r\n        this.scanner.skipSC();\r\n\r\n        var start = this.scanner.tokenStart;\r\n        var end = start;\r\n        var selector = null;\r\n        var query;\r\n\r\n        if (this.scanner.lookupValue(0, 'odd') || this.scanner.lookupValue(0, 'even')) {\r\n            query = this.Identifier();\r\n        } else {\r\n            query = this.AnPlusB();\r\n        }\r\n\r\n        this.scanner.skipSC();\r\n\r\n        if (allowOfClause && this.scanner.lookupValue(0, 'of')) {\r\n            this.scanner.next();\r\n\r\n            selector = this.SelectorList();\r\n\r\n            if (this.needPositions) {\r\n                end = this.getLastListNode(selector.children).loc.end.offset;\r\n            }\r\n        } else {\r\n            if (this.needPositions) {\r\n                end = query.loc.end.offset;\r\n            }\r\n        }\r\n\r\n        return {\r\n            type: 'Nth',\r\n            loc: this.getLocation(start, end),\r\n            nth: query,\r\n            selector: selector\r\n        };\r\n    },\r\n    generate: function(node) {\r\n        this.node(node.nth);\r\n        if (node.selector !== null) {\r\n            this.chunk(' of ');\r\n            this.node(node.selector);\r\n        }\r\n    }\r\n};\r\n","module.exports = {\r\n    name: 'Selector',\r\n    structure: {\r\n        children: [[\r\n            'TypeSelector',\r\n            'IdSelector',\r\n            'ClassSelector',\r\n            'AttributeSelector',\r\n            'PseudoClassSelector',\r\n            'PseudoElementSelector',\r\n            'Combinator',\r\n            'WhiteSpace'\r\n        ]]\r\n    },\r\n    parse: function() {\r\n        var children = this.readSequence(this.scope.Selector);\r\n\r\n        // nothing were consumed\r\n        if (this.getFirstListNode(children) === null) {\r\n            this.error('Selector is expected');\r\n        }\r\n\r\n        return {\r\n            type: 'Selector',\r\n            loc: this.getLocationFromList(children),\r\n            children: children\r\n        };\r\n    },\r\n    generate: function(node) {\r\n        this.children(node);\r\n    }\r\n};\r\n","module.exports = {\r\n    name: 'Value',\r\n    structure: {\r\n        children: [[]]\r\n    },\r\n    parse: function() {\r\n        var start = this.scanner.tokenStart;\r\n        var children = this.readSequence(this.scope.Value);\r\n\r\n        return {\r\n            type: 'Value',\r\n            loc: this.getLocation(start, this.scanner.tokenStart),\r\n            children: children\r\n        };\r\n    },\r\n    generate: function(node) {\r\n        this.children(node);\r\n    }\r\n};\r\n","var data = require('../../../data');\r\n\r\nmodule.exports = {\r\n    generic: true,\r\n    types: data.types,\r\n    atrules: data.atrules,\r\n    properties: data.properties,\r\n    node: require('../node')\r\n};\r\n","var cmpChar = require('../../tokenizer').cmpChar;\r\nvar cmpStr = require('../../tokenizer').cmpStr;\r\nvar TYPE = require('../../tokenizer').TYPE;\r\n\r\nvar IDENT = TYPE.Ident;\r\nvar STRING = TYPE.String;\r\nvar NUMBER = TYPE.Number;\r\nvar FUNCTION = TYPE.Function;\r\nvar URL = TYPE.Url;\r\nvar HASH = TYPE.Hash;\r\nvar DIMENSION = TYPE.Dimension;\r\nvar PERCENTAGE = TYPE.Percentage;\r\nvar LEFTPARENTHESIS = TYPE.LeftParenthesis;\r\nvar LEFTSQUAREBRACKET = TYPE.LeftSquareBracket;\r\nvar COMMA = TYPE.Comma;\r\nvar DELIM = TYPE.Delim;\r\nvar NUMBERSIGN = 0x0023;  // U+0023 NUMBER SIGN (#)\r\nvar ASTERISK = 0x002A;    // U+002A ASTERISK (*)\r\nvar PLUSSIGN = 0x002B;    // U+002B PLUS SIGN (+)\r\nvar HYPHENMINUS = 0x002D; // U+002D HYPHEN-MINUS (-)\r\nvar SOLIDUS = 0x002F;     // U+002F SOLIDUS (/)\r\nvar U = 0x0075;           // U+0075 LATIN SMALL LETTER U (u)\r\n\r\nmodule.exports = function defaultRecognizer(context) {\r\n    switch (this.scanner.tokenType) {\r\n        case HASH:\r\n            return this.HexColor();\r\n\r\n        case COMMA:\r\n            context.space = null;\r\n            context.ignoreWSAfter = true;\r\n            return this.Operator();\r\n\r\n        case LEFTPARENTHESIS:\r\n            return this.Parentheses(this.readSequence, context.recognizer);\r\n\r\n        case LEFTSQUAREBRACKET:\r\n            return this.Brackets(this.readSequence, context.recognizer);\r\n\r\n        case STRING:\r\n            return this.String();\r\n\r\n        case DIMENSION:\r\n            return this.Dimension();\r\n\r\n        case PERCENTAGE:\r\n            return this.Percentage();\r\n\r\n        case NUMBER:\r\n            return this.Number();\r\n\r\n        case FUNCTION:\r\n            return cmpStr(this.scanner.source, this.scanner.tokenStart, this.scanner.tokenEnd, 'url(')\r\n                ? this.Url()\r\n                : this.Function(this.readSequence, context.recognizer);\r\n\r\n        case URL:\r\n            return this.Url();\r\n\r\n        case IDENT:\r\n            // check for unicode range, it should start with u+ or U+\r\n            if (cmpChar(this.scanner.source, this.scanner.tokenStart, U) &&\r\n                cmpChar(this.scanner.source, this.scanner.tokenStart + 1, PLUSSIGN)) {\r\n                return this.UnicodeRange();\r\n            } else {\r\n                return this.Identifier();\r\n            }\r\n\r\n        case DELIM:\r\n            var code = this.scanner.source.charCodeAt(this.scanner.tokenStart);\r\n\r\n            if (code === SOLIDUS ||\r\n                code === ASTERISK ||\r\n                code === PLUSSIGN ||\r\n                code === HYPHENMINUS) {\r\n                return this.Operator(); // TODO: replace with Delim\r\n            }\r\n\r\n            // TODO: produce a node with Delim node type\r\n\r\n            if (code === NUMBERSIGN) {\r\n                this.error('Hex or identifier is expected', this.scanner.tokenStart + 1);\r\n            }\r\n\r\n            break;\r\n    }\r\n};\r\n","module.exports = {\r\n    getNode: require('./default')\r\n};\r\n","var TYPE = require('../../tokenizer').TYPE;\r\n\r\nvar DELIM = TYPE.Delim;\r\nvar IDENT = TYPE.Ident;\r\nvar DIMENSION = TYPE.Dimension;\r\nvar PERCENTAGE = TYPE.Percentage;\r\nvar NUMBER = TYPE.Number;\r\nvar HASH = TYPE.Hash;\r\nvar COLON = TYPE.Colon;\r\nvar LEFTSQUAREBRACKET = TYPE.LeftSquareBracket;\r\nvar NUMBERSIGN = 0x0023;      // U+0023 NUMBER SIGN (#)\r\nvar ASTERISK = 0x002A;        // U+002A ASTERISK (*)\r\nvar PLUSSIGN = 0x002B;        // U+002B PLUS SIGN (+)\r\nvar SOLIDUS = 0x002F;         // U+002F SOLIDUS (/)\r\nvar FULLSTOP = 0x002E;        // U+002E FULL STOP (.)\r\nvar GREATERTHANSIGN = 0x003E; // U+003E GREATER-THAN SIGN (>)\r\nvar VERTICALLINE = 0x007C;    // U+007C VERTICAL LINE (|)\r\nvar TILDE = 0x007E;           // U+007E TILDE (~)\r\n\r\nfunction getNode(context) {\r\n    switch (this.scanner.tokenType) {\r\n        case LEFTSQUAREBRACKET:\r\n            return this.AttributeSelector();\r\n\r\n        case HASH:\r\n            return this.IdSelector();\r\n\r\n        case COLON:\r\n            if (this.scanner.lookupType(1) === COLON) {\r\n                return this.PseudoElementSelector();\r\n            } else {\r\n                return this.PseudoClassSelector();\r\n            }\r\n\r\n        case IDENT:\r\n            return this.TypeSelector();\r\n\r\n        case NUMBER:\r\n        case PERCENTAGE:\r\n            return this.Percentage();\r\n\r\n        case DIMENSION:\r\n            // throws when .123ident\r\n            if (this.scanner.source.charCodeAt(this.scanner.tokenStart) === FULLSTOP) {\r\n                this.error('Identifier is expected', this.scanner.tokenStart + 1);\r\n            }\r\n            break;\r\n\r\n        case DELIM:\r\n            var code = this.scanner.source.charCodeAt(this.scanner.tokenStart);\r\n\r\n            switch (code) {\r\n                case PLUSSIGN:\r\n                case GREATERTHANSIGN:\r\n                case TILDE:\r\n                    context.space = null;\r\n                    context.ignoreWSAfter = true;\r\n                    return this.Combinator();\r\n\r\n                case SOLIDUS:  // /deep/\r\n                    return this.Combinator();\r\n\r\n                case FULLSTOP:\r\n                    return this.ClassSelector();\r\n\r\n                case ASTERISK:\r\n                case VERTICALLINE:\r\n                    return this.TypeSelector();\r\n\r\n                case NUMBERSIGN:\r\n                    return this.IdSelector();\r\n            }\r\n\r\n            break;\r\n    }\r\n};\r\n\r\nmodule.exports = {\r\n    getNode: getNode\r\n};\r\n","// https://drafts.csswg.org/css-images-4/#element-notation\r\n// https://developer.mozilla.org/en-US/docs/Web/CSS/element\r\nmodule.exports = function() {\r\n    this.scanner.skipSC();\r\n\r\n    var children = this.createSingleNodeList(\r\n        this.IdSelector()\r\n    );\r\n\r\n    this.scanner.skipSC();\r\n\r\n    return children;\r\n};\r\n","var TYPE = require('../../tokenizer').TYPE;\r\nvar rawMode = require('../node/Raw').mode;\r\n\r\nvar COMMA = TYPE.Comma;\r\n\r\n// var( <ident> , <value>? )\r\nmodule.exports = function() {\r\n    var children = this.createList();\r\n\r\n    this.scanner.skipSC();\r\n\r\n    // NOTE: Don't check more than a first argument is an ident, rest checks are for lexer\r\n    children.push(this.Identifier());\r\n\r\n    this.scanner.skipSC();\r\n\r\n    if (this.scanner.tokenType === COMMA) {\r\n        children.push(this.Operator());\r\n        children.push(this.parseCustomProperty\r\n            ? this.Value(null)\r\n            : this.Raw(this.scanner.tokenIndex, rawMode.exclamationMarkOrSemicolon, false)\r\n        );\r\n    }\r\n\r\n    return children;\r\n};\r\n","module.exports = {\r\n    AtrulePrelude: require('./atrulePrelude'),\r\n    Selector: require('./selector'),\r\n    Value: require('./value')\r\n};\r\n","module.exports = {\r\n    getNode: require('./default'),\r\n    '-moz-element': require('../function/element'),\r\n    'element': require('../function/element'),\r\n    'expression': require('../function/expression'),\r\n    'var': require('../function/var')\r\n};\r\n","// legacy IE function\r\n// expression( <any-value> )\r\nmodule.exports = function() {\r\n    return this.createSingleNodeList(\r\n        this.Raw(this.scanner.tokenIndex, null, false)\r\n    );\r\n};\r\n","var TYPE = require('../../tokenizer').TYPE;\r\n\r\nvar STRING = TYPE.String;\r\nvar IDENT = TYPE.Ident;\r\nvar URL = TYPE.Url;\r\nvar FUNCTION = TYPE.Function;\r\nvar LEFTPARENTHESIS = TYPE.LeftParenthesis;\r\n\r\nmodule.exports = {\r\n    parse: {\r\n        prelude: function() {\r\n            var children = this.createList();\r\n\r\n            this.scanner.skipSC();\r\n\r\n            switch (this.scanner.tokenType) {\r\n                case STRING:\r\n                    children.push(this.String());\r\n                    break;\r\n\r\n                case URL:\r\n                case FUNCTION:\r\n                    children.push(this.Url());\r\n                    break;\r\n\r\n                default:\r\n                    this.error('String or url() is expected');\r\n            }\r\n\r\n            if (this.lookupNonWSType(0) === IDENT ||\r\n                this.lookupNonWSType(0) === LEFTPARENTHESIS) {\r\n                children.push(this.WhiteSpace());\r\n                children.push(this.MediaQueryList());\r\n            }\r\n\r\n            return children;\r\n        },\r\n        block: null\r\n    }\r\n};\r\n","var TYPE = require('../../tokenizer').TYPE;\r\n\r\nvar WHITESPACE = TYPE.WhiteSpace;\r\nvar COMMENT = TYPE.Comment;\r\nvar IDENT = TYPE.Ident;\r\nvar FUNCTION = TYPE.Function;\r\nvar COLON = TYPE.Colon;\r\nvar LEFTPARENTHESIS = TYPE.LeftParenthesis;\r\n\r\nfunction consumeRaw() {\r\n    return this.createSingleNodeList(\r\n        this.Raw(this.scanner.tokenIndex, null, false)\r\n    );\r\n}\r\n\r\nfunction parentheses() {\r\n    this.scanner.skipSC();\r\n\r\n    if (this.scanner.tokenType === IDENT &&\r\n        this.lookupNonWSType(1) === COLON) {\r\n        return this.createSingleNodeList(\r\n            this.Declaration()\r\n        );\r\n    }\r\n\r\n    return readSequence.call(this);\r\n}\r\n\r\nfunction readSequence() {\r\n    var children = this.createList();\r\n    var space = null;\r\n    var child;\r\n\r\n    this.scanner.skipSC();\r\n\r\n    scan:\r\n    while (!this.scanner.eof) {\r\n        switch (this.scanner.tokenType) {\r\n            case WHITESPACE:\r\n                space = this.WhiteSpace();\r\n                continue;\r\n\r\n            case COMMENT:\r\n                this.scanner.next();\r\n                continue;\r\n\r\n            case FUNCTION:\r\n                child = this.Function(consumeRaw, this.scope.AtrulePrelude);\r\n                break;\r\n\r\n            case IDENT:\r\n                child = this.Identifier();\r\n                break;\r\n\r\n            case LEFTPARENTHESIS:\r\n                child = this.Parentheses(parentheses, this.scope.AtrulePrelude);\r\n                break;\r\n\r\n            default:\r\n                break scan;\r\n        }\r\n\r\n        if (space !== null) {\r\n            children.push(space);\r\n            space = null;\r\n        }\r\n\r\n        children.push(child);\r\n    }\r\n\r\n    return children;\r\n}\r\n\r\nmodule.exports = {\r\n    parse: {\r\n        prelude: function() {\r\n            var children = readSequence.call(this);\r\n\r\n            if (this.getFirstListNode(children) === null) {\r\n                this.error('Condition is expected');\r\n            }\r\n\r\n            return children;\r\n        },\r\n        block: function() {\r\n            return this.Block(false);\r\n        }\r\n    }\r\n};\r\n","module.exports = {\r\n    parse: function selectorList() {\r\n        return this.createSingleNodeList(\r\n            this.SelectorList()\r\n        );\r\n    }\r\n};\r\n","var ALLOW_OF_CLAUSE = true;\r\n\r\nmodule.exports = {\r\n    parse: function nthWithOfClause() {\r\n        return this.createSingleNodeList(\r\n            this.Nth(ALLOW_OF_CLAUSE)\r\n        );\r\n    }\r\n};\r\n","var DISALLOW_OF_CLAUSE = false;\r\n\r\nmodule.exports = {\r\n    parse: function nth() {\r\n        return this.createSingleNodeList(\r\n            this.Nth(DISALLOW_OF_CLAUSE)\r\n        );\r\n    }\r\n};\r\n","function merge() {\r\n    var dest = {};\r\n\r\n    for (var i = 0; i < arguments.length; i++) {\r\n        var src = arguments[i];\r\n        for (var key in src) {\r\n            dest[key] = src[key];\r\n        }\r\n    }\r\n\r\n    return dest;\r\n}\r\n\r\nmodule.exports = require('./create').create(\r\n    merge(\r\n        require('./config/lexer'),\r\n        require('./config/parser'),\r\n        require('./config/walker')\r\n    )\r\n);\r\n","module.exports = {\r\n    parseContext: {\r\n        default: 'StyleSheet',\r\n        stylesheet: 'StyleSheet',\r\n        atrule: 'Atrule',\r\n        atrulePrelude: function(options) {\r\n            return this.AtrulePrelude(options.atrule ? String(options.atrule) : null);\r\n        },\r\n        mediaQueryList: 'MediaQueryList',\r\n        mediaQuery: 'MediaQuery',\r\n        rule: 'Rule',\r\n        selectorList: 'SelectorList',\r\n        selector: 'Selector',\r\n        block: function() {\r\n            return this.Block(true);\r\n        },\r\n        declarationList: 'DeclarationList',\r\n        declaration: 'Declaration',\r\n        value: 'Value'\r\n    },\r\n    scope: require('../scope'),\r\n    atrule: require('../atrule'),\r\n    pseudo: require('../pseudo'),\r\n    node: require('../node')\r\n};\r\n","module.exports = {\r\n    'font-face': require('./font-face'),\r\n    'import': require('./import'),\r\n    'media': require('./media'),\r\n    'page': require('./page'),\r\n    'supports': require('./supports')\r\n};\r\n","module.exports = {\r\n    parse: {\r\n        prelude: null,\r\n        block: function() {\r\n            return this.Block(true);\r\n        }\r\n    }\r\n};\r\n","module.exports = {\r\n    parse: {\r\n        prelude: function() {\r\n            return this.createSingleNodeList(\r\n                this.MediaQueryList()\r\n            );\r\n        },\r\n        block: function() {\r\n            return this.Block(false);\r\n        }\r\n    }\r\n};\r\n","module.exports = {\r\n    parse: {\r\n        prelude: function() {\r\n            return this.createSingleNodeList(\r\n                this.SelectorList()\r\n            );\r\n        },\r\n        block: function() {\r\n            return this.Block(true);\r\n        }\r\n    }\r\n};\r\n","module.exports = {\r\n    'dir': require('./dir'),\r\n    'has': require('./has'),\r\n    'lang': require('./lang'),\r\n    'matches': require('./matches'),\r\n    'not': require('./not'),\r\n    'nth-child': require('./nth-child'),\r\n    'nth-last-child': require('./nth-last-child'),\r\n    'nth-last-of-type': require('./nth-last-of-type'),\r\n    'nth-of-type': require('./nth-of-type'),\r\n    'slotted': require('./slotted')\r\n};\r\n","module.exports = {\r\n    parse: function() {\r\n        return this.createSingleNodeList(\r\n            this.Identifier()\r\n        );\r\n    }\r\n};\r\n","module.exports = {\r\n    parse: function() {\r\n        return this.createSingleNodeList(\r\n            this.SelectorList()\r\n        );\r\n    }\r\n};\r\n","module.exports = {\r\n    parse: function() {\r\n        return this.createSingleNodeList(\r\n            this.Identifier()\r\n        );\r\n    }\r\n};\r\n","module.exports = require('./common/selectorList');\r\n","module.exports = require('./common/selectorList');\r\n","module.exports = require('./common/nthWithOfClause');\r\n","module.exports = require('./common/nthWithOfClause');\r\n","module.exports = require('./common/nth');\r\n","module.exports = require('./common/nth');\r\n","module.exports = {\r\n    parse: function compoundSelector() {\r\n        return this.createSingleNodeList(\r\n            this.Selector()\r\n        );\r\n    }\r\n};\r\n","module.exports = {\r\n    node: require('../node')\r\n};\r\n","import isNumber from 'lodash.isnumber'\nimport isPlainObject from 'lodash.isplainobject'\nimport isString from 'lodash.isstring'\nimport { parse, walk, lexer } from 'css-tree-animatable'\nimport patch from 'css-tree-animatable/data/patch.json'\nimport mdnProperties from 'mdn-data-animatable/css/properties.json'\nimport mdnSyntaxes from 'mdn-data-animatable/css/syntaxes.json'\nimport nonAnimatable from 'mdn-data-animatable/css/non-animatable.json'\nimport popularIndex from './popularIndex.json'\n\nconst properties = []\nObject.keys(lexer.properties).forEach((key) => {\n  if (!nonAnimatable.includes(key)) {\n    properties.push(key)\n  }\n})\n\nconst isAnimatable = (value, returnCssProperty = false) => {\n  let property = value.toLowerCase().trim()\n  if (property === 'cssoffset') {\n    property = property.substr(3)\n  }\n  if (properties.includes(property)) {\n    return returnCssProperty ? property : true\n  }\n  if (property.includes('-')) {\n    return returnCssProperty ? '' : false\n  }\n  property = property.replace(/-/g, '')\n  for (const prop of properties) {\n    if (property === prop.replace(/-/g, '')) {\n      return returnCssProperty ? prop : true\n    }\n  }\n  return returnCssProperty ? '' : false\n}\n\nconst cssToJs = (value, webAnimationsAPI = true) => {\n  let property = isAnimatable(value, true)\n  if (!property) {\n    return ''\n  }\n  if (webAnimationsAPI) {\n    if (property === 'offset') {\n      property = 'css-' + property\n    }\n  }\n  return property.replace(/-([a-z])/g, (match, letter) => {\n    return letter.toUpperCase()\n  })\n}\n\nconst jsToCss = (value) => {\n  return isAnimatable(value, true)\n}\n\nconst popular = (start = 0, end = 10) => {\n  const popular = []\n  let notInPopular\n  if (end >= popularIndex.length) {\n    notInPopular = properties.filter((property) => !popularIndex.includes(properties.indexOf(property)))\n  }\n  for (let i = start; i < end; i++) {\n    if (popularIndex[i] || popularIndex[i] === 0) {\n      popular.push(properties[popularIndex[i]])\n    } else {\n      const property = notInPopular[i - popularIndex.length]\n      if (!property) {\n        break\n      }\n      popular.push(property)\n    }\n  }\n  return popular\n}\n\nconst syntaxes = { main: '', links: {}, order: [] }\n\nconst getSyntaxes = (syntax) => {\n  const propertyMatches = syntax.match(/<'[a-zA-Z0-9-()]+'>/g)\n  if (Array.isArray(propertyMatches)) {\n    propertyMatches.forEach((key) => {\n      const prop = key.slice(2, -2)\n      const propertySyntax = mdnProperties[prop]\n      syntaxes[key] = propertySyntax.syntax\n      syntaxes.order.push(key)\n      getSyntaxes(propertySyntax.syntax)\n    })\n  }\n  const syntaxMatches = syntax.match(/<[a-zA-Z0-9-()]+>/g)\n  if (Array.isArray(syntaxMatches)) {\n    syntaxMatches.forEach((key) => {\n      const prop = key.slice(1, -1)\n      if (!syntaxes[key]) {\n        const syntaxSyntax = mdnSyntaxes[prop]\n        const patchSyntax = patch.syntaxes[prop]\n        if (syntaxSyntax) {\n          syntaxes[key] = syntaxSyntax.syntax\n          syntaxes.order.push(key)\n          getSyntaxes(syntaxSyntax.syntax)\n        } else if (patchSyntax) {\n          syntaxes[key] = patchSyntax.syntax\n          syntaxes.order.push(key)\n          getSyntaxes(patchSyntax.syntax)\n        } else if (!['url-token', 'any-value', 'function-token', 'hex-color', 'declaration-value', 'hash-token', 'zero'].includes(prop)) {\n          syntaxes.links[key] = 'https://developer.mozilla.org/docs/Web/CSS/' + prop.replace(/flex/, 'flex_value')\n        }\n      }\n    })\n  }\n}\n\nconst syntax = (value) => {\n  for (const member in syntaxes) delete syntaxes[member]\n  syntaxes.main = ''\n  syntaxes.links = {}\n  syntaxes.order = []\n  const property = isAnimatable(value, true)\n  if (property) {\n    const syntax = mdnProperties[property].syntax\n    syntaxes.main = syntax\n    getSyntaxes(syntax)\n  } else {\n    syntaxes.main = `Error: ${value} is not an animatable CSS property.`\n  }\n  return syntaxes\n}\n\nconst validate = (obj, returnError = true) => {\n  const errors = []\n  if (!isPlainObject(obj)) {\n    errors.push({ name: 'TypeError', message: 'Argument is not a plain object.' })\n  } else {\n    for (let [key, value] of Object.entries(obj)) {\n      if (!isString(value) && !isNumber(value)) {\n        errors.push({ name: 'TypeError', message: 'Property value must be a string or a number. ' + typeof value + ' given.' })\n      } else {\n        const property = isAnimatable(key, true)\n        if (!property) {\n          errors.push({ name: 'MatchError', message: key + ' is not an animatable CSS property.' })\n        } else {\n          let ast\n          try {\n            ast = parse(`${property}: ${value}`, {\n              context: 'declaration',\n              onParseError: (error) => {\n                errors.push(error)\n              },\n            })\n            walk(ast, {\n              visit: 'Declaration',\n              enter: function (node) {\n                const error = lexer.matchDeclaration(node).error\n                if (error) {\n                  errors.push(error)\n                }\n              },\n            })\n          } catch (error) {\n            errors.push(error)\n          }\n        }\n      }\n    }\n  }\n  return !errors.length ? true : returnError ? errors[errors.length - 1] : false\n}\n\nconst propertyFormat = (property, format) => {\n  switch (format) {\n    case 'css':\n      property = jsToCss(property)\n      break\n    case 'js':\n      property = cssToJs(property, false)\n      break\n    default:\n      property = cssToJs(property)\n  }\n  return property\n}\n\nconst sanitize = (obj, format = 'waapi') => {\n  format = format.toString().toLowerCase()\n  let sanitized = {}\n  if (Array.isArray(obj)) {\n    sanitized = []\n    obj.forEach((key) => {\n      const property = isAnimatable(key, true)\n      if (property) {\n        sanitized.push(propertyFormat(property, format))\n      }\n    })\n  } else if (isPlainObject(obj)) {\n    for (let [key, value] of Object.entries(obj)) {\n      const object = {}\n      object[key] = value\n      if (validate(object, false)) {\n        sanitized[propertyFormat(key, format)] = value\n      }\n    }\n  } else if (isString(obj)) {\n    switch (format) {\n      case 'css':\n        return jsToCss(obj)\n      case 'js':\n        return cssToJs(obj, false)\n      default:\n        return cssToJs(obj)\n    }\n  }\n  return sanitized\n}\n\nexport default {\n  properties: properties,\n  cssToJs: cssToJs,\n  jsToCss: jsToCss,\n  isAnimatable: isAnimatable,\n  popular: popular,\n  syntax: syntax,\n  validate: validate,\n  sanitize: sanitize,\n}\n","import functions from './functions'\n\nexport default {\n  properties: functions.properties.map((val) => functions.cssToJs(val)),\n  propertiesCSS: functions.properties,\n  propertiesJS: functions.properties.map((val) => functions.cssToJs(val, false)),\n}\n","import arrays from './arrays'\nimport functions from './functions'\n\nexport const properties = arrays.properties\nexport const propertiesCSS = arrays.propertiesCSS\nexport const propertiesJS = arrays.propertiesJS\nexport const cssToJs = functions.cssToJs\nexport const jsToCss = functions.jsToCss\nexport const isAnimatable = functions.isAnimatable\nexport const popular = functions.popular\nexport const syntax = functions.syntax\nexport const validate = functions.validate\nexport const sanitize = functions.sanitize\n"],"names":["objectToString","Object","prototype","toString","value","isObjectLike","call","funcProto","Function","objectProto","funcToString","hasOwnProperty","objectCtorString","getPrototype","func","transform","arg","overArg","getPrototypeOf","result","e","isHostObject","proto","Ctor","constructor","isArray","Array","createItem","data","prev","next","allocateCursor","node","cursor","cursors","releaseCursor","List","this","head","tail","updateCursors","prevOld","prevNew","nextOld","nextNew","getSize","size","fromArray","array","i","length","item","toArray","push","toJSON","isEmpty","first","last","each","fn","context","undefined","forEach","eachRight","forEachRight","nextUntil","start","prevUntil","some","map","appendData","filter","clear","copy","insert","prepend","prependData","append","before","Error","insertData","remove","pop","unshift","shift","prependList","list","insertList","appendList","replace","oldItem","newItemOrList","name","message","error","create","SyntaxError","errorStack","defineProperty","get","stack","TAB_REPLACEMENT","sourceFragment","extraLines","processLines","end","lines","slice","line","idx","num","String","maxNumLength","join","source","split","column","startLine","Math","max","endLine","min","cutLeft","substr","match","OFFSET_CORRECTION","MAX_LINE_LENGTH","Boolean","offset","createCustomError","isNaN","parseError","TYPE","EOF","Ident","AtKeyword","Hash","BadString","Url","BadUrl","Delim","Number","Percentage","Dimension","WhiteSpace","CDO","CDC","Colon","Semicolon","Comma","LeftSquareBracket","RightSquareBracket","LeftParenthesis","RightParenthesis","LeftCurlyBracket","RightCurlyBracket","Comment","NAME","keys","reduce","key","isDigit","code","isUppercaseLetter","isLowercaseLetter","isLetter","isNonAscii","isNameStart","isNonPrintable","isNewline","isWhiteSpace","isValidEscape","second","CATEGORY","charCodeCategory","Eof","Digit","NameStart","NonPrintable","isHexDigit","isName","isIdentifierStart","third","isNumberStart","isBOM","charCodeDef","getCharCode","charCodeAt","getNewlineLength","cmpChar","testStr","referenceCode","findDecimalNumberEnd","consumeEscaped","maxOffset","consumeName","consumeNumber","sign","consumeBadUrlRemnants","cmpStr","referenceStr","testCode","findWhiteSpaceStart","findWhiteSpaceEnd","constants","utils","WHITESPACE","COMMENT","OFFSET_MASK","TYPE_SHIFT","TokenStream","offsetAndType","balance","reset","eof","tokenIndex","tokenType","tokenStart","firstCharOffset","tokenEnd","lookupType","tokenCount","lookupOffset","lookupValue","getTokenStart","getRawLength","startToken","mode","balanceEnd","loop","isBalanceEdge","pos","isDelim","getTokenValue","substring","getTokenLength","substrToCursor","skipWS","skipTokenCount","skip","skipSC","dump","type","chunk","noop","generate","decorate","forceBraces","compact","multiplier","combinator","terms","term","explicit","generateSequence","disallowEmpty","comma","opts","generateTypeOpts","options","getLocation","point","loc","referenceName","reference","syntax","matchResult","details","tokens","longestMatch","mismatchOffset","entries","css","fromMatchResult","badNode","rawMessage","keywords","properties","isCustomProperty","str","getVendorPrefix","secondDashIndex","indexOf","keyword","toLowerCase","custom","vendor","freeze","basename","prefix","property","hack","vendorPrefix","SafeUint32Array","Uint32Array","buffer","charCodeDefinitions","tokenize","stream","sourceLength","consumeNumericToken","consumeIdentLikeToken","nameStartOffset","consumeUrlToken","consumeStringToken","endingCodePoint","nextCode","adoptBuffer","balanceCloseType","balanceStart","balancePrev","require$$0","DELIM","IDENT","NUMBER","DIMENSION","HYPHENMINUS","DISALLOW_SIGN","token","getNextToken","checkInteger","valueOffset","disallowSign","consumeB","offset_","startsWith","hexSequence","allowDash","hexlen","withQuestionMarkSequence","consumed","tokenizer","cssWideKeywords","calcFunctionNames","charCode","index","eqStr","actual","expected","eqStrAny","isPostfixIeHack","outOfRange","numEnd","consumeFunction","startIdx","calc","expectedTokenType","dimension","numberEnd","reverseSolidusOffset","unit","zero","ident-token","function-token","at-keyword-token","hash-token","string-token","bad-string-token","url-token","bad-url-token","delim-token","number-token","percentage-token","dimension-token","whitespace-token","CDO-token","CDC-token","colon-token","semicolon-token","comma-token","[-token","]-token","(-token",")-token","{-token","}-token","string","ident","custom-ident","custom-property-name","hex-color","id-selector","an-plus-b","urange","consumedHexLength","declaration-value","level","scan","any-value","angle","deg","grad","rad","turn","decibel","db","frequency","hz","khz","flex","fr","px","mm","cm","in","pt","pc","q","em","ex","ch","rem","vh","vw","vmin","vmax","vm","resolution","dpi","dpcm","dppx","x","semitones","st","time","s","ms","percentage","number","integer","-ms-legacy-expression","input","Tokenizer","nextCharCode","nextNonWsCode","findWsEnd","substringToPos","eat","fromCharCode","peek","charAt","LEFTCURLYBRACKET","NAME_CHAR","createCharMap","test","COMBINATOR_PRECEDENCE"," ","&&","||","|","scanSpaces","scanWord","scanNumber","scanString","readMultiplierRange","maybeMultiplied","range","readMultiplier","maybeToken","readType","readTypeRange","regroupTerms","combinators","createGroup","sort","a","b","subgroupStart","splice","readImplicitGroup","prevToken","prevTokenPos","readKeywordOrFunction","readGroup","readProperty","parse","ensureFunction","enter","leave","walk","tokenStream","astToTokens","decorator","handlers","curNode","len","nodes","children","tmp","prepareTokens","nodesOffset","nodesIndex","currentNode","MATCH","MISMATCH","DISALLOW_EMPTY","createCondition","thenBranch","elseBranch","else","then","isFunctionType","isEnumCapatible","buildGroupMatchGraph","atLeastOneTermMatched","all","thenClause","newGroupTerm","buildMatchGraph","matchTerm","buildMultiplierMatchGraph","syntaxTree","ref","matchGraph","EXIT_REASON_MATCH","reverseList","areStringsEqualCaseInsensitive","isCommaContextStart","isCommaContextEnd","internalMatch","state","syntaxes","moveToNextToken","nextIndex","stateSnapshotFromSyntax","nextState","matchStack","syntaxStack","thenStack","pushThenStack","pushElseStack","elseStack","addTokenToMatch","syntaxStash","closeSyntax","iterationCount","exitReason","mask","matchFlag","lastTokenIndex","floor","syntaxDict","dictSyntax","keywordName","console","warn","reason","iterations","host","hostStack","getTrace","shouldPutToTrace","matched","hasMatch","matchNode","testNode","trace","isType","isProperty","isKeyword","getFirstMatchNode","getLastMatchNode","matchFragments","lexer","ast","fragments","findFragments","parent","isValidNumber","isFinite","isValidLocation","createNodeStructureChecker","fields","valid","fieldType","processStructure","nodeType","structure","docs","docsTypes","fieldTypes","check","SyntaxReferenceError","MatchError","require$$1","matchAsTree","require$$2","getStructureFromConfig","config","cssWideKeywordsWithExpression","dumpMapSyntax","syntaxAsAst","buildMatchResult","matchSyntax","useCommon","valueHasVar","valueCommonSyntax","Lexer","generic","atrules","types","addType_","addAtrule_","addProperty_","checkStructure","collectWarning","warns","createDescriptor","descriptor","prelude","descriptors","res","matchAtrulePrelude","atruleName","atrule","names","atrulePreludeSyntax","getAtrulePrelude","matchAtruleDescriptor","descriptorName","atruleEntry","atruleDescriptorSyntax","matchDeclaration","matchProperty","propertyName","propertySyntax","getProperty","matchType","typeName","typeSyntax","getType","findValueFragments","search","findDeclarationValueFragments","declaration","findAllFragments","visit","apply","bind","getAtruleDescriptor","declarators","validate","broken","brokenMap","brokenTypes","brokenProperties","pretty","JSON","stringify","require$$3","OffsetToLocation","columns","linesAndColumnsComputed","setSource","startOffset","startColumn","ensureLinesAndColumnsComputed","computeLinesAndColumns","filename","getLocationRange","recognizer","createList","child","space","ignoreWS","ignoreWSAfter","scanner","getNode","FUNCTION","URL","HASH","PERCENTAGE","createParseContext","parser","locationMap","needPositions","onParseError","onParseErrorThrow","parseAtrulePrelude","parseRulePrelude","parseValue","parseCustomProperty","readSequence","sequence","createSingleNodeList","getFirstListNode","getLastListNode","parseWithFallback","consumer","fallback","fallbackNode","lookupNonWSType","consume","consumeFunctionName","getLocationFromList","location","parserConfig","scope","pseudo","parseContext","processConfig","positions","processChildren","delimeter","invokeForType","getWalkersFromStructure","walkers","walker","nullable","walkContext","createTypeIterator","reverse","contextName","useContext","prevContextValue","field","createFastTraveralMap","iterators","Atrule","StyleSheet","Rule","Block","Declaration","DeclarationList","getTypesFromConfig","iteratorsNatural","iteratorsReverse","fastTraversalIteratorsNatural","fastTraversalIteratorsReverse","root","stylesheet","atrulePrelude","rule","selector","block","function","walkNode","find","found","findLast","findAll","clone","shape","isObject","assign","extend","dest","src","mix","innerShape","k","createSyntax","createParser","createWalker","processNode","createGenerator","convert","fromPlainObject","toPlainObject","createConvertor","definitionSyntax","createLexer","fork","extension","base","buildDictionary","dict","patchDict","mdnSyntaxes","patch","trim","preprocessAtrules","mdnProperties","PLUSSIGN","N","checkTokenIsInteger","expectCharCode","msg","getOffsetExcludeWS","excludeWhiteSpace","endOffset","default","leftCurlyBracket","leftCurlyBracketOrSemicolon","exclamationMarkOrSemicolon","semicolonIncluded","rawMode","ATKEYWORD","SEMICOLON","RIGHTCURLYBRACKET","consumeRaw","Raw","isDeclarationBlockAtrule","nameLowerCase","AtrulePrelude","STRING","COLON","LEFTSQUAREBRACKET","RIGHTSQUAREBRACKET","getAttributeName","expectIdent","checkColon","getOperator","matcher","flags","Identifier","flagsPrefix","consumeRule","consumeRawDeclaration","consumeDeclaration","isDeclaration","consumeValueRaw","consumeCustomPropertyRaw","consumeValue","startValueToken","Value","important","customProperty","getImportant","RIGHTPARENTHESIS","LEFTPARENTHESIS","Ratio","MediaFeature","COMMA","relative","MediaQuery","left","right","consumePrelude","SelectorList","Selector","eatIdentifierOrAsterisk","eatHexSequence","eatQuestionMarkSequence","count","scanUnicodeRange","hexLength","rawStart","rawEnd","SPACE","AnPlusB","AttributeSelector","require$$4","Brackets","require$$5","require$$6","require$$7","ClassSelector","require$$8","Combinator","require$$9","require$$10","require$$11","require$$12","require$$13","require$$14","HexColor","require$$15","require$$16","IdSelector","require$$17","require$$18","require$$19","MediaQueryList","require$$20","Nth","nth","allowOfClause","query","require$$22","Operator","require$$23","Parentheses","require$$24","require$$25","PseudoClassSelector","require$$26","PseudoElementSelector","require$$27","require$$28","require$$29","require$$30","require$$32","require$$33","require$$34","TypeSelector","require$$35","UnicodeRange","require$$36","require$$37","-moz-element","element","expression","var","parentheses","arguments","merge","mediaQueryList","mediaQuery","selectorList","declarationList","font-face","import","media","page","supports","dir","has","lang","matches","not","nth-child","nth-last-child","nth-last-of-type","nth-of-type","slotted","nonAnimatable","includes","isAnimatable","returnCssProperty","prop","cssToJs","webAnimationsAPI","letter","toUpperCase","jsToCss","main","links","order","getSyntaxes","propertyMatches","syntaxMatches","syntaxSyntax","patchSyntax","obj","returnError","errors","isPlainObject","isString","isNumber","propertyFormat","format","popular","notInPopular","popularIndex","member","sanitize","sanitized","object","functions","val","propertiesCSS","propertiesJS","arrays"],"mappings":"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"}