{"version":3,"file":"animatable.js","sources":["../src/properties.js","../node_modules/camelcase/index.js","../src/functions.js","../src/arrays.js","../src/index.js"],"sourcesContent":["export default [\n  'all',\n  'backdrop-filter',\n  'background',\n  'background-color',\n  'background-position',\n  'background-size',\n  'border',\n  'border-bottom',\n  'border-bottom-color',\n  'border-bottom-left-radius',\n  'border-bottom-right-radius',\n  'border-bottom-width',\n  'border-color',\n  'border-end-end-radius',\n  'border-end-start-radius',\n  'border-image-outset',\n  'border-image-slice',\n  'border-image-width',\n  'border-left',\n  'border-left-color',\n  'border-left-width',\n  'border-radius',\n  'border-right',\n  'border-right-color',\n  'border-right-width',\n  'border-start-end-radius',\n  'border-start-start-radius',\n  'border-top',\n  'border-top-color',\n  'border-top-left-radius',\n  'border-top-right-radius',\n  'border-top-width',\n  'border-width',\n  'bottom',\n  'box-shadow',\n  'caret-color',\n  'clip',\n  'clip-path',\n  'color',\n  'column-count',\n  'column-gap',\n  'column-rule',\n  'column-rule-color',\n  'column-rule-width',\n  'column-width',\n  'columns',\n  'filter',\n  'flex',\n  'flex-basis',\n  'flex-grow',\n  'flex-shrink',\n  'font',\n  'font-size',\n  'font-size-adjust',\n  'font-stretch',\n  'font-variation-settings',\n  'font-weight',\n  'gap',\n  'grid-column-gap',\n  'grid-gap',\n  'grid-row-gap',\n  'grid-template-columns',\n  'grid-template-rows',\n  'height',\n  'inset',\n  'inset-block',\n  'inset-block-end',\n  'inset-block-start',\n  'inset-inline',\n  'inset-inline-end',\n  'inset-inline-start',\n  'left',\n  'letter-spacing',\n  'line-clamp',\n  'line-height',\n  'margin',\n  'margin-bottom',\n  'margin-left',\n  'margin-right',\n  'margin-top',\n  'mask',\n  'mask-border',\n  'mask-position',\n  'mask-size',\n  'max-height',\n  'max-lines',\n  'max-width',\n  'min-height',\n  'min-width',\n  'object-position',\n  'offset',\n  'offset-anchor',\n  'offset-distance',\n  'offset-path',\n  'offset-position',\n  'offset-rotate',\n  'opacity',\n  'order',\n  'outline',\n  'outline-color',\n  'outline-offset',\n  'outline-width',\n  'padding',\n  'padding-bottom',\n  'padding-left',\n  'padding-right',\n  'padding-top',\n  'perspective',\n  'perspective-origin',\n  'right',\n  'rotate',\n  'row-gap',\n  'scale',\n  'scroll-margin',\n  'scroll-margin-block',\n  'scroll-margin-block-end',\n  'scroll-margin-block-start',\n  'scroll-margin-bottom',\n  'scroll-margin-inline',\n  'scroll-margin-inline-end',\n  'scroll-margin-inline-start',\n  'scroll-margin-left',\n  'scroll-margin-right',\n  'scroll-margin-top',\n  'scroll-padding',\n  'scroll-padding-block',\n  'scroll-padding-block-end',\n  'scroll-padding-block-start',\n  'scroll-padding-bottom',\n  'scroll-padding-inline',\n  'scroll-padding-inline-end',\n  'scroll-padding-inline-start',\n  'scroll-padding-left',\n  'scroll-padding-right',\n  'scroll-padding-top',\n  'scroll-snap-coordinate',\n  'scroll-snap-destination',\n  'scrollbar-color',\n  'shape-image-threshold',\n  'shape-margin',\n  'shape-outside',\n  'tab-size',\n  'text-decoration',\n  'text-decoration-color',\n  'text-decoration-thickness',\n  'text-emphasis',\n  'text-emphasis-color',\n  'text-indent',\n  'text-shadow',\n  'text-underline-offset',\n  'top',\n  'transform',\n  'transform-origin',\n  'translate',\n  'vertical-align',\n  'visibility',\n  'width',\n  'word-spacing',\n  'z-index',\n  'zoom',\n]\n","'use strict';\n\nconst preserveCamelCase = string => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && /[a-zA-Z]/.test(character) && character.toUpperCase() === character) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && /[a-zA-Z]/.test(character) && character.toLowerCase() === character) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = character.toLowerCase() === character && character.toUpperCase() !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = character.toUpperCase() === character && character.toLowerCase() !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = Object.assign({\n\t\tpascalCase: false\n\t}, options);\n\n\tconst postProcess = x => options.pascalCase ? x.charAt(0).toUpperCase() + x.slice(1) : x;\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? input.toUpperCase() : input.toLowerCase();\n\t}\n\n\tconst hasUpperCase = input !== input.toLowerCase();\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input);\n\t}\n\n\tinput = input\n\t\t.replace(/^[_.\\- ]+/, '')\n\t\t.toLowerCase()\n\t\t.replace(/[_.\\- ]+(\\w|$)/g, (_, p1) => p1.toUpperCase())\n\t\t.replace(/\\d+(\\w|$)/g, m => m.toUpperCase());\n\n\treturn postProcess(input);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","import properties from './properties'\nimport camelcase from 'camelcase'\n\nexport default {\n  cssToJs: (value, webAnimationsAPI = true) => {\n    let property = value.toLowerCase()\n    if (webAnimationsAPI) {\n      if (property === 'float' || property === 'offset') {\n        property = 'css-' + property\n      }\n    }\n    return camelcase(property)\n  },\n\n  isAnimatable: (value) => {\n    let property = value.toLowerCase()\n    if (property.substr(0, 3) === 'css') {\n      property = property.substr(3)\n    }\n    if (properties.includes(property)) {\n      return true\n    }\n    property = property.replace(/-/g, '')\n    for (const prop of properties) {\n      if (property === prop.replace(/-/g, '')) {\n        return true\n      }\n    }\n    return false\n  },\n}\n","import properties from './properties'\nimport functions from './functions'\n\nexport default {\n  properties: properties.map((val) => functions.cssToJs(val)),\n  propertiesCSS: properties,\n  propertiesJS: properties.map((val) => functions.cssToJs(val, false)),\n}\n","import arrays from './arrays'\nimport functions from './functions'\n\nexport const properties = arrays.properties\nexport const propertiesCSS = arrays.propertiesCSS\nexport const propertiesJS = arrays.propertiesJS\nexport const cssToJs = functions.cssToJs\nexport const isAnimatable = functions.isAnimatable\n"],"names":["camelCase","input","options","Array","isArray","TypeError","Object","assign","pascalCase","map","x","trim","filter","length","join","toUpperCase","toLowerCase","string","isLastCharLower","isLastCharUpper","isLastLastCharUpper","i","character","test","slice","preserveCamelCase","replace","_","p1","m","charAt","value","webAnimationsAPI","property","camelcase","substr","properties","includes","prop","val","functions","propertiesCSS","propertiesJS","arrays","cssToJs","isAnimatable"],"mappings":";8MAAe,CACb,MACA,kBACA,aACA,mBACA,sBACA,kBACA,SACA,gBACA,sBACA,4BACA,6BACA,sBACA,eACA,wBACA,0BACA,sBACA,qBACA,qBACA,cACA,oBACA,oBACA,gBACA,eACA,qBACA,qBACA,0BACA,4BACA,aACA,mBACA,yBACA,0BACA,mBACA,eACA,SACA,aACA,cACA,OACA,YACA,QACA,eACA,aACA,cACA,oBACA,oBACA,eACA,UACA,SACA,OACA,aACA,YACA,cACA,OACA,YACA,mBACA,eACA,0BACA,cACA,MACA,kBACA,WACA,eACA,wBACA,qBACA,SACA,QACA,cACA,kBACA,oBACA,eACA,mBACA,qBACA,OACA,iBACA,aACA,cACA,SACA,gBACA,cACA,eACA,aACA,OACA,cACA,gBACA,YACA,aACA,YACA,YACA,aACA,YACA,kBACA,SACA,gBACA,kBACA,cACA,kBACA,gBACA,UACA,QACA,UACA,gBACA,iBACA,gBACA,UACA,iBACA,eACA,gBACA,cACA,cACA,qBACA,QACA,SACA,UACA,QACA,gBACA,sBACA,0BACA,4BACA,uBACA,uBACA,2BACA,6BACA,qBACA,sBACA,oBACA,iBACA,uBACA,2BACA,6BACA,wBACA,wBACA,4BACA,8BACA,sBACA,uBACA,qBACA,yBACA,0BACA,kBACA,wBACA,eACA,gBACA,WACA,kBACA,wBACA,4BACA,gBACA,sBACA,cACA,cACA,wBACA,MACA,YACA,mBACA,YACA,iBACA,aACA,QACA,eACA,UACA,QC9JF,MA6BMA,EAAY,CAACC,EAAOC,KACzB,GAAuB,iBAAVD,IAAsBE,MAAMC,QAAQH,GAChD,MAAM,IAAII,UAAU,gDAGrBH,EAAUI,OAAOC,OAAO,CACvBC,YAAY,GACVN,GAYH,OAAqB,KAPpBD,EADGE,MAAMC,QAAQH,GACTA,EAAMQ,IAAIC,GAAKA,EAAEC,QACvBC,OAAOF,GAAKA,EAAEG,QACdC,KAAK,KAECb,EAAMU,QAGLE,OACF,GAGa,IAAjBZ,EAAMY,OACFX,EAAQM,WAAaP,EAAMc,cAAgBd,EAAMe,eAGpCf,IAAUA,EAAMe,gBAGpCf,EA3DwBgB,CAAAA,IACzB,IAAIC,GAAkB,EAClBC,GAAkB,EAClBC,GAAsB,EAE1B,IAAK,IAAIC,EAAI,EAAGA,EAAIJ,EAAOJ,OAAQQ,IAAK,CACvC,MAAMC,EAAYL,EAAOI,GAErBH,GAAmB,WAAWK,KAAKD,IAAcA,EAAUP,gBAAkBO,GAChFL,EAASA,EAAOO,MAAM,EAAGH,GAAK,IAAMJ,EAAOO,MAAMH,GACjDH,GAAkB,EAClBE,EAAsBD,EACtBA,GAAkB,EAClBE,KACUF,GAAmBC,GAAuB,WAAWG,KAAKD,IAAcA,EAAUN,gBAAkBM,GAC9GL,EAASA,EAAOO,MAAM,EAAGH,EAAI,GAAK,IAAMJ,EAAOO,MAAMH,EAAI,GACzDD,EAAsBD,EACtBA,GAAkB,EAClBD,GAAkB,IAElBA,EAAkBI,EAAUN,gBAAkBM,GAAaA,EAAUP,gBAAkBO,EACvFF,EAAsBD,EACtBA,EAAkBG,EAAUP,gBAAkBO,GAAaA,EAAUN,gBAAkBM,GAIzF,OAAOL,GAiCEQ,CAAkBxB,IAG3BA,EAAQA,EACNyB,QAAQ,YAAa,IACrBV,cACAU,QAAQ,kBAAmB,CAACC,EAAGC,IAAOA,EAAGb,eACzCW,QAAQ,aAAcG,GAAKA,EAAEd,eA5BXL,EA8BDT,EA9BMC,EAAQM,WAAaE,EAAEoB,OAAO,GAAGf,cAAgBL,EAAEc,MAAM,GAAKd,GAAnEA,IAAAA,GAiCrB,MAAiBV,IAEQA,oBCvEd,CAAC+B,EAAOC,GAAmB,KAClC,IAAIC,EAAWF,EAAMf,cAMrB,OALIgB,IACe,UAAbC,GAAqC,WAAbA,IAC1BA,EAAW,OAASA,IAGjBC,EAAUD,MAGJF,IACb,IAAIE,EAAWF,EAAMf,cAIrB,GAH8B,QAA1BiB,EAASE,OAAO,EAAG,KACrBF,EAAWA,EAASE,OAAO,IAEzBC,EAAWC,SAASJ,GACtB,OAAO,EAETA,EAAWA,EAASP,QAAQ,KAAM,IAClC,IAAK,MAAMY,KAAQF,EACjB,GAAIH,IAAaK,EAAKZ,QAAQ,KAAM,IAClC,OAAO,EAGX,OAAO,KCzBI,CACbU,WAAYA,EAAW3B,IAAK8B,GAAQC,EAAkBD,IACtDE,cAAeL,EACfM,aAAcN,EAAW3B,IAAK8B,GAAQC,EAAkBD,GAAK,WCHlDH,EAAaO,EAAOP,WACpBK,EAAgBE,EAAOF,cACvBC,EAAeC,EAAOD,aACtBE,EAAUJ,EACVK,EAAeL"}