{"version":3,"file":"animatable.js","sources":["../node_modules/lodash.isnumber/index.js","../node_modules/lodash.isplainobject/index.js","../node_modules/lodash.isstring/index.js","../node_modules/css-tree-animatable/lib/common/List.js","../node_modules/css-tree-animatable/lib/utils/createCustomError.js","../node_modules/css-tree-animatable/lib/common/SyntaxError.js","../node_modules/css-tree-animatable/lib/tokenizer/const.js","../node_modules/css-tree-animatable/lib/tokenizer/char-code-definitions.js","../node_modules/css-tree-animatable/lib/tokenizer/utils.js","../node_modules/css-tree-animatable/lib/common/TokenStream.js","../node_modules/css-tree-animatable/lib/definition-syntax/generate.js","../node_modules/css-tree-animatable/lib/lexer/error.js","../node_modules/css-tree-animatable/lib/utils/names.js","../node_modules/css-tree-animatable/lib/common/adopt-buffer.js","../node_modules/css-tree-animatable/lib/tokenizer/index.js","../node_modules/css-tree-animatable/lib/lexer/generic-an-plus-b.js","../node_modules/css-tree-animatable/lib/lexer/generic-urange.js","../node_modules/css-tree-animatable/lib/lexer/generic.js","../node_modules/css-tree-animatable/lib/definition-syntax/SyntaxError.js","../node_modules/css-tree-animatable/lib/definition-syntax/tokenizer.js","../node_modules/css-tree-animatable/lib/definition-syntax/parse.js","../node_modules/css-tree-animatable/lib/definition-syntax/walk.js","../node_modules/css-tree-animatable/lib/lexer/prepare-tokens.js","../node_modules/css-tree-animatable/lib/lexer/match-graph.js","../node_modules/css-tree-animatable/lib/lexer/match.js","../node_modules/css-tree-animatable/lib/lexer/trace.js","../node_modules/css-tree-animatable/lib/lexer/search.js","../node_modules/css-tree-animatable/lib/lexer/structure.js","../node_modules/css-tree-animatable/lib/lexer/Lexer.js","../node_modules/css-tree-animatable/lib/definition-syntax/index.js","../node_modules/css-tree-animatable/lib/common/OffsetToLocation.js","../node_modules/css-tree-animatable/lib/parser/sequence.js","../node_modules/css-tree-animatable/lib/parser/create.js","../node_modules/css-tree-animatable/lib/generator/create.js","../node_modules/css-tree-animatable/lib/convertor/create.js","../node_modules/css-tree-animatable/lib/walker/create.js","../node_modules/css-tree-animatable/lib/utils/clone.js","../node_modules/css-tree-animatable/lib/syntax/config/mix.js","../node_modules/css-tree-animatable/lib/syntax/create.js","../node_modules/css-tree-animatable/data/index.js","../node_modules/css-tree-animatable/lib/syntax/node/AnPlusB.js","../node_modules/css-tree-animatable/lib/syntax/node/Raw.js","../node_modules/css-tree-animatable/lib/syntax/node/Atrule.js","../node_modules/css-tree-animatable/lib/syntax/node/AtrulePrelude.js","../node_modules/css-tree-animatable/lib/syntax/node/AttributeSelector.js","../node_modules/css-tree-animatable/lib/syntax/node/Block.js","../node_modules/css-tree-animatable/lib/syntax/node/Brackets.js","../node_modules/css-tree-animatable/lib/syntax/node/CDC.js","../node_modules/css-tree-animatable/lib/syntax/node/CDO.js","../node_modules/css-tree-animatable/lib/syntax/node/ClassSelector.js","../node_modules/css-tree-animatable/lib/syntax/node/Combinator.js","../node_modules/css-tree-animatable/lib/syntax/node/Comment.js","../node_modules/css-tree-animatable/lib/syntax/node/Declaration.js","../node_modules/css-tree-animatable/lib/syntax/node/DeclarationList.js","../node_modules/css-tree-animatable/lib/syntax/node/Dimension.js","../node_modules/css-tree-animatable/lib/syntax/node/Function.js","../node_modules/css-tree-animatable/lib/syntax/node/HexColor.js","../node_modules/css-tree-animatable/lib/syntax/node/Identifier.js","../node_modules/css-tree-animatable/lib/syntax/node/IdSelector.js","../node_modules/css-tree-animatable/lib/syntax/node/MediaFeature.js","../node_modules/css-tree-animatable/lib/syntax/node/MediaQuery.js","../node_modules/css-tree-animatable/lib/syntax/node/MediaQueryList.js","../node_modules/css-tree-animatable/lib/syntax/node/Number.js","../node_modules/css-tree-animatable/lib/syntax/node/Operator.js","../node_modules/css-tree-animatable/lib/syntax/node/Parentheses.js","../node_modules/css-tree-animatable/lib/syntax/node/Percentage.js","../node_modules/css-tree-animatable/lib/syntax/node/PseudoClassSelector.js","../node_modules/css-tree-animatable/lib/syntax/node/PseudoElementSelector.js","../node_modules/css-tree-animatable/lib/syntax/node/Ratio.js","../node_modules/css-tree-animatable/lib/syntax/node/Rule.js","../node_modules/css-tree-animatable/lib/syntax/node/SelectorList.js","../node_modules/css-tree-animatable/lib/syntax/node/String.js","../node_modules/css-tree-animatable/lib/syntax/node/StyleSheet.js","../node_modules/css-tree-animatable/lib/syntax/node/TypeSelector.js","../node_modules/css-tree-animatable/lib/syntax/node/UnicodeRange.js","../node_modules/css-tree-animatable/lib/syntax/node/Url.js","../node_modules/css-tree-animatable/lib/syntax/node/WhiteSpace.js","../node_modules/css-tree-animatable/lib/syntax/node/index.js","../node_modules/css-tree-animatable/lib/syntax/node/Nth.js","../node_modules/css-tree-animatable/lib/syntax/node/Selector.js","../node_modules/css-tree-animatable/lib/syntax/node/Value.js","../node_modules/css-tree-animatable/lib/syntax/config/lexer.js","../node_modules/css-tree-animatable/lib/syntax/scope/default.js","../node_modules/css-tree-animatable/lib/syntax/scope/atrulePrelude.js","../node_modules/css-tree-animatable/lib/syntax/scope/selector.js","../node_modules/css-tree-animatable/lib/syntax/function/element.js","../node_modules/css-tree-animatable/lib/syntax/function/var.js","../node_modules/css-tree-animatable/lib/syntax/scope/index.js","../node_modules/css-tree-animatable/lib/syntax/scope/value.js","../node_modules/css-tree-animatable/lib/syntax/function/expression.js","../node_modules/css-tree-animatable/lib/syntax/atrule/import.js","../node_modules/css-tree-animatable/lib/syntax/atrule/supports.js","../node_modules/css-tree-animatable/lib/syntax/atrule/index.js","../node_modules/css-tree-animatable/lib/syntax/atrule/font-face.js","../node_modules/css-tree-animatable/lib/syntax/atrule/media.js","../node_modules/css-tree-animatable/lib/syntax/atrule/page.js","../node_modules/css-tree-animatable/lib/syntax/pseudo/common/selectorList.js","../node_modules/css-tree-animatable/lib/syntax/pseudo/matches.js","../node_modules/css-tree-animatable/lib/syntax/pseudo/not.js","../node_modules/css-tree-animatable/lib/syntax/pseudo/common/nthWithOfClause.js","../node_modules/css-tree-animatable/lib/syntax/pseudo/nth-child.js","../node_modules/css-tree-animatable/lib/syntax/pseudo/nth-last-child.js","../node_modules/css-tree-animatable/lib/syntax/pseudo/common/nth.js","../node_modules/css-tree-animatable/lib/syntax/pseudo/nth-last-of-type.js","../node_modules/css-tree-animatable/lib/syntax/pseudo/nth-of-type.js","../node_modules/css-tree-animatable/lib/syntax/pseudo/slotted.js","../node_modules/css-tree-animatable/lib/syntax/config/parser.js","../node_modules/css-tree-animatable/lib/syntax/pseudo/index.js","../node_modules/css-tree-animatable/lib/syntax/pseudo/dir.js","../node_modules/css-tree-animatable/lib/syntax/pseudo/has.js","../node_modules/css-tree-animatable/lib/syntax/pseudo/lang.js","../node_modules/css-tree-animatable/lib/syntax/config/walker.js","../node_modules/css-tree-animatable/lib/syntax/index.js","../node_modules/css-tree-animatable/lib/index.js","../src/functions.js","../src/arrays.js","../src/index.js"],"sourcesContent":["/**\n * lodash 3.0.3 (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright 2012-2016 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2016 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/** `Object#toString` result references. */\nvar numberTag = '[object Number]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Number` primitive or object.\n *\n * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are classified\n * as numbers, use the `_.isFinite` method.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isNumber(3);\n * // => true\n *\n * _.isNumber(Number.MIN_VALUE);\n * // => true\n *\n * _.isNumber(Infinity);\n * // => true\n *\n * _.isNumber('3');\n * // => false\n */\nfunction isNumber(value) {\n  return typeof value == 'number' ||\n    (isObjectLike(value) && objectToString.call(value) == numberTag);\n}\n\nmodule.exports = isNumber;\n","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** `Object#toString` result references. */\nvar objectTag = '[object Object]';\n\n/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  var result = false;\n  if (value != null && typeof value.toString != 'function') {\n    try {\n      result = !!(value + '');\n    } catch (e) {}\n  }\n  return result;\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar getPrototype = overArg(Object.getPrototypeOf, Object);\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!isObjectLike(value) ||\n      objectToString.call(value) != objectTag || isHostObject(value)) {\n    return false;\n  }\n  var proto = getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return (typeof Ctor == 'function' &&\n    Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString);\n}\n\nmodule.exports = isPlainObject;\n","/**\n * lodash 4.0.1 (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright 2012-2016 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2016 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/** `Object#toString` result references. */\nvar stringTag = '[object String]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @type Function\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `String` primitive or object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isString('abc');\n * // => true\n *\n * _.isString(1);\n * // => false\n */\nfunction isString(value) {\n  return typeof value == 'string' ||\n    (!isArray(value) && isObjectLike(value) && objectToString.call(value) == stringTag);\n}\n\nmodule.exports = isString;\n","//\r\n//                              list\r\n//                            ┌──────┐\r\n//             ┌──────────────┼─head │\r\n//             │              │ tail─┼──────────────┐\r\n//             │              └──────┘              │\r\n//             ▼                                    ▼\r\n//            item        item        item        item\r\n//          ┌──────┐    ┌──────┐    ┌──────┐    ┌──────┐\r\n//  null ◀──┼─prev │◀───┼─prev │◀───┼─prev │◀───┼─prev │\r\n//          │ next─┼───▶│ next─┼───▶│ next─┼───▶│ next─┼──▶ null\r\n//          ├──────┤    ├──────┤    ├──────┤    ├──────┤\r\n//          │ data │    │ data │    │ data │    │ data │\r\n//          └──────┘    └──────┘    └──────┘    └──────┘\r\n//\r\n\r\nfunction createItem(data) {\r\n    return {\r\n        prev: null,\r\n        next: null,\r\n        data: data\r\n    };\r\n}\r\n\r\nfunction allocateCursor(node, prev, next) {\r\n    var cursor;\r\n\r\n    if (cursors !== null) {\r\n        cursor = cursors;\r\n        cursors = cursors.cursor;\r\n        cursor.prev = prev;\r\n        cursor.next = next;\r\n        cursor.cursor = node.cursor;\r\n    } else {\r\n        cursor = {\r\n            prev: prev,\r\n            next: next,\r\n            cursor: node.cursor\r\n        };\r\n    }\r\n\r\n    node.cursor = cursor;\r\n\r\n    return cursor;\r\n}\r\n\r\nfunction releaseCursor(node) {\r\n    var cursor = node.cursor;\r\n\r\n    node.cursor = cursor.cursor;\r\n    cursor.prev = null;\r\n    cursor.next = null;\r\n    cursor.cursor = cursors;\r\n    cursors = cursor;\r\n}\r\n\r\nvar cursors = null;\r\nvar List = function() {\r\n    this.cursor = null;\r\n    this.head = null;\r\n    this.tail = null;\r\n};\r\n\r\nList.createItem = createItem;\r\nList.prototype.createItem = createItem;\r\n\r\nList.prototype.updateCursors = function(prevOld, prevNew, nextOld, nextNew) {\r\n    var cursor = this.cursor;\r\n\r\n    while (cursor !== null) {\r\n        if (cursor.prev === prevOld) {\r\n            cursor.prev = prevNew;\r\n        }\r\n\r\n        if (cursor.next === nextOld) {\r\n            cursor.next = nextNew;\r\n        }\r\n\r\n        cursor = cursor.cursor;\r\n    }\r\n};\r\n\r\nList.prototype.getSize = function() {\r\n    var size = 0;\r\n    var cursor = this.head;\r\n\r\n    while (cursor) {\r\n        size++;\r\n        cursor = cursor.next;\r\n    }\r\n\r\n    return size;\r\n};\r\n\r\nList.prototype.fromArray = function(array) {\r\n    var cursor = null;\r\n\r\n    this.head = null;\r\n\r\n    for (var i = 0; i < array.length; i++) {\r\n        var item = createItem(array[i]);\r\n\r\n        if (cursor !== null) {\r\n            cursor.next = item;\r\n        } else {\r\n            this.head = item;\r\n        }\r\n\r\n        item.prev = cursor;\r\n        cursor = item;\r\n    }\r\n\r\n    this.tail = cursor;\r\n\r\n    return this;\r\n};\r\n\r\nList.prototype.toArray = function() {\r\n    var cursor = this.head;\r\n    var result = [];\r\n\r\n    while (cursor) {\r\n        result.push(cursor.data);\r\n        cursor = cursor.next;\r\n    }\r\n\r\n    return result;\r\n};\r\n\r\nList.prototype.toJSON = List.prototype.toArray;\r\n\r\nList.prototype.isEmpty = function() {\r\n    return this.head === null;\r\n};\r\n\r\nList.prototype.first = function() {\r\n    return this.head && this.head.data;\r\n};\r\n\r\nList.prototype.last = function() {\r\n    return this.tail && this.tail.data;\r\n};\r\n\r\nList.prototype.each = function(fn, context) {\r\n    var item;\r\n\r\n    if (context === undefined) {\r\n        context = this;\r\n    }\r\n\r\n    // push cursor\r\n    var cursor = allocateCursor(this, null, this.head);\r\n\r\n    while (cursor.next !== null) {\r\n        item = cursor.next;\r\n        cursor.next = item.next;\r\n\r\n        fn.call(context, item.data, item, this);\r\n    }\r\n\r\n    // pop cursor\r\n    releaseCursor(this);\r\n};\r\n\r\nList.prototype.forEach = List.prototype.each;\r\n\r\nList.prototype.eachRight = function(fn, context) {\r\n    var item;\r\n\r\n    if (context === undefined) {\r\n        context = this;\r\n    }\r\n\r\n    // push cursor\r\n    var cursor = allocateCursor(this, this.tail, null);\r\n\r\n    while (cursor.prev !== null) {\r\n        item = cursor.prev;\r\n        cursor.prev = item.prev;\r\n\r\n        fn.call(context, item.data, item, this);\r\n    }\r\n\r\n    // pop cursor\r\n    releaseCursor(this);\r\n};\r\n\r\nList.prototype.forEachRight = List.prototype.eachRight;\r\n\r\nList.prototype.nextUntil = function(start, fn, context) {\r\n    if (start === null) {\r\n        return;\r\n    }\r\n\r\n    var item;\r\n\r\n    if (context === undefined) {\r\n        context = this;\r\n    }\r\n\r\n    // push cursor\r\n    var cursor = allocateCursor(this, null, start);\r\n\r\n    while (cursor.next !== null) {\r\n        item = cursor.next;\r\n        cursor.next = item.next;\r\n\r\n        if (fn.call(context, item.data, item, this)) {\r\n            break;\r\n        }\r\n    }\r\n\r\n    // pop cursor\r\n    releaseCursor(this);\r\n};\r\n\r\nList.prototype.prevUntil = function(start, fn, context) {\r\n    if (start === null) {\r\n        return;\r\n    }\r\n\r\n    var item;\r\n\r\n    if (context === undefined) {\r\n        context = this;\r\n    }\r\n\r\n    // push cursor\r\n    var cursor = allocateCursor(this, start, null);\r\n\r\n    while (cursor.prev !== null) {\r\n        item = cursor.prev;\r\n        cursor.prev = item.prev;\r\n\r\n        if (fn.call(context, item.data, item, this)) {\r\n            break;\r\n        }\r\n    }\r\n\r\n    // pop cursor\r\n    releaseCursor(this);\r\n};\r\n\r\nList.prototype.some = function(fn, context) {\r\n    var cursor = this.head;\r\n\r\n    if (context === undefined) {\r\n        context = this;\r\n    }\r\n\r\n    while (cursor !== null) {\r\n        if (fn.call(context, cursor.data, cursor, this)) {\r\n            return true;\r\n        }\r\n\r\n        cursor = cursor.next;\r\n    }\r\n\r\n    return false;\r\n};\r\n\r\nList.prototype.map = function(fn, context) {\r\n    var result = new List();\r\n    var cursor = this.head;\r\n\r\n    if (context === undefined) {\r\n        context = this;\r\n    }\r\n\r\n    while (cursor !== null) {\r\n        result.appendData(fn.call(context, cursor.data, cursor, this));\r\n        cursor = cursor.next;\r\n    }\r\n\r\n    return result;\r\n};\r\n\r\nList.prototype.filter = function(fn, context) {\r\n    var result = new List();\r\n    var cursor = this.head;\r\n\r\n    if (context === undefined) {\r\n        context = this;\r\n    }\r\n\r\n    while (cursor !== null) {\r\n        if (fn.call(context, cursor.data, cursor, this)) {\r\n            result.appendData(cursor.data);\r\n        }\r\n        cursor = cursor.next;\r\n    }\r\n\r\n    return result;\r\n};\r\n\r\nList.prototype.clear = function() {\r\n    this.head = null;\r\n    this.tail = null;\r\n};\r\n\r\nList.prototype.copy = function() {\r\n    var result = new List();\r\n    var cursor = this.head;\r\n\r\n    while (cursor !== null) {\r\n        result.insert(createItem(cursor.data));\r\n        cursor = cursor.next;\r\n    }\r\n\r\n    return result;\r\n};\r\n\r\nList.prototype.prepend = function(item) {\r\n    //      head\r\n    //    ^\r\n    // item\r\n    this.updateCursors(null, item, this.head, item);\r\n\r\n    // insert to the beginning of the list\r\n    if (this.head !== null) {\r\n        // new item <- first item\r\n        this.head.prev = item;\r\n\r\n        // new item -> first item\r\n        item.next = this.head;\r\n    } else {\r\n        // if list has no head, then it also has no tail\r\n        // in this case tail points to the new item\r\n        this.tail = item;\r\n    }\r\n\r\n    // head always points to new item\r\n    this.head = item;\r\n\r\n    return this;\r\n};\r\n\r\nList.prototype.prependData = function(data) {\r\n    return this.prepend(createItem(data));\r\n};\r\n\r\nList.prototype.append = function(item) {\r\n    return this.insert(item);\r\n};\r\n\r\nList.prototype.appendData = function(data) {\r\n    return this.insert(createItem(data));\r\n};\r\n\r\nList.prototype.insert = function(item, before) {\r\n    if (before !== undefined && before !== null) {\r\n        // prev   before\r\n        //      ^\r\n        //     item\r\n        this.updateCursors(before.prev, item, before, item);\r\n\r\n        if (before.prev === null) {\r\n            // insert to the beginning of list\r\n            if (this.head !== before) {\r\n                throw new Error('before doesn\\'t belong to list');\r\n            }\r\n\r\n            // since head points to before therefore list doesn't empty\r\n            // no need to check tail\r\n            this.head = item;\r\n            before.prev = item;\r\n            item.next = before;\r\n\r\n            this.updateCursors(null, item);\r\n        } else {\r\n\r\n            // insert between two items\r\n            before.prev.next = item;\r\n            item.prev = before.prev;\r\n\r\n            before.prev = item;\r\n            item.next = before;\r\n        }\r\n    } else {\r\n        // tail\r\n        //      ^\r\n        //      item\r\n        this.updateCursors(this.tail, item, null, item);\r\n\r\n        // insert to the ending of the list\r\n        if (this.tail !== null) {\r\n            // last item -> new item\r\n            this.tail.next = item;\r\n\r\n            // last item <- new item\r\n            item.prev = this.tail;\r\n        } else {\r\n            // if list has no tail, then it also has no head\r\n            // in this case head points to new item\r\n            this.head = item;\r\n        }\r\n\r\n        // tail always points to new item\r\n        this.tail = item;\r\n    }\r\n\r\n    return this;\r\n};\r\n\r\nList.prototype.insertData = function(data, before) {\r\n    return this.insert(createItem(data), before);\r\n};\r\n\r\nList.prototype.remove = function(item) {\r\n    //      item\r\n    //       ^\r\n    // prev     next\r\n    this.updateCursors(item, item.prev, item, item.next);\r\n\r\n    if (item.prev !== null) {\r\n        item.prev.next = item.next;\r\n    } else {\r\n        if (this.head !== item) {\r\n            throw new Error('item doesn\\'t belong to list');\r\n        }\r\n\r\n        this.head = item.next;\r\n    }\r\n\r\n    if (item.next !== null) {\r\n        item.next.prev = item.prev;\r\n    } else {\r\n        if (this.tail !== item) {\r\n            throw new Error('item doesn\\'t belong to list');\r\n        }\r\n\r\n        this.tail = item.prev;\r\n    }\r\n\r\n    item.prev = null;\r\n    item.next = null;\r\n\r\n    return item;\r\n};\r\n\r\nList.prototype.push = function(data) {\r\n    this.insert(createItem(data));\r\n};\r\n\r\nList.prototype.pop = function() {\r\n    if (this.tail !== null) {\r\n        return this.remove(this.tail);\r\n    }\r\n};\r\n\r\nList.prototype.unshift = function(data) {\r\n    this.prepend(createItem(data));\r\n};\r\n\r\nList.prototype.shift = function() {\r\n    if (this.head !== null) {\r\n        return this.remove(this.head);\r\n    }\r\n};\r\n\r\nList.prototype.prependList = function(list) {\r\n    return this.insertList(list, this.head);\r\n};\r\n\r\nList.prototype.appendList = function(list) {\r\n    return this.insertList(list);\r\n};\r\n\r\nList.prototype.insertList = function(list, before) {\r\n    // ignore empty lists\r\n    if (list.head === null) {\r\n        return this;\r\n    }\r\n\r\n    if (before !== undefined && before !== null) {\r\n        this.updateCursors(before.prev, list.tail, before, list.head);\r\n\r\n        // insert in the middle of dist list\r\n        if (before.prev !== null) {\r\n            // before.prev <-> list.head\r\n            before.prev.next = list.head;\r\n            list.head.prev = before.prev;\r\n        } else {\r\n            this.head = list.head;\r\n        }\r\n\r\n        before.prev = list.tail;\r\n        list.tail.next = before;\r\n    } else {\r\n        this.updateCursors(this.tail, list.tail, null, list.head);\r\n\r\n        // insert to end of the list\r\n        if (this.tail !== null) {\r\n            // if destination list has a tail, then it also has a head,\r\n            // but head doesn't change\r\n\r\n            // dest tail -> source head\r\n            this.tail.next = list.head;\r\n\r\n            // dest tail <- source head\r\n            list.head.prev = this.tail;\r\n        } else {\r\n            // if list has no a tail, then it also has no a head\r\n            // in this case points head to new item\r\n            this.head = list.head;\r\n        }\r\n\r\n        // tail always start point to new item\r\n        this.tail = list.tail;\r\n    }\r\n\r\n    list.head = null;\r\n    list.tail = null;\r\n\r\n    return this;\r\n};\r\n\r\nList.prototype.replace = function(oldItem, newItemOrList) {\r\n    if ('head' in newItemOrList) {\r\n        this.insertList(newItemOrList, oldItem);\r\n    } else {\r\n        this.insert(newItemOrList, oldItem);\r\n    }\r\n\r\n    this.remove(oldItem);\r\n};\r\n\r\nmodule.exports = List;\r\n","module.exports = function createCustomError(name, message) {\r\n    // use Object.create(), because some VMs prevent setting line/column otherwise\r\n    // (iOS Safari 10 even throws an exception)\r\n    var error = Object.create(SyntaxError.prototype);\r\n    var errorStack = new Error();\r\n\r\n    error.name = name;\r\n    error.message = message;\r\n\r\n    Object.defineProperty(error, 'stack', {\r\n        get: function() {\r\n            return (errorStack.stack || '').replace(/^(.+\\n){1,3}/, name + ': ' + message + '\\n');\r\n        }\r\n    });\r\n\r\n    return error;\r\n};\r\n","var createCustomError = require('../utils/createCustomError');\r\nvar MAX_LINE_LENGTH = 100;\r\nvar OFFSET_CORRECTION = 60;\r\nvar TAB_REPLACEMENT = '    ';\r\n\r\nfunction sourceFragment(error, extraLines) {\r\n    function processLines(start, end) {\r\n        return lines.slice(start, end).map(function(line, idx) {\r\n            var num = String(start + idx + 1);\r\n\r\n            while (num.length < maxNumLength) {\r\n                num = ' ' + num;\r\n            }\r\n\r\n            return num + ' |' + line;\r\n        }).join('\\n');\r\n    }\r\n\r\n    var lines = error.source.split(/\\r\\n?|\\n|\\f/);\r\n    var line = error.line;\r\n    var column = error.column;\r\n    var startLine = Math.max(1, line - extraLines) - 1;\r\n    var endLine = Math.min(line + extraLines, lines.length + 1);\r\n    var maxNumLength = Math.max(4, String(endLine).length) + 1;\r\n    var cutLeft = 0;\r\n\r\n    // column correction according to replaced tab before column\r\n    column += (TAB_REPLACEMENT.length - 1) * (lines[line - 1].substr(0, column - 1).match(/\\t/g) || []).length;\r\n\r\n    if (column > MAX_LINE_LENGTH) {\r\n        cutLeft = column - OFFSET_CORRECTION + 3;\r\n        column = OFFSET_CORRECTION - 2;\r\n    }\r\n\r\n    for (var i = startLine; i <= endLine; i++) {\r\n        if (i >= 0 && i < lines.length) {\r\n            lines[i] = lines[i].replace(/\\t/g, TAB_REPLACEMENT);\r\n            lines[i] =\r\n                (cutLeft > 0 && lines[i].length > cutLeft ? '\\u2026' : '') +\r\n                lines[i].substr(cutLeft, MAX_LINE_LENGTH - 2) +\r\n                (lines[i].length > cutLeft + MAX_LINE_LENGTH - 1 ? '\\u2026' : '');\r\n        }\r\n    }\r\n\r\n    return [\r\n        processLines(startLine, line),\r\n        new Array(column + maxNumLength + 2).join('-') + '^',\r\n        processLines(line, endLine)\r\n    ].filter(Boolean).join('\\n');\r\n}\r\n\r\nvar SyntaxError = function(message, source, offset, line, column) {\r\n    var error = createCustomError('SyntaxError', message);\r\n\r\n    error.source = source;\r\n    error.offset = offset;\r\n    error.line = line;\r\n    error.column = column;\r\n\r\n    error.sourceFragment = function(extraLines) {\r\n        return sourceFragment(error, isNaN(extraLines) ? 0 : extraLines);\r\n    };\r\n    Object.defineProperty(error, 'formattedMessage', {\r\n        get: function() {\r\n            return (\r\n                'Parse error: ' + error.message + '\\n' +\r\n                sourceFragment(error, 2)\r\n            );\r\n        }\r\n    });\r\n\r\n    // for backward capability\r\n    error.parseError = {\r\n        offset: offset,\r\n        line: line,\r\n        column: column\r\n    };\r\n\r\n    return error;\r\n};\r\n\r\nmodule.exports = SyntaxError;\r\n","// CSS Syntax Module Level 3\r\n// https://www.w3.org/TR/css-syntax-3/\r\nvar TYPE = {\r\n    EOF: 0,                 // <EOF-token>\r\n    Ident: 1,               // <ident-token>\r\n    Function: 2,            // <function-token>\r\n    AtKeyword: 3,           // <at-keyword-token>\r\n    Hash: 4,                // <hash-token>\r\n    String: 5,              // <string-token>\r\n    BadString: 6,           // <bad-string-token>\r\n    Url: 7,                 // <url-token>\r\n    BadUrl: 8,              // <bad-url-token>\r\n    Delim: 9,               // <delim-token>\r\n    Number: 10,             // <number-token>\r\n    Percentage: 11,         // <percentage-token>\r\n    Dimension: 12,          // <dimension-token>\r\n    WhiteSpace: 13,         // <whitespace-token>\r\n    CDO: 14,                // <CDO-token>\r\n    CDC: 15,                // <CDC-token>\r\n    Colon: 16,              // <colon-token>     :\r\n    Semicolon: 17,          // <semicolon-token> ;\r\n    Comma: 18,              // <comma-token>     ,\r\n    LeftSquareBracket: 19,  // <[-token>\r\n    RightSquareBracket: 20, // <]-token>\r\n    LeftParenthesis: 21,    // <(-token>\r\n    RightParenthesis: 22,   // <)-token>\r\n    LeftCurlyBracket: 23,   // <{-token>\r\n    RightCurlyBracket: 24,  // <}-token>\r\n    Comment: 25\r\n};\r\n\r\nvar NAME = Object.keys(TYPE).reduce(function(result, key) {\r\n    result[TYPE[key]] = key;\r\n    return result;\r\n}, {});\r\n\r\nmodule.exports = {\r\n    TYPE: TYPE,\r\n    NAME: NAME\r\n};\r\n","var EOF = 0;\r\n\r\n// https://drafts.csswg.org/css-syntax-3/\r\n// § 4.2. Definitions\r\n\r\n// digit\r\n// A code point between U+0030 DIGIT ZERO (0) and U+0039 DIGIT NINE (9).\r\nfunction isDigit(code) {\r\n    return code >= 0x0030 && code <= 0x0039;\r\n}\r\n\r\n// hex digit\r\n// A digit, or a code point between U+0041 LATIN CAPITAL LETTER A (A) and U+0046 LATIN CAPITAL LETTER F (F),\r\n// or a code point between U+0061 LATIN SMALL LETTER A (a) and U+0066 LATIN SMALL LETTER F (f).\r\nfunction isHexDigit(code) {\r\n    return (\r\n        isDigit(code) || // 0 .. 9\r\n        (code >= 0x0041 && code <= 0x0046) || // A .. F\r\n        (code >= 0x0061 && code <= 0x0066)    // a .. f\r\n    );\r\n}\r\n\r\n// uppercase letter\r\n// A code point between U+0041 LATIN CAPITAL LETTER A (A) and U+005A LATIN CAPITAL LETTER Z (Z).\r\nfunction isUppercaseLetter(code) {\r\n    return code >= 0x0041 && code <= 0x005A;\r\n}\r\n\r\n// lowercase letter\r\n// A code point between U+0061 LATIN SMALL LETTER A (a) and U+007A LATIN SMALL LETTER Z (z).\r\nfunction isLowercaseLetter(code) {\r\n    return code >= 0x0061 && code <= 0x007A;\r\n}\r\n\r\n// letter\r\n// An uppercase letter or a lowercase letter.\r\nfunction isLetter(code) {\r\n    return isUppercaseLetter(code) || isLowercaseLetter(code);\r\n}\r\n\r\n// non-ASCII code point\r\n// A code point with a value equal to or greater than U+0080 <control>.\r\nfunction isNonAscii(code) {\r\n    return code >= 0x0080;\r\n}\r\n\r\n// name-start code point\r\n// A letter, a non-ASCII code point, or U+005F LOW LINE (_).\r\nfunction isNameStart(code) {\r\n    return isLetter(code) || isNonAscii(code) || code === 0x005F;\r\n}\r\n\r\n// name code point\r\n// A name-start code point, a digit, or U+002D HYPHEN-MINUS (-).\r\nfunction isName(code) {\r\n    return isNameStart(code) || isDigit(code) || code === 0x002D;\r\n}\r\n\r\n// non-printable code point\r\n// A code point between U+0000 NULL and U+0008 BACKSPACE, or U+000B LINE TABULATION,\r\n// or a code point between U+000E SHIFT OUT and U+001F INFORMATION SEPARATOR ONE, or U+007F DELETE.\r\nfunction isNonPrintable(code) {\r\n    return (\r\n        (code >= 0x0000 && code <= 0x0008) ||\r\n        (code === 0x000B) ||\r\n        (code >= 0x000E && code <= 0x001F) ||\r\n        (code === 0x007F)\r\n    );\r\n}\r\n\r\n// newline\r\n// U+000A LINE FEED. Note that U+000D CARRIAGE RETURN and U+000C FORM FEED are not included in this definition,\r\n// as they are converted to U+000A LINE FEED during preprocessing.\r\n// TODO: we doesn't do a preprocessing, so check a code point for U+000D CARRIAGE RETURN and U+000C FORM FEED\r\nfunction isNewline(code) {\r\n    return code === 0x000A || code === 0x000D || code === 0x000C;\r\n}\r\n\r\n// whitespace\r\n// A newline, U+0009 CHARACTER TABULATION, or U+0020 SPACE.\r\nfunction isWhiteSpace(code) {\r\n    return isNewline(code) || code === 0x0020 || code === 0x0009;\r\n}\r\n\r\n// § 4.3.8. Check if two code points are a valid escape\r\nfunction isValidEscape(first, second) {\r\n    // If the first code point is not U+005C REVERSE SOLIDUS (\\), return false.\r\n    if (first !== 0x005C) {\r\n        return false;\r\n    }\r\n\r\n    // Otherwise, if the second code point is a newline or EOF, return false.\r\n    if (isNewline(second) || second === EOF) {\r\n        return false;\r\n    }\r\n\r\n    // Otherwise, return true.\r\n    return true;\r\n}\r\n\r\n// § 4.3.9. Check if three code points would start an identifier\r\nfunction isIdentifierStart(first, second, third) {\r\n    // Look at the first code point:\r\n\r\n    // U+002D HYPHEN-MINUS\r\n    if (first === 0x002D) {\r\n        // If the second code point is a name-start code point or a U+002D HYPHEN-MINUS,\r\n        // or the second and third code points are a valid escape, return true. Otherwise, return false.\r\n        return (\r\n            isNameStart(second) ||\r\n            second === 0x002D ||\r\n            isValidEscape(second, third)\r\n        );\r\n    }\r\n\r\n    // name-start code point\r\n    if (isNameStart(first)) {\r\n        // Return true.\r\n        return true;\r\n    }\r\n\r\n    // U+005C REVERSE SOLIDUS (\\)\r\n    if (first === 0x005C) {\r\n        // If the first and second code points are a valid escape, return true. Otherwise, return false.\r\n        return isValidEscape(first, second);\r\n    }\r\n\r\n    // anything else\r\n    // Return false.\r\n    return false;\r\n}\r\n\r\n// § 4.3.10. Check if three code points would start a number\r\nfunction isNumberStart(first, second, third) {\r\n    // Look at the first code point:\r\n\r\n    // U+002B PLUS SIGN (+)\r\n    // U+002D HYPHEN-MINUS (-)\r\n    if (first === 0x002B || first === 0x002D) {\r\n        // If the second code point is a digit, return true.\r\n        if (isDigit(second)) {\r\n            return 2;\r\n        }\r\n\r\n        // Otherwise, if the second code point is a U+002E FULL STOP (.)\r\n        // and the third code point is a digit, return true.\r\n        // Otherwise, return false.\r\n        return second === 0x002E && isDigit(third) ? 3 : 0;\r\n    }\r\n\r\n    // U+002E FULL STOP (.)\r\n    if (first === 0x002E) {\r\n        // If the second code point is a digit, return true. Otherwise, return false.\r\n        return isDigit(second) ? 2 : 0;\r\n    }\r\n\r\n    // digit\r\n    if (isDigit(first)) {\r\n        // Return true.\r\n        return 1;\r\n    }\r\n\r\n    // anything else\r\n    // Return false.\r\n    return 0;\r\n}\r\n\r\n//\r\n// Misc\r\n//\r\n\r\n// detect BOM (https://en.wikipedia.org/wiki/Byte_order_mark)\r\nfunction isBOM(code) {\r\n    // UTF-16BE\r\n    if (code === 0xFEFF) {\r\n        return 1;\r\n    }\r\n\r\n    // UTF-16LE\r\n    if (code === 0xFFFE) {\r\n        return 1;\r\n    }\r\n\r\n    return 0;\r\n}\r\n\r\n// Fast code category\r\n//\r\n// https://drafts.csswg.org/css-syntax/#tokenizer-definitions\r\n// > non-ASCII code point\r\n// >   A code point with a value equal to or greater than U+0080 <control>\r\n// > name-start code point\r\n// >   A letter, a non-ASCII code point, or U+005F LOW LINE (_).\r\n// > name code point\r\n// >   A name-start code point, a digit, or U+002D HYPHEN-MINUS (-)\r\n// That means only ASCII code points has a special meaning and we define a maps for 0..127 codes only\r\nvar CATEGORY = new Array(0x80);\r\ncharCodeCategory.Eof = 0x80;\r\ncharCodeCategory.WhiteSpace = 0x82;\r\ncharCodeCategory.Digit = 0x83;\r\ncharCodeCategory.NameStart = 0x84;\r\ncharCodeCategory.NonPrintable = 0x85;\r\n\r\nfor (var i = 0; i < CATEGORY.length; i++) {\r\n    switch (true) {\r\n        case isWhiteSpace(i):\r\n            CATEGORY[i] = charCodeCategory.WhiteSpace;\r\n            break;\r\n\r\n        case isDigit(i):\r\n            CATEGORY[i] = charCodeCategory.Digit;\r\n            break;\r\n\r\n        case isNameStart(i):\r\n            CATEGORY[i] = charCodeCategory.NameStart;\r\n            break;\r\n\r\n        case isNonPrintable(i):\r\n            CATEGORY[i] = charCodeCategory.NonPrintable;\r\n            break;\r\n\r\n        default:\r\n            CATEGORY[i] = i || charCodeCategory.Eof;\r\n    }\r\n}\r\n\r\nfunction charCodeCategory(code) {\r\n    return code < 0x80 ? CATEGORY[code] : charCodeCategory.NameStart;\r\n};\r\n\r\nmodule.exports = {\r\n    isDigit: isDigit,\r\n    isHexDigit: isHexDigit,\r\n    isUppercaseLetter: isUppercaseLetter,\r\n    isLowercaseLetter: isLowercaseLetter,\r\n    isLetter: isLetter,\r\n    isNonAscii: isNonAscii,\r\n    isNameStart: isNameStart,\r\n    isName: isName,\r\n    isNonPrintable: isNonPrintable,\r\n    isNewline: isNewline,\r\n    isWhiteSpace: isWhiteSpace,\r\n    isValidEscape: isValidEscape,\r\n    isIdentifierStart: isIdentifierStart,\r\n    isNumberStart: isNumberStart,\r\n\r\n    isBOM: isBOM,\r\n    charCodeCategory: charCodeCategory\r\n};\r\n","var charCodeDef = require('./char-code-definitions');\r\nvar isDigit = charCodeDef.isDigit;\r\nvar isHexDigit = charCodeDef.isHexDigit;\r\nvar isUppercaseLetter = charCodeDef.isUppercaseLetter;\r\nvar isName = charCodeDef.isName;\r\nvar isWhiteSpace = charCodeDef.isWhiteSpace;\r\nvar isValidEscape = charCodeDef.isValidEscape;\r\n\r\nfunction getCharCode(source, offset) {\r\n    return offset < source.length ? source.charCodeAt(offset) : 0;\r\n}\r\n\r\nfunction getNewlineLength(source, offset, code) {\r\n    if (code === 13 /* \\r */ && getCharCode(source, offset + 1) === 10 /* \\n */) {\r\n        return 2;\r\n    }\r\n\r\n    return 1;\r\n}\r\n\r\nfunction cmpChar(testStr, offset, referenceCode) {\r\n    var code = testStr.charCodeAt(offset);\r\n\r\n    // code.toLowerCase() for A..Z\r\n    if (isUppercaseLetter(code)) {\r\n        code = code | 32;\r\n    }\r\n\r\n    return code === referenceCode;\r\n}\r\n\r\nfunction cmpStr(testStr, start, end, referenceStr) {\r\n    if (end - start !== referenceStr.length) {\r\n        return false;\r\n    }\r\n\r\n    if (start < 0 || end > testStr.length) {\r\n        return false;\r\n    }\r\n\r\n    for (var i = start; i < end; i++) {\r\n        var testCode = testStr.charCodeAt(i);\r\n        var referenceCode = referenceStr.charCodeAt(i - start);\r\n\r\n        // testCode.toLowerCase() for A..Z\r\n        if (isUppercaseLetter(testCode)) {\r\n            testCode = testCode | 32;\r\n        }\r\n\r\n        if (testCode !== referenceCode) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nfunction findWhiteSpaceStart(source, offset) {\r\n    for (; offset >= 0; offset--) {\r\n        if (!isWhiteSpace(source.charCodeAt(offset))) {\r\n            break;\r\n        }\r\n    }\r\n\r\n    return offset + 1;\r\n}\r\n\r\nfunction findWhiteSpaceEnd(source, offset) {\r\n    for (; offset < source.length; offset++) {\r\n        if (!isWhiteSpace(source.charCodeAt(offset))) {\r\n            break;\r\n        }\r\n    }\r\n\r\n    return offset;\r\n}\r\n\r\nfunction findDecimalNumberEnd(source, offset) {\r\n    for (; offset < source.length; offset++) {\r\n        if (!isDigit(source.charCodeAt(offset))) {\r\n            break;\r\n        }\r\n    }\r\n\r\n    return offset;\r\n}\r\n\r\n// § 4.3.7. Consume an escaped code point\r\nfunction consumeEscaped(source, offset) {\r\n    // It assumes that the U+005C REVERSE SOLIDUS (\\) has already been consumed and\r\n    // that the next input code point has already been verified to be part of a valid escape.\r\n    offset += 2;\r\n\r\n    // hex digit\r\n    if (isHexDigit(getCharCode(source, offset - 1))) {\r\n        // Consume as many hex digits as possible, but no more than 5.\r\n        // Note that this means 1-6 hex digits have been consumed in total.\r\n        for (var maxOffset = Math.min(source.length, offset + 5); offset < maxOffset; offset++) {\r\n            if (!isHexDigit(getCharCode(source, offset))) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        // If the next input code point is whitespace, consume it as well.\r\n        var code = getCharCode(source, offset);\r\n        if (isWhiteSpace(code)) {\r\n            offset += getNewlineLength(source, offset, code);\r\n        }\r\n    }\r\n\r\n    return offset;\r\n}\r\n\r\n// §4.3.11. Consume a name\r\n// Note: This algorithm does not do the verification of the first few code points that are necessary\r\n// to ensure the returned code points would constitute an <ident-token>. If that is the intended use,\r\n// ensure that the stream starts with an identifier before calling this algorithm.\r\nfunction consumeName(source, offset) {\r\n    // Let result initially be an empty string.\r\n    // Repeatedly consume the next input code point from the stream:\r\n    for (; offset < source.length; offset++) {\r\n        var code = source.charCodeAt(offset);\r\n\r\n        // name code point\r\n        if (isName(code)) {\r\n            // Append the code point to result.\r\n            continue;\r\n        }\r\n\r\n        // the stream starts with a valid escape\r\n        if (isValidEscape(code, getCharCode(source, offset + 1))) {\r\n            // Consume an escaped code point. Append the returned code point to result.\r\n            offset = consumeEscaped(source, offset) - 1;\r\n            continue;\r\n        }\r\n\r\n        // anything else\r\n        // Reconsume the current input code point. Return result.\r\n        break;\r\n    }\r\n\r\n    return offset;\r\n}\r\n\r\n// §4.3.12. Consume a number\r\nfunction consumeNumber(source, offset) {\r\n    var code = source.charCodeAt(offset);\r\n\r\n    // 2. If the next input code point is U+002B PLUS SIGN (+) or U+002D HYPHEN-MINUS (-),\r\n    // consume it and append it to repr.\r\n    if (code === 0x002B || code === 0x002D) {\r\n        code = source.charCodeAt(offset += 1);\r\n    }\r\n\r\n    // 3. While the next input code point is a digit, consume it and append it to repr.\r\n    if (isDigit(code)) {\r\n        offset = findDecimalNumberEnd(source, offset + 1);\r\n        code = source.charCodeAt(offset);\r\n    }\r\n\r\n    // 4. If the next 2 input code points are U+002E FULL STOP (.) followed by a digit, then:\r\n    if (code === 0x002E && isDigit(source.charCodeAt(offset + 1))) {\r\n        // 4.1 Consume them.\r\n        // 4.2 Append them to repr.\r\n        code = source.charCodeAt(offset += 2);\r\n\r\n        // 4.3 Set type to \"number\".\r\n        // TODO\r\n\r\n        // 4.4 While the next input code point is a digit, consume it and append it to repr.\r\n\r\n        offset = findDecimalNumberEnd(source, offset);\r\n    }\r\n\r\n    // 5. If the next 2 or 3 input code points are U+0045 LATIN CAPITAL LETTER E (E)\r\n    // or U+0065 LATIN SMALL LETTER E (e), ... , followed by a digit, then:\r\n    if (cmpChar(source, offset, 101 /* e */)) {\r\n        var sign = 0;\r\n        code = source.charCodeAt(offset + 1);\r\n\r\n        // ... optionally followed by U+002D HYPHEN-MINUS (-) or U+002B PLUS SIGN (+) ...\r\n        if (code === 0x002D || code === 0x002B) {\r\n            sign = 1;\r\n            code = source.charCodeAt(offset + 2);\r\n        }\r\n\r\n        // ... followed by a digit\r\n        if (isDigit(code)) {\r\n            // 5.1 Consume them.\r\n            // 5.2 Append them to repr.\r\n\r\n            // 5.3 Set type to \"number\".\r\n            // TODO\r\n\r\n            // 5.4 While the next input code point is a digit, consume it and append it to repr.\r\n            offset = findDecimalNumberEnd(source, offset + 1 + sign + 1);\r\n        }\r\n    }\r\n\r\n    return offset;\r\n}\r\n\r\n// § 4.3.14. Consume the remnants of a bad url\r\n// ... its sole use is to consume enough of the input stream to reach a recovery point\r\n// where normal tokenizing can resume.\r\nfunction consumeBadUrlRemnants(source, offset) {\r\n    // Repeatedly consume the next input code point from the stream:\r\n    for (; offset < source.length; offset++) {\r\n        var code = source.charCodeAt(offset);\r\n\r\n        // U+0029 RIGHT PARENTHESIS ())\r\n        // EOF\r\n        if (code === 0x0029) {\r\n            // Return.\r\n            offset++;\r\n            break;\r\n        }\r\n\r\n        if (isValidEscape(code, getCharCode(source, offset + 1))) {\r\n            // Consume an escaped code point.\r\n            // Note: This allows an escaped right parenthesis (\"\\)\") to be encountered\r\n            // without ending the <bad-url-token>. This is otherwise identical to\r\n            // the \"anything else\" clause.\r\n            offset = consumeEscaped(source, offset);\r\n        }\r\n    }\r\n\r\n    return offset;\r\n}\r\n\r\nmodule.exports = {\r\n    consumeEscaped: consumeEscaped,\r\n    consumeName: consumeName,\r\n    consumeNumber: consumeNumber,\r\n    consumeBadUrlRemnants: consumeBadUrlRemnants,\r\n\r\n    cmpChar: cmpChar,\r\n    cmpStr: cmpStr,\r\n\r\n    getNewlineLength: getNewlineLength,\r\n    findWhiteSpaceStart: findWhiteSpaceStart,\r\n    findWhiteSpaceEnd: findWhiteSpaceEnd\r\n};\r\n","var constants = require('../tokenizer/const');\r\nvar TYPE = constants.TYPE;\r\nvar NAME = constants.NAME;\r\n\r\nvar utils = require('../tokenizer/utils');\r\nvar cmpStr = utils.cmpStr;\r\n\r\nvar EOF = TYPE.EOF;\r\nvar WHITESPACE = TYPE.WhiteSpace;\r\nvar COMMENT = TYPE.Comment;\r\n\r\nvar OFFSET_MASK = 0x00FFFFFF;\r\nvar TYPE_SHIFT = 24;\r\n\r\nvar TokenStream = function() {\r\n    this.offsetAndType = null;\r\n    this.balance = null;\r\n\r\n    this.reset();\r\n};\r\n\r\nTokenStream.prototype = {\r\n    reset: function() {\r\n        this.eof = false;\r\n        this.tokenIndex = -1;\r\n        this.tokenType = 0;\r\n        this.tokenStart = this.firstCharOffset;\r\n        this.tokenEnd = this.firstCharOffset;\r\n    },\r\n\r\n    lookupType: function(offset) {\r\n        offset += this.tokenIndex;\r\n\r\n        if (offset < this.tokenCount) {\r\n            return this.offsetAndType[offset] >> TYPE_SHIFT;\r\n        }\r\n\r\n        return EOF;\r\n    },\r\n    lookupOffset: function(offset) {\r\n        offset += this.tokenIndex;\r\n\r\n        if (offset < this.tokenCount) {\r\n            return this.offsetAndType[offset - 1] & OFFSET_MASK;\r\n        }\r\n\r\n        return this.source.length;\r\n    },\r\n    lookupValue: function(offset, referenceStr) {\r\n        offset += this.tokenIndex;\r\n\r\n        if (offset < this.tokenCount) {\r\n            return cmpStr(\r\n                this.source,\r\n                this.offsetAndType[offset - 1] & OFFSET_MASK,\r\n                this.offsetAndType[offset] & OFFSET_MASK,\r\n                referenceStr\r\n            );\r\n        }\r\n\r\n        return false;\r\n    },\r\n    getTokenStart: function(tokenIndex) {\r\n        if (tokenIndex === this.tokenIndex) {\r\n            return this.tokenStart;\r\n        }\r\n\r\n        if (tokenIndex > 0) {\r\n            return tokenIndex < this.tokenCount\r\n                ? this.offsetAndType[tokenIndex - 1] & OFFSET_MASK\r\n                : this.offsetAndType[this.tokenCount] & OFFSET_MASK;\r\n        }\r\n\r\n        return this.firstCharOffset;\r\n    },\r\n\r\n    // TODO: -> skipUntilBalanced\r\n    getRawLength: function(startToken, mode) {\r\n        var cursor = startToken;\r\n        var balanceEnd;\r\n        var offset = this.offsetAndType[Math.max(cursor - 1, 0)] & OFFSET_MASK;\r\n        var type;\r\n\r\n        loop:\r\n        for (; cursor < this.tokenCount; cursor++) {\r\n            balanceEnd = this.balance[cursor];\r\n\r\n            // stop scanning on balance edge that points to offset before start token\r\n            if (balanceEnd < startToken) {\r\n                break loop;\r\n            }\r\n\r\n            type = this.offsetAndType[cursor] >> TYPE_SHIFT;\r\n\r\n            // check token is stop type\r\n            switch (mode(type, this.source, offset)) {\r\n                case 1:\r\n                    break loop;\r\n\r\n                case 2:\r\n                    cursor++;\r\n                    break loop;\r\n\r\n                default:\r\n                    offset = this.offsetAndType[cursor] & OFFSET_MASK;\r\n\r\n                    // fast forward to the end of balanced block\r\n                    if (this.balance[balanceEnd] === cursor) {\r\n                        cursor = balanceEnd;\r\n                    }\r\n            }\r\n        }\r\n\r\n        return cursor - this.tokenIndex;\r\n    },\r\n    isBalanceEdge: function(pos) {\r\n        return this.balance[this.tokenIndex] < pos;\r\n    },\r\n    isDelim: function(code, offset) {\r\n        if (offset) {\r\n            return (\r\n                this.lookupType(offset) === TYPE.Delim &&\r\n                this.source.charCodeAt(this.lookupOffset(offset)) === code\r\n            );\r\n        }\r\n\r\n        return (\r\n            this.tokenType === TYPE.Delim &&\r\n            this.source.charCodeAt(this.tokenStart) === code\r\n        );\r\n    },\r\n\r\n    getTokenValue: function() {\r\n        return this.source.substring(this.tokenStart, this.tokenEnd);\r\n    },\r\n    getTokenLength: function() {\r\n        return this.tokenEnd - this.tokenStart;\r\n    },\r\n    substrToCursor: function(start) {\r\n        return this.source.substring(start, this.tokenStart);\r\n    },\r\n\r\n    skipWS: function() {\r\n        for (var i = this.tokenIndex, skipTokenCount = 0; i < this.tokenCount; i++, skipTokenCount++) {\r\n            if ((this.offsetAndType[i] >> TYPE_SHIFT) !== WHITESPACE) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (skipTokenCount > 0) {\r\n            this.skip(skipTokenCount);\r\n        }\r\n    },\r\n    skipSC: function() {\r\n        while (this.tokenType === WHITESPACE || this.tokenType === COMMENT) {\r\n            this.next();\r\n        }\r\n    },\r\n    skip: function(tokenCount) {\r\n        var next = this.tokenIndex + tokenCount;\r\n\r\n        if (next < this.tokenCount) {\r\n            this.tokenIndex = next;\r\n            this.tokenStart = this.offsetAndType[next - 1] & OFFSET_MASK;\r\n            next = this.offsetAndType[next];\r\n            this.tokenType = next >> TYPE_SHIFT;\r\n            this.tokenEnd = next & OFFSET_MASK;\r\n        } else {\r\n            this.tokenIndex = this.tokenCount;\r\n            this.next();\r\n        }\r\n    },\r\n    next: function() {\r\n        var next = this.tokenIndex + 1;\r\n\r\n        if (next < this.tokenCount) {\r\n            this.tokenIndex = next;\r\n            this.tokenStart = this.tokenEnd;\r\n            next = this.offsetAndType[next];\r\n            this.tokenType = next >> TYPE_SHIFT;\r\n            this.tokenEnd = next & OFFSET_MASK;\r\n        } else {\r\n            this.tokenIndex = this.tokenCount;\r\n            this.eof = true;\r\n            this.tokenType = EOF;\r\n            this.tokenStart = this.tokenEnd = this.source.length;\r\n        }\r\n    },\r\n\r\n    dump: function() {\r\n        var offset = this.firstCharOffset;\r\n\r\n        return Array.prototype.slice.call(this.offsetAndType, 0, this.tokenCount).map(function(item, idx) {\r\n            var start = offset;\r\n            var end = item & OFFSET_MASK;\r\n\r\n            offset = end;\r\n\r\n            return {\r\n                idx: idx,\r\n                type: NAME[item >> TYPE_SHIFT],\r\n                chunk: this.source.substring(start, end),\r\n                balance: this.balance[idx]\r\n            };\r\n        }, this);\r\n    }\r\n};\r\n\r\nmodule.exports = TokenStream;\r\n","function noop(value) {\n  return value\n}\n\nfunction generateMultiplier(multiplier) {\n  if (multiplier.min === 0 && multiplier.max === 0) {\n    return '*'\n  }\n\n  if (multiplier.min === 0 && multiplier.max === 1) {\n    return '?'\n  }\n\n  if (multiplier.min === 1 && multiplier.max === 0) {\n    return multiplier.comma ? '#' : '+'\n  }\n\n  if (multiplier.min === 1 && multiplier.max === 1) {\n    return ''\n  }\n\n  return (multiplier.comma ? '#' : '') + (multiplier.min === multiplier.max ? '{' + multiplier.min + '}' : '{' + multiplier.min + ',' + (multiplier.max !== 0 ? multiplier.max : '') + '}')\n}\n\nfunction generateTypeOpts(node) {\n  switch (node.type) {\n    case 'Range':\n      return ' [' + (node.min === null ? '-∞' : node.min) + ',' + (node.max === null ? '∞' : node.max) + ']'\n\n    default:\n      throw new Error('Unknown node type `' + node.type + '`')\n  }\n}\n\nfunction generateSequence(node, decorate, forceBraces, compact) {\n  var combinator = node.combinator === ' ' || compact ? node.combinator : ' ' + node.combinator + ' '\n  var result = node.terms\n    .map(function (term) {\n      return generate(term, decorate, forceBraces, compact)\n    })\n    .join(combinator)\n\n  if (node.explicit || forceBraces) {\n    result = (compact || result[0] === ',' ? '[' : '[ ') + result + (compact ? ']' : ' ]')\n  }\n\n  return result\n}\n\nfunction generate(node, decorate, forceBraces, compact) {\n  var result\n\n  switch (node.type) {\n    case 'Group':\n      result = generateSequence(node, decorate, forceBraces, compact) + (node.disallowEmpty ? '!' : '')\n      break\n\n    case 'Multiplier':\n      // return since node is a composition\n      return generate(node.term, decorate, forceBraces, compact) + decorate(generateMultiplier(node), node)\n\n    case 'Type':\n      result = '<' + node.name + (node.opts ? decorate(generateTypeOpts(node.opts), node.opts) : '') + '>'\n      break\n\n    case 'Property':\n      result = \"<'\" + node.name + \"'>\"\n      break\n\n    case 'Keyword':\n      result = node.name\n      break\n\n    case 'AtKeyword':\n      result = '@' + node.name\n      break\n\n    case 'Function':\n      result = node.name + '('\n      break\n\n    case 'String':\n    case 'Token':\n      result = node.value\n      break\n\n    case 'Comma':\n      result = ','\n      break\n\n    default:\n      throw new Error('Unknown node type `' + node.type + '`')\n  }\n\n  return decorate(result, node)\n}\n\nmodule.exports = function (node, options) {\n  var decorate = noop\n  var forceBraces = false\n  var compact = false\n\n  if (typeof options === 'function') {\n    decorate = options\n  } else if (options) {\n    forceBraces = Boolean(options.forceBraces)\n    compact = Boolean(options.compact)\n    if (typeof options.decorate === 'function') {\n      decorate = options.decorate\n    }\n  }\n\n  return generate(node, decorate, forceBraces, compact)\n}\n","var createCustomError = require('../utils/createCustomError');\r\nvar generate = require('../definition-syntax/generate');\r\n\r\nfunction fromMatchResult(matchResult) {\r\n    var tokens = matchResult.tokens;\r\n    var longestMatch = matchResult.longestMatch;\r\n    var node = longestMatch < tokens.length ? tokens[longestMatch].node : null;\r\n    var mismatchOffset = -1;\r\n    var entries = 0;\r\n    var css = '';\r\n\r\n    for (var i = 0; i < tokens.length; i++) {\r\n        if (i === longestMatch) {\r\n            mismatchOffset = css.length;\r\n        }\r\n\r\n        if (node !== null && tokens[i].node === node) {\r\n            if (i <= longestMatch) {\r\n                entries++;\r\n            } else {\r\n                entries = 0;\r\n            }\r\n        }\r\n\r\n        css += tokens[i].value;\r\n    }\r\n\r\n    return {\r\n        node: node,\r\n        css: css,\r\n        mismatchOffset: mismatchOffset === -1 ? css.length : mismatchOffset,\r\n        last: node === null || entries > 1\r\n    };\r\n}\r\n\r\nfunction getLocation(node, point) {\r\n    var loc = node && node.loc && node.loc[point];\r\n\r\n    if (loc) {\r\n        return {\r\n            offset: loc.offset,\r\n            line: loc.line,\r\n            column: loc.column\r\n        };\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nvar SyntaxReferenceError = function(type, referenceName) {\r\n    var error = createCustomError(\r\n        'SyntaxReferenceError',\r\n        type + (referenceName ? ' `' + referenceName + '`' : '')\r\n    );\r\n\r\n    error.reference = referenceName;\r\n\r\n    return error;\r\n};\r\n\r\nvar MatchError = function(message, syntax, node, matchResult) {\r\n    var error = createCustomError('SyntaxMatchError', message);\r\n    var details = fromMatchResult(matchResult);\r\n    var mismatchOffset = details.mismatchOffset || 0;\r\n    var badNode = details.node || node;\r\n    var end = getLocation(badNode, 'end');\r\n    var start = details.last ? end : getLocation(badNode, 'start');\r\n    var css = details.css;\r\n\r\n    error.rawMessage = message;\r\n    error.syntax = syntax ? generate(syntax) : '<generic>';\r\n    error.css = css;\r\n    error.mismatchOffset = mismatchOffset;\r\n    error.loc = {\r\n        source: (badNode && badNode.loc && badNode.loc.source) || '<unknown>',\r\n        start: start,\r\n        end: end\r\n    };\r\n    error.line = start ? start.line : undefined;\r\n    error.column = start ? start.column : undefined;\r\n    error.offset = start ? start.offset : undefined;\r\n    error.message = message + '\\n' +\r\n        '  syntax: ' + error.syntax + '\\n' +\r\n        '   value: ' + (error.css || '<empty string>') + '\\n' +\r\n        '  --------' + new Array(error.mismatchOffset + 1).join('-') + '^';\r\n\r\n    return error;\r\n};\r\n\r\nmodule.exports = {\r\n    SyntaxReferenceError: SyntaxReferenceError,\r\n    MatchError: MatchError\r\n};\r\n","var hasOwnProperty = Object.prototype.hasOwnProperty;\r\nvar keywords = Object.create(null);\r\nvar properties = Object.create(null);\r\nvar HYPHENMINUS = 45; // '-'.charCodeAt()\r\n\r\nfunction isCustomProperty(str, offset) {\r\n    offset = offset || 0;\r\n\r\n    return str.length - offset >= 2 &&\r\n           str.charCodeAt(offset) === HYPHENMINUS &&\r\n           str.charCodeAt(offset + 1) === HYPHENMINUS;\r\n}\r\n\r\nfunction getVendorPrefix(str, offset) {\r\n    offset = offset || 0;\r\n\r\n    // verdor prefix should be at least 3 chars length\r\n    if (str.length - offset >= 3) {\r\n        // vendor prefix starts with hyper minus following non-hyper minus\r\n        if (str.charCodeAt(offset) === HYPHENMINUS &&\r\n            str.charCodeAt(offset + 1) !== HYPHENMINUS) {\r\n            // vendor prefix should contain a hyper minus at the ending\r\n            var secondDashIndex = str.indexOf('-', offset + 2);\r\n\r\n            if (secondDashIndex !== -1) {\r\n                return str.substring(offset, secondDashIndex + 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    return '';\r\n}\r\n\r\nfunction getKeywordDescriptor(keyword) {\r\n    if (hasOwnProperty.call(keywords, keyword)) {\r\n        return keywords[keyword];\r\n    }\r\n\r\n    var name = keyword.toLowerCase();\r\n\r\n    if (hasOwnProperty.call(keywords, name)) {\r\n        return keywords[keyword] = keywords[name];\r\n    }\r\n\r\n    var custom = isCustomProperty(name, 0);\r\n    var vendor = !custom ? getVendorPrefix(name, 0) : '';\r\n\r\n    return keywords[keyword] = Object.freeze({\r\n        basename: name.substr(vendor.length),\r\n        name: name,\r\n        vendor: vendor,\r\n        prefix: vendor,\r\n        custom: custom\r\n    });\r\n}\r\n\r\nfunction getPropertyDescriptor(property) {\r\n    if (hasOwnProperty.call(properties, property)) {\r\n        return properties[property];\r\n    }\r\n\r\n    var name = property;\r\n    var hack = property[0];\r\n\r\n    if (hack === '/') {\r\n        hack = property[1] === '/' ? '//' : '/';\r\n    } else if (hack !== '_' &&\r\n               hack !== '*' &&\r\n               hack !== '$' &&\r\n               hack !== '#' &&\r\n               hack !== '+' &&\r\n               hack !== '&') {\r\n        hack = '';\r\n    }\r\n\r\n    var custom = isCustomProperty(name, hack.length);\r\n\r\n    // re-use result when possible (the same as for lower case)\r\n    if (!custom) {\r\n        name = name.toLowerCase();\r\n        if (hasOwnProperty.call(properties, name)) {\r\n            return properties[property] = properties[name];\r\n        }\r\n    }\r\n\r\n    var vendor = !custom ? getVendorPrefix(name, hack.length) : '';\r\n    var prefix = name.substr(0, hack.length + vendor.length);\r\n\r\n    return properties[property] = Object.freeze({\r\n        basename: name.substr(prefix.length),\r\n        name: name.substr(hack.length),\r\n        hack: hack,\r\n        vendor: vendor,\r\n        prefix: prefix,\r\n        custom: custom\r\n    });\r\n}\r\n\r\nmodule.exports = {\r\n    keyword: getKeywordDescriptor,\r\n    property: getPropertyDescriptor,\r\n    isCustomProperty: isCustomProperty,\r\n    vendorPrefix: getVendorPrefix\r\n};\r\n","var MIN_SIZE = 16 * 1024;\r\nvar SafeUint32Array = typeof Uint32Array !== 'undefined' ? Uint32Array : Array; // fallback on Array when TypedArray is not supported\r\n\r\nmodule.exports = function adoptBuffer(buffer, size) {\r\n    if (buffer === null || buffer.length < size) {\r\n        return new SafeUint32Array(Math.max(size + 1024, MIN_SIZE));\r\n    }\r\n\r\n    return buffer;\r\n};\r\n","var TokenStream = require('../common/TokenStream');\r\nvar adoptBuffer = require('../common/adopt-buffer');\r\n\r\nvar constants = require('./const');\r\nvar TYPE = constants.TYPE;\r\n\r\nvar charCodeDefinitions = require('./char-code-definitions');\r\nvar isNewline = charCodeDefinitions.isNewline;\r\nvar isName = charCodeDefinitions.isName;\r\nvar isValidEscape = charCodeDefinitions.isValidEscape;\r\nvar isNumberStart = charCodeDefinitions.isNumberStart;\r\nvar isIdentifierStart = charCodeDefinitions.isIdentifierStart;\r\nvar charCodeCategory = charCodeDefinitions.charCodeCategory;\r\nvar isBOM = charCodeDefinitions.isBOM;\r\n\r\nvar utils = require('./utils');\r\nvar cmpStr = utils.cmpStr;\r\nvar getNewlineLength = utils.getNewlineLength;\r\nvar findWhiteSpaceEnd = utils.findWhiteSpaceEnd;\r\nvar consumeEscaped = utils.consumeEscaped;\r\nvar consumeName = utils.consumeName;\r\nvar consumeNumber = utils.consumeNumber;\r\nvar consumeBadUrlRemnants = utils.consumeBadUrlRemnants;\r\n\r\nvar OFFSET_MASK = 0x00FFFFFF;\r\nvar TYPE_SHIFT = 24;\r\n\r\nfunction tokenize(source, stream) {\r\n    function getCharCode(offset) {\r\n        return offset < sourceLength ? source.charCodeAt(offset) : 0;\r\n    }\r\n\r\n    // § 4.3.3. Consume a numeric token\r\n    function consumeNumericToken() {\r\n        // Consume a number and let number be the result.\r\n        offset = consumeNumber(source, offset);\r\n\r\n        // If the next 3 input code points would start an identifier, then:\r\n        if (isIdentifierStart(getCharCode(offset), getCharCode(offset + 1), getCharCode(offset + 2))) {\r\n            // Create a <dimension-token> with the same value and type flag as number, and a unit set initially to the empty string.\r\n            // Consume a name. Set the <dimension-token>’s unit to the returned value.\r\n            // Return the <dimension-token>.\r\n            type = TYPE.Dimension;\r\n            offset = consumeName(source, offset);\r\n            return;\r\n        }\r\n\r\n        // Otherwise, if the next input code point is U+0025 PERCENTAGE SIGN (%), consume it.\r\n        if (getCharCode(offset) === 0x0025) {\r\n            // Create a <percentage-token> with the same value as number, and return it.\r\n            type = TYPE.Percentage;\r\n            offset++;\r\n            return;\r\n        }\r\n\r\n        // Otherwise, create a <number-token> with the same value and type flag as number, and return it.\r\n        type = TYPE.Number;\r\n    }\r\n\r\n    // § 4.3.4. Consume an ident-like token\r\n    function consumeIdentLikeToken() {\r\n        const nameStartOffset = offset;\r\n\r\n        // Consume a name, and let string be the result.\r\n        offset = consumeName(source, offset);\r\n\r\n        // If string’s value is an ASCII case-insensitive match for \"url\",\r\n        // and the next input code point is U+0028 LEFT PARENTHESIS ((), consume it.\r\n        if (cmpStr(source, nameStartOffset, offset, 'url') && getCharCode(offset) === 0x0028) {\r\n            // While the next two input code points are whitespace, consume the next input code point.\r\n            offset = findWhiteSpaceEnd(source, offset + 1);\r\n\r\n            // If the next one or two input code points are U+0022 QUOTATION MARK (\"), U+0027 APOSTROPHE ('),\r\n            // or whitespace followed by U+0022 QUOTATION MARK (\") or U+0027 APOSTROPHE ('),\r\n            // then create a <function-token> with its value set to string and return it.\r\n            if (getCharCode(offset) === 0x0022 ||\r\n                getCharCode(offset) === 0x0027) {\r\n                type = TYPE.Function;\r\n                offset = nameStartOffset + 4;\r\n                return;\r\n            }\r\n\r\n            // Otherwise, consume a url token, and return it.\r\n            consumeUrlToken();\r\n            return;\r\n        }\r\n\r\n        // Otherwise, if the next input code point is U+0028 LEFT PARENTHESIS ((), consume it.\r\n        // Create a <function-token> with its value set to string and return it.\r\n        if (getCharCode(offset) === 0x0028) {\r\n            type = TYPE.Function;\r\n            offset++;\r\n            return;\r\n        }\r\n\r\n        // Otherwise, create an <ident-token> with its value set to string and return it.\r\n        type = TYPE.Ident;\r\n    }\r\n\r\n    // § 4.3.5. Consume a string token\r\n    function consumeStringToken(endingCodePoint) {\r\n        // This algorithm may be called with an ending code point, which denotes the code point\r\n        // that ends the string. If an ending code point is not specified,\r\n        // the current input code point is used.\r\n        if (!endingCodePoint) {\r\n            endingCodePoint = getCharCode(offset++);\r\n        }\r\n\r\n        // Initially create a <string-token> with its value set to the empty string.\r\n        type = TYPE.String;\r\n\r\n        // Repeatedly consume the next input code point from the stream:\r\n        for (; offset < source.length; offset++) {\r\n            var code = source.charCodeAt(offset);\r\n\r\n            switch (charCodeCategory(code)) {\r\n                // ending code point\r\n                case endingCodePoint:\r\n                    // Return the <string-token>.\r\n                    offset++;\r\n                    return;\r\n\r\n                // EOF\r\n                case charCodeCategory.Eof:\r\n                    // This is a parse error. Return the <string-token>.\r\n                    return;\r\n\r\n                // newline\r\n                case charCodeCategory.WhiteSpace:\r\n                    if (isNewline(code)) {\r\n                        // This is a parse error. Reconsume the current input code point,\r\n                        // create a <bad-string-token>, and return it.\r\n                        offset += getNewlineLength(source, offset, code);\r\n                        type = TYPE.BadString;\r\n                        return;\r\n                    }\r\n                    break;\r\n\r\n                // U+005C REVERSE SOLIDUS (\\)\r\n                case 0x005C:\r\n                    // If the next input code point is EOF, do nothing.\r\n                    if (offset === source.length - 1) {\r\n                        break;\r\n                    }\r\n\r\n                    var nextCode = getCharCode(offset + 1);\r\n\r\n                    // Otherwise, if the next input code point is a newline, consume it.\r\n                    if (isNewline(nextCode)) {\r\n                        offset += getNewlineLength(source, offset + 1, nextCode);\r\n                    } else if (isValidEscape(code, nextCode)) {\r\n                        // Otherwise, (the stream starts with a valid escape) consume\r\n                        // an escaped code point and append the returned code point to\r\n                        // the <string-token>’s value.\r\n                        offset = consumeEscaped(source, offset) - 1;\r\n                    }\r\n                    break;\r\n\r\n                // anything else\r\n                // Append the current input code point to the <string-token>’s value.\r\n            }\r\n        }\r\n    }\r\n\r\n    // § 4.3.6. Consume a url token\r\n    // Note: This algorithm assumes that the initial \"url(\" has already been consumed.\r\n    // This algorithm also assumes that it’s being called to consume an \"unquoted\" value, like url(foo).\r\n    // A quoted value, like url(\"foo\"), is parsed as a <function-token>. Consume an ident-like token\r\n    // automatically handles this distinction; this algorithm shouldn’t be called directly otherwise.\r\n    function consumeUrlToken() {\r\n        // Initially create a <url-token> with its value set to the empty string.\r\n        type = TYPE.Url;\r\n\r\n        // Consume as much whitespace as possible.\r\n        offset = findWhiteSpaceEnd(source, offset);\r\n\r\n        // Repeatedly consume the next input code point from the stream:\r\n        for (; offset < source.length; offset++) {\r\n            var code = source.charCodeAt(offset);\r\n\r\n            switch (charCodeCategory(code)) {\r\n                // U+0029 RIGHT PARENTHESIS ())\r\n                case 0x0029:\r\n                    // Return the <url-token>.\r\n                    offset++;\r\n                    return;\r\n\r\n                // EOF\r\n                case charCodeCategory.Eof:\r\n                    // This is a parse error. Return the <url-token>.\r\n                    return;\r\n\r\n                // whitespace\r\n                case charCodeCategory.WhiteSpace:\r\n                    // Consume as much whitespace as possible.\r\n                    offset = findWhiteSpaceEnd(source, offset);\r\n\r\n                    // If the next input code point is U+0029 RIGHT PARENTHESIS ()) or EOF,\r\n                    // consume it and return the <url-token>\r\n                    // (if EOF was encountered, this is a parse error);\r\n                    if (getCharCode(offset) === 0x0029 || offset >= source.length) {\r\n                        if (offset < source.length) {\r\n                            offset++;\r\n                        }\r\n                        return;\r\n                    }\r\n\r\n                    // otherwise, consume the remnants of a bad url, create a <bad-url-token>,\r\n                    // and return it.\r\n                    offset = consumeBadUrlRemnants(source, offset);\r\n                    type = TYPE.BadUrl;\r\n                    return;\r\n\r\n                // U+0022 QUOTATION MARK (\")\r\n                // U+0027 APOSTROPHE (')\r\n                // U+0028 LEFT PARENTHESIS (()\r\n                // non-printable code point\r\n                case 0x0022:\r\n                case 0x0027:\r\n                case 0x0028:\r\n                case charCodeCategory.NonPrintable:\r\n                    // This is a parse error. Consume the remnants of a bad url,\r\n                    // create a <bad-url-token>, and return it.\r\n                    offset = consumeBadUrlRemnants(source, offset);\r\n                    type = TYPE.BadUrl;\r\n                    return;\r\n\r\n                // U+005C REVERSE SOLIDUS (\\)\r\n                case 0x005C:\r\n                    // If the stream starts with a valid escape, consume an escaped code point and\r\n                    // append the returned code point to the <url-token>’s value.\r\n                    if (isValidEscape(code, getCharCode(offset + 1))) {\r\n                        offset = consumeEscaped(source, offset) - 1;\r\n                        break;\r\n                    }\r\n\r\n                    // Otherwise, this is a parse error. Consume the remnants of a bad url,\r\n                    // create a <bad-url-token>, and return it.\r\n                    offset = consumeBadUrlRemnants(source, offset);\r\n                    type = TYPE.BadUrl;\r\n                    return;\r\n\r\n                // anything else\r\n                // Append the current input code point to the <url-token>’s value.\r\n            }\r\n        }\r\n    }\r\n\r\n    if (!stream) {\r\n        stream = new TokenStream();\r\n    }\r\n\r\n    // ensure source is a string\r\n    source = String(source || '');\r\n\r\n    var sourceLength = source.length;\r\n    var offsetAndType = adoptBuffer(stream.offsetAndType, sourceLength + 1); // +1 because of eof-token\r\n    var balance = adoptBuffer(stream.balance, sourceLength + 1);\r\n    var tokenCount = 0;\r\n    var start = isBOM(getCharCode(0));\r\n    var offset = start;\r\n    var balanceCloseType = 0;\r\n    var balanceStart = 0;\r\n    var balancePrev = 0;\r\n\r\n    // https://drafts.csswg.org/css-syntax-3/#consume-token\r\n    // § 4.3.1. Consume a token\r\n    while (offset < sourceLength) {\r\n        var code = source.charCodeAt(offset);\r\n        var type = 0;\r\n\r\n        balance[tokenCount] = sourceLength;\r\n\r\n        switch (charCodeCategory(code)) {\r\n            // whitespace\r\n            case charCodeCategory.WhiteSpace:\r\n                // Consume as much whitespace as possible. Return a <whitespace-token>.\r\n                type = TYPE.WhiteSpace;\r\n                offset = findWhiteSpaceEnd(source, offset + 1);\r\n                break;\r\n\r\n            // U+0022 QUOTATION MARK (\")\r\n            case 0x0022:\r\n                // Consume a string token and return it.\r\n                consumeStringToken();\r\n                break;\r\n\r\n            // U+0023 NUMBER SIGN (#)\r\n            case 0x0023:\r\n                // If the next input code point is a name code point or the next two input code points are a valid escape, then:\r\n                if (isName(getCharCode(offset + 1)) || isValidEscape(getCharCode(offset + 1), getCharCode(offset + 2))) {\r\n                    // Create a <hash-token>.\r\n                    type = TYPE.Hash;\r\n\r\n                    // If the next 3 input code points would start an identifier, set the <hash-token>’s type flag to \"id\".\r\n                    // if (isIdentifierStart(getCharCode(offset + 1), getCharCode(offset + 2), getCharCode(offset + 3))) {\r\n                    //     // TODO: set id flag\r\n                    // }\r\n\r\n                    // Consume a name, and set the <hash-token>’s value to the returned string.\r\n                    offset = consumeName(source, offset + 1);\r\n\r\n                    // Return the <hash-token>.\r\n                } else {\r\n                    // Otherwise, return a <delim-token> with its value set to the current input code point.\r\n                    type = TYPE.Delim;\r\n                    offset++;\r\n                }\r\n\r\n                break;\r\n\r\n            // U+0027 APOSTROPHE (')\r\n            case 0x0027:\r\n                // Consume a string token and return it.\r\n                consumeStringToken();\r\n                break;\r\n\r\n            // U+0028 LEFT PARENTHESIS (()\r\n            case 0x0028:\r\n                // Return a <(-token>.\r\n                type = TYPE.LeftParenthesis;\r\n                offset++;\r\n                break;\r\n\r\n            // U+0029 RIGHT PARENTHESIS ())\r\n            case 0x0029:\r\n                // Return a <)-token>.\r\n                type = TYPE.RightParenthesis;\r\n                offset++;\r\n                break;\r\n\r\n            // U+002B PLUS SIGN (+)\r\n            case 0x002B:\r\n                // If the input stream starts with a number, ...\r\n                if (isNumberStart(code, getCharCode(offset + 1), getCharCode(offset + 2))) {\r\n                    // ... reconsume the current input code point, consume a numeric token, and return it.\r\n                    consumeNumericToken();\r\n                } else {\r\n                    // Otherwise, return a <delim-token> with its value set to the current input code point.\r\n                    type = TYPE.Delim;\r\n                    offset++;\r\n                }\r\n                break;\r\n\r\n            // U+002C COMMA (,)\r\n            case 0x002C:\r\n                // Return a <comma-token>.\r\n                type = TYPE.Comma;\r\n                offset++;\r\n                break;\r\n\r\n            // U+002D HYPHEN-MINUS (-)\r\n            case 0x002D:\r\n                // If the input stream starts with a number, reconsume the current input code point, consume a numeric token, and return it.\r\n                if (isNumberStart(code, getCharCode(offset + 1), getCharCode(offset + 2))) {\r\n                    consumeNumericToken();\r\n                } else {\r\n                    // Otherwise, if the next 2 input code points are U+002D HYPHEN-MINUS U+003E GREATER-THAN SIGN (->), consume them and return a <CDC-token>.\r\n                    if (getCharCode(offset + 1) === 0x002D &&\r\n                        getCharCode(offset + 2) === 0x003E) {\r\n                        type = TYPE.CDC;\r\n                        offset = offset + 3;\r\n                    } else {\r\n                        // Otherwise, if the input stream starts with an identifier, ...\r\n                        if (isIdentifierStart(code, getCharCode(offset + 1), getCharCode(offset + 2))) {\r\n                            // ... reconsume the current input code point, consume an ident-like token, and return it.\r\n                            consumeIdentLikeToken();\r\n                        } else {\r\n                            // Otherwise, return a <delim-token> with its value set to the current input code point.\r\n                            type = TYPE.Delim;\r\n                            offset++;\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n\r\n            // U+002E FULL STOP (.)\r\n            case 0x002E:\r\n                // If the input stream starts with a number, ...\r\n                if (isNumberStart(code, getCharCode(offset + 1), getCharCode(offset + 2))) {\r\n                    // ... reconsume the current input code point, consume a numeric token, and return it.\r\n                    consumeNumericToken();\r\n                } else {\r\n                    // Otherwise, return a <delim-token> with its value set to the current input code point.\r\n                    type = TYPE.Delim;\r\n                    offset++;\r\n                }\r\n\r\n                break;\r\n\r\n            // U+002F SOLIDUS (/)\r\n            case 0x002F:\r\n                // If the next two input code point are U+002F SOLIDUS (/) followed by a U+002A ASTERISK (*),\r\n                if (getCharCode(offset + 1) === 0x002A) {\r\n                    // ... consume them and all following code points up to and including the first U+002A ASTERISK (*)\r\n                    // followed by a U+002F SOLIDUS (/), or up to an EOF code point.\r\n                    type = TYPE.Comment;\r\n                    offset = source.indexOf('*/', offset + 2) + 2;\r\n                    if (offset === 1) {\r\n                        offset = source.length;\r\n                    }\r\n                } else {\r\n                    type = TYPE.Delim;\r\n                    offset++;\r\n                }\r\n                break;\r\n\r\n            // U+003A COLON (:)\r\n            case 0x003A:\r\n                // Return a <colon-token>.\r\n                type = TYPE.Colon;\r\n                offset++;\r\n                break;\r\n\r\n            // U+003B SEMICOLON (;)\r\n            case 0x003B:\r\n                // Return a <semicolon-token>.\r\n                type = TYPE.Semicolon;\r\n                offset++;\r\n                break;\r\n\r\n            // U+003C LESS-THAN SIGN (<)\r\n            case 0x003C:\r\n                // If the next 3 input code points are U+0021 EXCLAMATION MARK U+002D HYPHEN-MINUS U+002D HYPHEN-MINUS (!--), ...\r\n                if (getCharCode(offset + 1) === 0x0021 &&\r\n                    getCharCode(offset + 2) === 0x002D &&\r\n                    getCharCode(offset + 3) === 0x002D) {\r\n                    // ... consume them and return a <CDO-token>.\r\n                    type = TYPE.CDO;\r\n                    offset = offset + 4;\r\n                } else {\r\n                    // Otherwise, return a <delim-token> with its value set to the current input code point.\r\n                    type = TYPE.Delim;\r\n                    offset++;\r\n                }\r\n\r\n                break;\r\n\r\n            // U+0040 COMMERCIAL AT (@)\r\n            case 0x0040:\r\n                // If the next 3 input code points would start an identifier, ...\r\n                if (isIdentifierStart(getCharCode(offset + 1), getCharCode(offset + 2), getCharCode(offset + 3))) {\r\n                    // ... consume a name, create an <at-keyword-token> with its value set to the returned value, and return it.\r\n                    type = TYPE.AtKeyword;\r\n                    offset = consumeName(source, offset + 1);\r\n                } else {\r\n                    // Otherwise, return a <delim-token> with its value set to the current input code point.\r\n                    type = TYPE.Delim;\r\n                    offset++;\r\n                }\r\n\r\n                break;\r\n\r\n            // U+005B LEFT SQUARE BRACKET ([)\r\n            case 0x005B:\r\n                // Return a <[-token>.\r\n                type = TYPE.LeftSquareBracket;\r\n                offset++;\r\n                break;\r\n\r\n            // U+005C REVERSE SOLIDUS (\\)\r\n            case 0x005C:\r\n                // If the input stream starts with a valid escape, ...\r\n                if (isValidEscape(code, getCharCode(offset + 1))) {\r\n                    // ... reconsume the current input code point, consume an ident-like token, and return it.\r\n                    consumeIdentLikeToken();\r\n                } else {\r\n                    // Otherwise, this is a parse error. Return a <delim-token> with its value set to the current input code point.\r\n                    type = TYPE.Delim;\r\n                    offset++;\r\n                }\r\n                break;\r\n\r\n            // U+005D RIGHT SQUARE BRACKET (])\r\n            case 0x005D:\r\n                // Return a <]-token>.\r\n                type = TYPE.RightSquareBracket;\r\n                offset++;\r\n                break;\r\n\r\n            // U+007B LEFT CURLY BRACKET ({)\r\n            case 0x007B:\r\n                // Return a <{-token>.\r\n                type = TYPE.LeftCurlyBracket;\r\n                offset++;\r\n                break;\r\n\r\n            // U+007D RIGHT CURLY BRACKET (})\r\n            case 0x007D:\r\n                // Return a <}-token>.\r\n                type = TYPE.RightCurlyBracket;\r\n                offset++;\r\n                break;\r\n\r\n            // digit\r\n            case charCodeCategory.Digit:\r\n                // Reconsume the current input code point, consume a numeric token, and return it.\r\n                consumeNumericToken();\r\n                break;\r\n\r\n            // name-start code point\r\n            case charCodeCategory.NameStart:\r\n                // Reconsume the current input code point, consume an ident-like token, and return it.\r\n                consumeIdentLikeToken();\r\n                break;\r\n\r\n            // EOF\r\n            case charCodeCategory.Eof:\r\n                // Return an <EOF-token>.\r\n                break;\r\n\r\n            // anything else\r\n            default:\r\n                // Return a <delim-token> with its value set to the current input code point.\r\n                type = TYPE.Delim;\r\n                offset++;\r\n        }\r\n\r\n        switch (type) {\r\n            case balanceCloseType:\r\n                balancePrev = balanceStart & OFFSET_MASK;\r\n                balanceStart = balance[balancePrev];\r\n                balanceCloseType = balanceStart >> TYPE_SHIFT;\r\n                balance[tokenCount] = balancePrev;\r\n                balance[balancePrev++] = tokenCount;\r\n                for (; balancePrev < tokenCount; balancePrev++) {\r\n                    if (balance[balancePrev] === sourceLength) {\r\n                        balance[balancePrev] = tokenCount;\r\n                    }\r\n                }\r\n                break;\r\n\r\n            case TYPE.LeftParenthesis:\r\n            case TYPE.Function:\r\n                balance[tokenCount] = balanceStart;\r\n                balanceCloseType = TYPE.RightParenthesis;\r\n                balanceStart = (balanceCloseType << TYPE_SHIFT) | tokenCount;\r\n                break;\r\n\r\n            case TYPE.LeftSquareBracket:\r\n                balance[tokenCount] = balanceStart;\r\n                balanceCloseType = TYPE.RightSquareBracket;\r\n                balanceStart = (balanceCloseType << TYPE_SHIFT) | tokenCount;\r\n                break;\r\n\r\n            case TYPE.LeftCurlyBracket:\r\n                balance[tokenCount] = balanceStart;\r\n                balanceCloseType = TYPE.RightCurlyBracket;\r\n                balanceStart = (balanceCloseType << TYPE_SHIFT) | tokenCount;\r\n                break;\r\n        }\r\n\r\n        offsetAndType[tokenCount++] = (type << TYPE_SHIFT) | offset;\r\n    }\r\n\r\n    // finalize buffers\r\n    offsetAndType[tokenCount] = (TYPE.EOF << TYPE_SHIFT) | offset; // <EOF-token>\r\n    balance[tokenCount] = sourceLength;\r\n    balance[sourceLength] = sourceLength; // prevents false positive balance match with any token\r\n    while (balanceStart !== 0) {\r\n        balancePrev = balanceStart & OFFSET_MASK;\r\n        balanceStart = balance[balancePrev];\r\n        balance[balancePrev] = sourceLength;\r\n    }\r\n\r\n    // update stream\r\n    stream.source = source;\r\n    stream.firstCharOffset = start;\r\n    stream.offsetAndType = offsetAndType;\r\n    stream.tokenCount = tokenCount;\r\n    stream.balance = balance;\r\n    stream.reset();\r\n    stream.next();\r\n\r\n    return stream;\r\n}\r\n\r\n// extend tokenizer with constants\r\nObject.keys(constants).forEach(function(key) {\r\n    tokenize[key] = constants[key];\r\n});\r\n\r\n// extend tokenizer with static methods from utils\r\nObject.keys(charCodeDefinitions).forEach(function(key) {\r\n    tokenize[key] = charCodeDefinitions[key];\r\n});\r\nObject.keys(utils).forEach(function(key) {\r\n    tokenize[key] = utils[key];\r\n});\r\n\r\nmodule.exports = tokenize;\r\n","var isDigit = require('../tokenizer').isDigit;\r\nvar cmpChar = require('../tokenizer').cmpChar;\r\nvar TYPE = require('../tokenizer').TYPE;\r\n\r\nvar DELIM = TYPE.Delim;\r\nvar WHITESPACE = TYPE.WhiteSpace;\r\nvar COMMENT = TYPE.Comment;\r\nvar IDENT = TYPE.Ident;\r\nvar NUMBER = TYPE.Number;\r\nvar DIMENSION = TYPE.Dimension;\r\nvar PLUSSIGN = 0x002B;    // U+002B PLUS SIGN (+)\r\nvar HYPHENMINUS = 0x002D; // U+002D HYPHEN-MINUS (-)\r\nvar N = 0x006E;           // U+006E LATIN SMALL LETTER N (n)\r\nvar DISALLOW_SIGN = true;\r\nvar ALLOW_SIGN = false;\r\n\r\nfunction isDelim(token, code) {\r\n    return token !== null && token.type === DELIM && token.value.charCodeAt(0) === code;\r\n}\r\n\r\nfunction skipSC(token, offset, getNextToken) {\r\n    while (token !== null && (token.type === WHITESPACE || token.type === COMMENT)) {\r\n        token = getNextToken(++offset);\r\n    }\r\n\r\n    return offset;\r\n}\r\n\r\nfunction checkInteger(token, valueOffset, disallowSign, offset) {\r\n    if (!token) {\r\n        return 0;\r\n    }\r\n\r\n    var code = token.value.charCodeAt(valueOffset);\r\n\r\n    if (code === PLUSSIGN || code === HYPHENMINUS) {\r\n        if (disallowSign) {\r\n            // Number sign is not allowed\r\n            return 0;\r\n        }\r\n        valueOffset++;\r\n    }\r\n\r\n    for (; valueOffset < token.value.length; valueOffset++) {\r\n        if (!isDigit(token.value.charCodeAt(valueOffset))) {\r\n            // Integer is expected\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    return offset + 1;\r\n}\r\n\r\n// ... <signed-integer>\r\n// ... ['+' | '-'] <signless-integer>\r\nfunction consumeB(token, offset_, getNextToken) {\r\n    var sign = false;\r\n    var offset = skipSC(token, offset_, getNextToken);\r\n\r\n    token = getNextToken(offset);\r\n\r\n    if (token === null) {\r\n        return offset_;\r\n    }\r\n\r\n    if (token.type !== NUMBER) {\r\n        if (isDelim(token, PLUSSIGN) || isDelim(token, HYPHENMINUS)) {\r\n            sign = true;\r\n            offset = skipSC(getNextToken(++offset), offset, getNextToken);\r\n            token = getNextToken(offset);\r\n\r\n            if (token === null && token.type !== NUMBER) {\r\n                return 0;\r\n            }\r\n        } else {\r\n            return offset_;\r\n        }\r\n    }\r\n\r\n    if (!sign) {\r\n        var code = token.value.charCodeAt(0);\r\n        if (code !== PLUSSIGN && code !== HYPHENMINUS) {\r\n            // Number sign is expected\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    return checkInteger(token, sign ? 0 : 1, sign, offset);\r\n}\r\n\r\n// An+B microsyntax https://www.w3.org/TR/css-syntax-3/#anb\r\nmodule.exports = function anPlusB(token, getNextToken) {\r\n    /* eslint-disable brace-style*/\r\n    var offset = 0;\r\n\r\n    if (!token) {\r\n        return 0;\r\n    }\r\n\r\n    // <integer>\r\n    if (token.type === NUMBER) {\r\n        return checkInteger(token, 0, ALLOW_SIGN, offset); // b\r\n    }\r\n\r\n    // -n\r\n    // -n <signed-integer>\r\n    // -n ['+' | '-'] <signless-integer>\r\n    // -n- <signless-integer>\r\n    // <dashndashdigit-ident>\r\n    else if (token.type === IDENT && token.value.charCodeAt(0) === HYPHENMINUS) {\r\n        // expect 1st char is N\r\n        if (!cmpChar(token.value, 1, N)) {\r\n            return 0;\r\n        }\r\n\r\n        switch (token.value.length) {\r\n            // -n\r\n            // -n <signed-integer>\r\n            // -n ['+' | '-'] <signless-integer>\r\n            case 2:\r\n                return consumeB(getNextToken(++offset), offset, getNextToken);\r\n\r\n            // -n- <signless-integer>\r\n            case 3:\r\n                if (token.value.charCodeAt(2) !== HYPHENMINUS) {\r\n                    return 0;\r\n                }\r\n\r\n                offset = skipSC(getNextToken(++offset), offset, getNextToken);\r\n                token = getNextToken(offset);\r\n\r\n                return checkInteger(token, 0, DISALLOW_SIGN, offset);\r\n\r\n            // <dashndashdigit-ident>\r\n            default:\r\n                if (token.value.charCodeAt(2) !== HYPHENMINUS) {\r\n                    return 0;\r\n                }\r\n\r\n                return checkInteger(token, 3, DISALLOW_SIGN, offset);\r\n        }\r\n    }\r\n\r\n    // '+'? n\r\n    // '+'? n <signed-integer>\r\n    // '+'? n ['+' | '-'] <signless-integer>\r\n    // '+'? n- <signless-integer>\r\n    // '+'? <ndashdigit-ident>\r\n    else if (token.type === IDENT || (isDelim(token, PLUSSIGN) && getNextToken(offset + 1).type === IDENT)) {\r\n        // just ignore a plus\r\n        if (token.type !== IDENT) {\r\n            token = getNextToken(++offset);\r\n        }\r\n\r\n        if (token === null || !cmpChar(token.value, 0, N)) {\r\n            return 0;\r\n        }\r\n\r\n        switch (token.value.length) {\r\n            // '+'? n\r\n            // '+'? n <signed-integer>\r\n            // '+'? n ['+' | '-'] <signless-integer>\r\n            case 1:\r\n                return consumeB(getNextToken(++offset), offset, getNextToken);\r\n\r\n            // '+'? n- <signless-integer>\r\n            case 2:\r\n                if (token.value.charCodeAt(1) !== HYPHENMINUS) {\r\n                    return 0;\r\n                }\r\n\r\n                offset = skipSC(getNextToken(++offset), offset, getNextToken);\r\n                token = getNextToken(offset);\r\n\r\n                return checkInteger(token, 0, DISALLOW_SIGN, offset);\r\n\r\n            // '+'? <ndashdigit-ident>\r\n            default:\r\n                if (token.value.charCodeAt(1) !== HYPHENMINUS) {\r\n                    return 0;\r\n                }\r\n\r\n                return checkInteger(token, 2, DISALLOW_SIGN, offset);\r\n        }\r\n    }\r\n\r\n    // <ndashdigit-dimension>\r\n    // <ndash-dimension> <signless-integer>\r\n    // <n-dimension>\r\n    // <n-dimension> <signed-integer>\r\n    // <n-dimension> ['+' | '-'] <signless-integer>\r\n    else if (token.type === DIMENSION) {\r\n        var code = token.value.charCodeAt(0);\r\n        var sign = code === PLUSSIGN || code === HYPHENMINUS ? 1 : 0;\r\n\r\n        for (var i = sign; i < token.value.length; i++) {\r\n            if (!isDigit(token.value.charCodeAt(i))) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (i === sign) {\r\n            // Integer is expected\r\n            return 0;\r\n        }\r\n\r\n        if (!cmpChar(token.value, i, N)) {\r\n            return 0;\r\n        }\r\n\r\n        // <n-dimension>\r\n        // <n-dimension> <signed-integer>\r\n        // <n-dimension> ['+' | '-'] <signless-integer>\r\n        if (i + 1 === token.value.length) {\r\n            return consumeB(getNextToken(++offset), offset, getNextToken);\r\n        } else {\r\n            if (token.value.charCodeAt(i + 1) !== HYPHENMINUS) {\r\n                return 0;\r\n            }\r\n\r\n            // <ndash-dimension> <signless-integer>\r\n            if (i + 2 === token.value.length) {\r\n                offset = skipSC(getNextToken(++offset), offset, getNextToken);\r\n                token = getNextToken(offset);\r\n\r\n                return checkInteger(token, 0, DISALLOW_SIGN, offset);\r\n            }\r\n            // <ndashdigit-dimension>\r\n            else {\r\n                return checkInteger(token, i + 2, DISALLOW_SIGN, offset);\r\n            }\r\n        }\r\n    }\r\n\r\n    return 0;\r\n};\r\n","var isHexDigit = require('../tokenizer').isHexDigit;\r\nvar cmpChar = require('../tokenizer').cmpChar;\r\nvar TYPE = require('../tokenizer').TYPE;\r\n\r\nvar IDENT = TYPE.Ident;\r\nvar DELIM = TYPE.Delim;\r\nvar NUMBER = TYPE.Number;\r\nvar DIMENSION = TYPE.Dimension;\r\nvar PLUSSIGN = 0x002B;     // U+002B PLUS SIGN (+)\r\nvar HYPHENMINUS = 0x002D;  // U+002D HYPHEN-MINUS (-)\r\nvar QUESTIONMARK = 0x003F; // U+003F QUESTION MARK (?)\r\nvar U = 0x0075;            // U+0075 LATIN SMALL LETTER U (u)\r\n\r\nfunction isDelim(token, code) {\r\n    return token !== null && token.type === DELIM && token.value.charCodeAt(0) === code;\r\n}\r\n\r\nfunction startsWith(token, code) {\r\n    return token.value.charCodeAt(0) === code;\r\n}\r\n\r\nfunction hexSequence(token, offset, allowDash) {\r\n    for (var pos = offset, hexlen = 0; pos < token.value.length; pos++) {\r\n        var code = token.value.charCodeAt(pos);\r\n\r\n        if (code === HYPHENMINUS && allowDash && hexlen !== 0) {\r\n            if (hexSequence(token, offset + hexlen + 1, false) > 0) {\r\n                return 6; // dissallow following question marks\r\n            }\r\n\r\n            return 0; // dash at the ending of a hex sequence is not allowed\r\n        }\r\n\r\n        if (!isHexDigit(code)) {\r\n            return 0; // not a hex digit\r\n        }\r\n\r\n        if (++hexlen > 6) {\r\n            return 0; // too many hex digits\r\n        };\r\n    }\r\n\r\n    return hexlen;\r\n}\r\n\r\nfunction withQuestionMarkSequence(consumed, length, getNextToken) {\r\n    if (!consumed) {\r\n        return 0; // nothing consumed\r\n    }\r\n\r\n    while (isDelim(getNextToken(length), QUESTIONMARK)) {\r\n        if (++consumed > 6) {\r\n            return 0; // too many question marks\r\n        }\r\n\r\n        length++;\r\n    }\r\n\r\n    return length;\r\n}\r\n\r\n// https://drafts.csswg.org/css-syntax/#urange\r\n// Informally, the <urange> production has three forms:\r\n// U+0001\r\n//      Defines a range consisting of a single code point, in this case the code point \"1\".\r\n// U+0001-00ff\r\n//      Defines a range of codepoints between the first and the second value, in this case\r\n//      the range between \"1\" and \"ff\" (255 in decimal) inclusive.\r\n// U+00??\r\n//      Defines a range of codepoints where the \"?\" characters range over all hex digits,\r\n//      in this case defining the same as the value U+0000-00ff.\r\n// In each form, a maximum of 6 digits is allowed for each hexadecimal number (if you treat \"?\" as a hexadecimal digit).\r\n//\r\n// <urange> =\r\n//   u '+' <ident-token> '?'* |\r\n//   u <dimension-token> '?'* |\r\n//   u <number-token> '?'* |\r\n//   u <number-token> <dimension-token> |\r\n//   u <number-token> <number-token> |\r\n//   u '+' '?'+\r\nmodule.exports = function urange(token, getNextToken) {\r\n    var length = 0;\r\n\r\n    // should start with `u` or `U`\r\n    if (token === null || token.type !== IDENT || !cmpChar(token.value, 0, U)) {\r\n        return 0;\r\n    }\r\n\r\n    token = getNextToken(++length);\r\n    if (token === null) {\r\n        return 0;\r\n    }\r\n\r\n    // u '+' <ident-token> '?'*\r\n    // u '+' '?'+\r\n    if (isDelim(token, PLUSSIGN)) {\r\n        token = getNextToken(++length);\r\n        if (token === null) {\r\n            return 0;\r\n        }\r\n\r\n        if (token.type === IDENT) {\r\n            // u '+' <ident-token> '?'*\r\n            return withQuestionMarkSequence(hexSequence(token, 0, true), ++length, getNextToken);\r\n        }\r\n\r\n        if (isDelim(token, QUESTIONMARK)) {\r\n            // u '+' '?'+\r\n            return withQuestionMarkSequence(1, ++length, getNextToken);\r\n        }\r\n\r\n        // Hex digit or question mark is expected\r\n        return 0;\r\n    }\r\n\r\n    // u <number-token> '?'*\r\n    // u <number-token> <dimension-token>\r\n    // u <number-token> <number-token>\r\n    if (token.type === NUMBER) {\r\n        if (!startsWith(token, PLUSSIGN)) {\r\n            return 0;\r\n        }\r\n\r\n        var consumedHexLength = hexSequence(token, 1, true);\r\n        if (consumedHexLength === 0) {\r\n            return 0;\r\n        }\r\n\r\n        token = getNextToken(++length);\r\n        if (token === null) {\r\n            // u <number-token> <eof>\r\n            return length;\r\n        }\r\n\r\n        if (token.type === DIMENSION || token.type === NUMBER) {\r\n            // u <number-token> <dimension-token>\r\n            // u <number-token> <number-token>\r\n            if (!startsWith(token, HYPHENMINUS) || !hexSequence(token, 1, false)) {\r\n                return 0;\r\n            }\r\n\r\n            return length + 1;\r\n        }\r\n\r\n        // u <number-token> '?'*\r\n        return withQuestionMarkSequence(consumedHexLength, length, getNextToken);\r\n    }\r\n\r\n    // u <dimension-token> '?'*\r\n    if (token.type === DIMENSION) {\r\n        if (!startsWith(token, PLUSSIGN)) {\r\n            return 0;\r\n        }\r\n\r\n        return withQuestionMarkSequence(hexSequence(token, 1, true), ++length, getNextToken);\r\n    }\r\n\r\n    return 0;\r\n};\r\n","var tokenizer = require('../tokenizer');\r\nvar isIdentifierStart = tokenizer.isIdentifierStart;\r\nvar isHexDigit = tokenizer.isHexDigit;\r\nvar isDigit = tokenizer.isDigit;\r\nvar cmpStr = tokenizer.cmpStr;\r\nvar consumeNumber = tokenizer.consumeNumber;\r\nvar TYPE = tokenizer.TYPE;\r\nvar anPlusB = require('./generic-an-plus-b');\r\nvar urange = require('./generic-urange');\r\n\r\nvar cssWideKeywords = ['unset', 'initial', 'inherit'];\r\nvar calcFunctionNames = ['calc(', '-moz-calc(', '-webkit-calc('];\r\n\r\n// https://www.w3.org/TR/css-values-3/#lengths\r\nvar LENGTH = {\r\n    // absolute length units\r\n    'px': true,\r\n    'mm': true,\r\n    'cm': true,\r\n    'in': true,\r\n    'pt': true,\r\n    'pc': true,\r\n    'q': true,\r\n\r\n    // relative length units\r\n    'em': true,\r\n    'ex': true,\r\n    'ch': true,\r\n    'rem': true,\r\n\r\n    // viewport-percentage lengths\r\n    'vh': true,\r\n    'vw': true,\r\n    'vmin': true,\r\n    'vmax': true,\r\n    'vm': true\r\n};\r\n\r\nvar ANGLE = {\r\n    'deg': true,\r\n    'grad': true,\r\n    'rad': true,\r\n    'turn': true\r\n};\r\n\r\nvar TIME = {\r\n    's': true,\r\n    'ms': true\r\n};\r\n\r\nvar FREQUENCY = {\r\n    'hz': true,\r\n    'khz': true\r\n};\r\n\r\n// https://www.w3.org/TR/css-values-3/#resolution (https://drafts.csswg.org/css-values/#resolution)\r\nvar RESOLUTION = {\r\n    'dpi': true,\r\n    'dpcm': true,\r\n    'dppx': true,\r\n    'x': true      // https://github.com/w3c/csswg-drafts/issues/461\r\n};\r\n\r\n// https://drafts.csswg.org/css-grid/#fr-unit\r\nvar FLEX = {\r\n    'fr': true\r\n};\r\n\r\n// https://www.w3.org/TR/css3-speech/#mixing-props-voice-volume\r\nvar DECIBEL = {\r\n    'db': true\r\n};\r\n\r\n// https://www.w3.org/TR/css3-speech/#voice-props-voice-pitch\r\nvar SEMITONES = {\r\n    'st': true\r\n};\r\n\r\n// safe char code getter\r\nfunction charCode(str, index) {\r\n    return index < str.length ? str.charCodeAt(index) : 0;\r\n}\r\n\r\nfunction eqStr(actual, expected) {\r\n    return cmpStr(actual, 0, actual.length, expected);\r\n}\r\n\r\nfunction eqStrAny(actual, expected) {\r\n    for (var i = 0; i < expected.length; i++) {\r\n        if (eqStr(actual, expected[i])) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\n// IE postfix hack, i.e. 123\\0 or 123px\\9\r\nfunction isPostfixIeHack(str, offset) {\r\n    if (offset !== str.length - 2) {\r\n        return false;\r\n    }\r\n\r\n    return (\r\n        str.charCodeAt(offset) === 0x005C &&  // U+005C REVERSE SOLIDUS (\\)\r\n        isDigit(str.charCodeAt(offset + 1))\r\n    );\r\n}\r\n\r\nfunction outOfRange(opts, value, numEnd) {\r\n    if (opts && opts.type === 'Range') {\r\n        var num = Number(\r\n            numEnd !== undefined && numEnd !== value.length\r\n                ? value.substr(0, numEnd)\r\n                : value\r\n        );\r\n\r\n        if (isNaN(num)) {\r\n            return true;\r\n        }\r\n\r\n        if (opts.min !== null && num < opts.min) {\r\n            return true;\r\n        }\r\n\r\n        if (opts.max !== null && num > opts.max) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\nfunction consumeFunction(token, getNextToken) {\r\n    var startIdx = token.index;\r\n    var length = 0;\r\n\r\n    // balanced token consuming\r\n    do {\r\n        length++;\r\n\r\n        if (token.balance <= startIdx) {\r\n            break;\r\n        }\r\n    } while (token = getNextToken(length));\r\n\r\n    return length;\r\n}\r\n\r\n// TODO: implement\r\n// can be used wherever <length>, <frequency>, <angle>, <time>, <percentage>, <number>, or <integer> values are allowed\r\n// https://drafts.csswg.org/css-values/#calc-notation\r\nfunction calc(next) {\r\n    return function(token, getNextToken, opts) {\r\n        if (token === null) {\r\n            return 0;\r\n        }\r\n\r\n        if (token.type === TYPE.Function && eqStrAny(token.value, calcFunctionNames)) {\r\n            return consumeFunction(token, getNextToken);\r\n        }\r\n\r\n        return next(token, getNextToken, opts);\r\n    };\r\n}\r\n\r\nfunction tokenType(expectedTokenType) {\r\n    return function(token) {\r\n        if (token === null || token.type !== expectedTokenType) {\r\n            return 0;\r\n        }\r\n\r\n        return 1;\r\n    };\r\n}\r\n\r\nfunction func(name) {\r\n    name = name + '(';\r\n\r\n    return function(token, getNextToken) {\r\n        if (token !== null && eqStr(token.value, name)) {\r\n            return consumeFunction(token, getNextToken);\r\n        }\r\n\r\n        return 0;\r\n    };\r\n}\r\n\r\n// =========================\r\n// Complex types\r\n//\r\n\r\n// https://drafts.csswg.org/css-values-4/#custom-idents\r\n// 4.2. Author-defined Identifiers: the <custom-ident> type\r\n// Some properties accept arbitrary author-defined identifiers as a component value.\r\n// This generic data type is denoted by <custom-ident>, and represents any valid CSS identifier\r\n// that would not be misinterpreted as a pre-defined keyword in that property’s value definition.\r\n//\r\n// See also: https://developer.mozilla.org/en-US/docs/Web/CSS/custom-ident\r\nfunction customIdent(token) {\r\n    if (token === null || token.type !== TYPE.Ident) {\r\n        return 0;\r\n    }\r\n\r\n    var name = token.value.toLowerCase();\r\n\r\n    // The CSS-wide keywords are not valid <custom-ident>s\r\n    if (eqStrAny(name, cssWideKeywords)) {\r\n        return 0;\r\n    }\r\n\r\n    // The default keyword is reserved and is also not a valid <custom-ident>\r\n    if (eqStr(name, 'default')) {\r\n        return 0;\r\n    }\r\n\r\n    // TODO: ignore property specific keywords (as described https://developer.mozilla.org/en-US/docs/Web/CSS/custom-ident)\r\n    // Specifications using <custom-ident> must specify clearly what other keywords\r\n    // are excluded from <custom-ident>, if any—for example by saying that any pre-defined keywords\r\n    // in that property’s value definition are excluded. Excluded keywords are excluded\r\n    // in all ASCII case permutations.\r\n\r\n    return 1;\r\n}\r\n\r\n// https://drafts.csswg.org/css-variables/#typedef-custom-property-name\r\n// A custom property is any property whose name starts with two dashes (U+002D HYPHEN-MINUS), like --foo.\r\n// The <custom-property-name> production corresponds to this: it’s defined as any valid identifier\r\n// that starts with two dashes, except -- itself, which is reserved for future use by CSS.\r\n// NOTE: Current implementation treat `--` as a valid name since most (all?) major browsers treat it as valid.\r\nfunction customPropertyName(token) {\r\n    // ... defined as any valid identifier\r\n    if (token === null || token.type !== TYPE.Ident) {\r\n        return 0;\r\n    }\r\n\r\n    // ... that starts with two dashes (U+002D HYPHEN-MINUS)\r\n    if (charCode(token.value, 0) !== 0x002D || charCode(token.value, 1) !== 0x002D) {\r\n        return 0;\r\n    }\r\n\r\n    return 1;\r\n}\r\n\r\n// https://drafts.csswg.org/css-color-4/#hex-notation\r\n// The syntax of a <hex-color> is a <hash-token> token whose value consists of 3, 4, 6, or 8 hexadecimal digits.\r\n// In other words, a hex color is written as a hash character, \"#\", followed by some number of digits 0-9 or\r\n// letters a-f (the case of the letters doesn’t matter - #00ff00 is identical to #00FF00).\r\nfunction hexColor(token) {\r\n    if (token === null || token.type !== TYPE.Hash) {\r\n        return 0;\r\n    }\r\n\r\n    var length = token.value.length;\r\n\r\n    // valid values (length): #rgb (4), #rgba (5), #rrggbb (7), #rrggbbaa (9)\r\n    if (length !== 4 && length !== 5 && length !== 7 && length !== 9) {\r\n        return 0;\r\n    }\r\n\r\n    for (var i = 1; i < length; i++) {\r\n        if (!isHexDigit(token.value.charCodeAt(i))) {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    return 1;\r\n}\r\n\r\nfunction idSelector(token) {\r\n    if (token === null || token.type !== TYPE.Hash) {\r\n        return 0;\r\n    }\r\n\r\n    if (!isIdentifierStart(charCode(token.value, 1), charCode(token.value, 2), charCode(token.value, 3))) {\r\n        return 0;\r\n    }\r\n\r\n    return 1;\r\n}\r\n\r\n// https://drafts.csswg.org/css-syntax/#any-value\r\n// It represents the entirety of what a valid declaration can have as its value.\r\nfunction declarationValue(token, getNextToken) {\r\n    if (!token) {\r\n        return 0;\r\n    }\r\n\r\n    var length = 0;\r\n    var level = 0;\r\n    var startIdx = token.index;\r\n\r\n    // The <declaration-value> production matches any sequence of one or more tokens,\r\n    // so long as the sequence ...\r\n    scan:\r\n    do {\r\n        switch (token.type) {\r\n            // ... does not contain <bad-string-token>, <bad-url-token>,\r\n            case TYPE.BadString:\r\n            case TYPE.BadUrl:\r\n                break scan;\r\n\r\n            // ... unmatched <)-token>, <]-token>, or <}-token>,\r\n            case TYPE.RightCurlyBracket:\r\n            case TYPE.RightParenthesis:\r\n            case TYPE.RightSquareBracket:\r\n                if (token.balance > token.index || token.balance < startIdx) {\r\n                    break scan;\r\n                }\r\n\r\n                level--;\r\n                break;\r\n\r\n            // ... or top-level <semicolon-token> tokens\r\n            case TYPE.Semicolon:\r\n                if (level === 0) {\r\n                    break scan;\r\n                }\r\n\r\n                break;\r\n\r\n            // ... or <delim-token> tokens with a value of \"!\"\r\n            case TYPE.Delim:\r\n                if (token.value === '!' && level === 0) {\r\n                    break scan;\r\n                }\r\n\r\n                break;\r\n\r\n            case TYPE.Function:\r\n            case TYPE.LeftParenthesis:\r\n            case TYPE.LeftSquareBracket:\r\n            case TYPE.LeftCurlyBracket:\r\n                level++;\r\n                break;\r\n        }\r\n\r\n        length++;\r\n\r\n        // until balance closing\r\n        if (token.balance <= startIdx) {\r\n            break;\r\n        }\r\n    } while (token = getNextToken(length));\r\n\r\n    return length;\r\n}\r\n\r\n// https://drafts.csswg.org/css-syntax/#any-value\r\n// The <any-value> production is identical to <declaration-value>, but also\r\n// allows top-level <semicolon-token> tokens and <delim-token> tokens\r\n// with a value of \"!\". It represents the entirety of what valid CSS can be in any context.\r\nfunction anyValue(token, getNextToken) {\r\n    if (!token) {\r\n        return 0;\r\n    }\r\n\r\n    var startIdx = token.index;\r\n    var length = 0;\r\n\r\n    // The <any-value> production matches any sequence of one or more tokens,\r\n    // so long as the sequence ...\r\n    scan:\r\n    do {\r\n        switch (token.type) {\r\n            // ... does not contain <bad-string-token>, <bad-url-token>,\r\n            case TYPE.BadString:\r\n            case TYPE.BadUrl:\r\n                break scan;\r\n\r\n            // ... unmatched <)-token>, <]-token>, or <}-token>,\r\n            case TYPE.RightCurlyBracket:\r\n            case TYPE.RightParenthesis:\r\n            case TYPE.RightSquareBracket:\r\n                if (token.balance > token.index || token.balance < startIdx) {\r\n                    break scan;\r\n                }\r\n\r\n                break;\r\n        }\r\n\r\n        length++;\r\n\r\n        // until balance closing\r\n        if (token.balance <= startIdx) {\r\n            break;\r\n        }\r\n    } while (token = getNextToken(length));\r\n\r\n    return length;\r\n}\r\n\r\n// =========================\r\n// Dimensions\r\n//\r\n\r\nfunction dimension(type) {\r\n    return function(token, getNextToken, opts) {\r\n        if (token === null || token.type !== TYPE.Dimension) {\r\n            return 0;\r\n        }\r\n\r\n        var numberEnd = consumeNumber(token.value, 0);\r\n\r\n        // check unit\r\n        if (type !== null) {\r\n            // check for IE postfix hack, i.e. 123px\\0 or 123px\\9\r\n            var reverseSolidusOffset = token.value.indexOf('\\\\', numberEnd);\r\n            var unit = reverseSolidusOffset === -1 || !isPostfixIeHack(token.value, reverseSolidusOffset)\r\n                ? token.value.substr(numberEnd)\r\n                : token.value.substring(numberEnd, reverseSolidusOffset);\r\n\r\n            if (type.hasOwnProperty(unit.toLowerCase()) === false) {\r\n                return 0;\r\n            }\r\n        }\r\n\r\n        // check range if specified\r\n        if (outOfRange(opts, token.value, numberEnd)) {\r\n            return 0;\r\n        }\r\n\r\n        return 1;\r\n    };\r\n}\r\n\r\n// =========================\r\n// Percentage\r\n//\r\n\r\n// §5.5. Percentages: the <percentage> type\r\n// https://drafts.csswg.org/css-values-4/#percentages\r\nfunction percentage(token, getNextToken, opts) {\r\n    // ... corresponds to the <percentage-token> production\r\n    if (token === null || token.type !== TYPE.Percentage) {\r\n        return 0;\r\n    }\r\n\r\n    // check range if specified\r\n    if (outOfRange(opts, token.value, token.value.length - 1)) {\r\n        return 0;\r\n    }\r\n\r\n    return 1;\r\n}\r\n\r\n// =========================\r\n// Numeric\r\n//\r\n\r\n// https://drafts.csswg.org/css-values-4/#numbers\r\n// The value <zero> represents a literal number with the value 0. Expressions that merely\r\n// evaluate to a <number> with the value 0 (for example, calc(0)) do not match <zero>;\r\n// only literal <number-token>s do.\r\nfunction zero(next) {\r\n    if (typeof next !== 'function') {\r\n        next = function() {\r\n            return 0;\r\n        };\r\n    }\r\n\r\n    return function(token, getNextToken, opts) {\r\n        if (token !== null && token.type === TYPE.Number) {\r\n            if (Number(token.value) === 0) {\r\n                return 1;\r\n            }\r\n        }\r\n\r\n        return next(token, getNextToken, opts);\r\n    };\r\n}\r\n\r\n// § 5.3. Real Numbers: the <number> type\r\n// https://drafts.csswg.org/css-values-4/#numbers\r\n// Number values are denoted by <number>, and represent real numbers, possibly with a fractional component.\r\n// ... It corresponds to the <number-token> production\r\nfunction number(token, getNextToken, opts) {\r\n    if (token === null) {\r\n        return 0;\r\n    }\r\n\r\n    var numberEnd = consumeNumber(token.value, 0);\r\n    var isNumber = numberEnd === token.value.length;\r\n    if (!isNumber && !isPostfixIeHack(token.value, numberEnd)) {\r\n        return 0;\r\n    }\r\n\r\n    // check range if specified\r\n    if (outOfRange(opts, token.value, numberEnd)) {\r\n        return 0;\r\n    }\r\n\r\n    return 1;\r\n}\r\n\r\n// §5.2. Integers: the <integer> type\r\n// https://drafts.csswg.org/css-values-4/#integers\r\nfunction integer(token, getNextToken, opts) {\r\n    // ... corresponds to a subset of the <number-token> production\r\n    if (token === null || token.type !== TYPE.Number) {\r\n        return 0;\r\n    }\r\n\r\n    // The first digit of an integer may be immediately preceded by `-` or `+` to indicate the integer’s sign.\r\n    var i = token.value.charCodeAt(0) === 0x002B ||       // U+002B PLUS SIGN (+)\r\n            token.value.charCodeAt(0) === 0x002D ? 1 : 0; // U+002D HYPHEN-MINUS (-)\r\n\r\n    // When written literally, an integer is one or more decimal digits 0 through 9 ...\r\n    for (; i < token.value.length; i++) {\r\n        if (!isDigit(token.value.charCodeAt(i))) {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    // check range if specified\r\n    if (outOfRange(opts, token.value, i)) {\r\n        return 0;\r\n    }\r\n\r\n    return 1;\r\n}\r\n\r\nmodule.exports = {\r\n    // token types\r\n    'ident-token': tokenType(TYPE.Ident),\r\n    'function-token': tokenType(TYPE.Function),\r\n    'at-keyword-token': tokenType(TYPE.AtKeyword),\r\n    'hash-token': tokenType(TYPE.Hash),\r\n    'string-token': tokenType(TYPE.String),\r\n    'bad-string-token': tokenType(TYPE.BadString),\r\n    'url-token': tokenType(TYPE.Url),\r\n    'bad-url-token': tokenType(TYPE.BadUrl),\r\n    'delim-token': tokenType(TYPE.Delim),\r\n    'number-token': tokenType(TYPE.Number),\r\n    'percentage-token': tokenType(TYPE.Percentage),\r\n    'dimension-token': tokenType(TYPE.Dimension),\r\n    'whitespace-token': tokenType(TYPE.WhiteSpace),\r\n    'CDO-token': tokenType(TYPE.CDO),\r\n    'CDC-token': tokenType(TYPE.CDC),\r\n    'colon-token': tokenType(TYPE.Colon),\r\n    'semicolon-token': tokenType(TYPE.Semicolon),\r\n    'comma-token': tokenType(TYPE.Comma),\r\n    '[-token': tokenType(TYPE.LeftSquareBracket),\r\n    ']-token': tokenType(TYPE.RightSquareBracket),\r\n    '(-token': tokenType(TYPE.LeftParenthesis),\r\n    ')-token': tokenType(TYPE.RightParenthesis),\r\n    '{-token': tokenType(TYPE.LeftCurlyBracket),\r\n    '}-token': tokenType(TYPE.RightCurlyBracket),\r\n\r\n    // token type aliases\r\n    'string': tokenType(TYPE.String),\r\n    'ident': tokenType(TYPE.Ident),\r\n\r\n    // complex types\r\n    'custom-ident': customIdent,\r\n    'custom-property-name': customPropertyName,\r\n    'hex-color': hexColor,\r\n    'id-selector': idSelector, // element( <id-selector> )\r\n    'an-plus-b': anPlusB,\r\n    'urange': urange,\r\n    'declaration-value': declarationValue,\r\n    'any-value': anyValue,\r\n\r\n    // dimensions\r\n    'dimension': calc(dimension(null)),\r\n    'angle': calc(dimension(ANGLE)),\r\n    'decibel': calc(dimension(DECIBEL)),\r\n    'frequency': calc(dimension(FREQUENCY)),\r\n    'flex': calc(dimension(FLEX)),\r\n    'length': calc(zero(dimension(LENGTH))),\r\n    'resolution': calc(dimension(RESOLUTION)),\r\n    'semitones': calc(dimension(SEMITONES)),\r\n    'time': calc(dimension(TIME)),\r\n\r\n    // percentage\r\n    'percentage': calc(percentage),\r\n\r\n    // numeric\r\n    'zero': zero(),\r\n    'number': calc(number),\r\n    'integer': calc(integer),\r\n\r\n    // old IE stuff\r\n    '-ms-legacy-expression': func('expression')\r\n};\r\n","var createCustomError = require('../utils/createCustomError');\r\n\r\nmodule.exports = function SyntaxError(message, input, offset) {\r\n    var error = createCustomError('SyntaxError', message);\r\n\r\n    error.input = input;\r\n    error.offset = offset;\r\n    error.rawMessage = message;\r\n    error.message = error.rawMessage + '\\n' +\r\n        '  ' + error.input + '\\n' +\r\n        '--' + new Array((error.offset || error.input.length) + 1).join('-') + '^';\r\n\r\n    return error;\r\n};\r\n","var SyntaxError = require('./SyntaxError');\r\n\r\nvar TAB = 9;\r\nvar N = 10;\r\nvar F = 12;\r\nvar R = 13;\r\nvar SPACE = 32;\r\n\r\nvar Tokenizer = function(str) {\r\n    this.str = str;\r\n    this.pos = 0;\r\n};\r\n\r\nTokenizer.prototype = {\r\n    charCodeAt: function(pos) {\r\n        return pos < this.str.length ? this.str.charCodeAt(pos) : 0;\r\n    },\r\n    charCode: function() {\r\n        return this.charCodeAt(this.pos);\r\n    },\r\n    nextCharCode: function() {\r\n        return this.charCodeAt(this.pos + 1);\r\n    },\r\n    nextNonWsCode: function(pos) {\r\n        return this.charCodeAt(this.findWsEnd(pos));\r\n    },\r\n    findWsEnd: function(pos) {\r\n        for (; pos < this.str.length; pos++) {\r\n            var code = this.str.charCodeAt(pos);\r\n            if (code !== R && code !== N && code !== F && code !== SPACE && code !== TAB) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        return pos;\r\n    },\r\n    substringToPos: function(end) {\r\n        return this.str.substring(this.pos, this.pos = end);\r\n    },\r\n    eat: function(code) {\r\n        if (this.charCode() !== code) {\r\n            this.error('Expect `' + String.fromCharCode(code) + '`');\r\n        }\r\n\r\n        this.pos++;\r\n    },\r\n    peek: function() {\r\n        return this.pos < this.str.length ? this.str.charAt(this.pos++) : '';\r\n    },\r\n    error: function(message) {\r\n        throw new SyntaxError(message, this.str, this.pos);\r\n    }\r\n};\r\n\r\nmodule.exports = Tokenizer;\r\n","var Tokenizer = require('./tokenizer');\r\nvar TAB = 9;\r\nvar N = 10;\r\nvar F = 12;\r\nvar R = 13;\r\nvar SPACE = 32;\r\nvar EXCLAMATIONMARK = 33;    // !\r\nvar NUMBERSIGN = 35;         // #\r\nvar AMPERSAND = 38;          // &\r\nvar APOSTROPHE = 39;         // '\r\nvar LEFTPARENTHESIS = 40;    // (\r\nvar RIGHTPARENTHESIS = 41;   // )\r\nvar ASTERISK = 42;           // *\r\nvar PLUSSIGN = 43;           // +\r\nvar COMMA = 44;              // ,\r\nvar HYPERMINUS = 45;         // -\r\nvar LESSTHANSIGN = 60;       // <\r\nvar GREATERTHANSIGN = 62;    // >\r\nvar QUESTIONMARK = 63;       // ?\r\nvar COMMERCIALAT = 64;       // @\r\nvar LEFTSQUAREBRACKET = 91;  // [\r\nvar RIGHTSQUAREBRACKET = 93; // ]\r\nvar LEFTCURLYBRACKET = 123;  // {\r\nvar VERTICALLINE = 124;      // |\r\nvar RIGHTCURLYBRACKET = 125; // }\r\nvar INFINITY = 8734;         // ∞\r\nvar NAME_CHAR = createCharMap(function(ch) {\r\n    return /[a-zA-Z0-9\\-]/.test(ch);\r\n});\r\nvar COMBINATOR_PRECEDENCE = {\r\n    ' ': 1,\r\n    '&&': 2,\r\n    '||': 3,\r\n    '|': 4\r\n};\r\n\r\nfunction createCharMap(fn) {\r\n    var array = typeof Uint32Array === 'function' ? new Uint32Array(128) : new Array(128);\r\n    for (var i = 0; i < 128; i++) {\r\n        array[i] = fn(String.fromCharCode(i)) ? 1 : 0;\r\n    }\r\n    return array;\r\n}\r\n\r\nfunction scanSpaces(tokenizer) {\r\n    return tokenizer.substringToPos(\r\n        tokenizer.findWsEnd(tokenizer.pos)\r\n    );\r\n}\r\n\r\nfunction scanWord(tokenizer) {\r\n    var end = tokenizer.pos;\r\n\r\n    for (; end < tokenizer.str.length; end++) {\r\n        var code = tokenizer.str.charCodeAt(end);\r\n        if (code >= 128 || NAME_CHAR[code] === 0) {\r\n            break;\r\n        }\r\n    }\r\n\r\n    if (tokenizer.pos === end) {\r\n        tokenizer.error('Expect a keyword');\r\n    }\r\n\r\n    return tokenizer.substringToPos(end);\r\n}\r\n\r\nfunction scanNumber(tokenizer) {\r\n    var end = tokenizer.pos;\r\n\r\n    for (; end < tokenizer.str.length; end++) {\r\n        var code = tokenizer.str.charCodeAt(end);\r\n        if (code < 48 || code > 57) {\r\n            break;\r\n        }\r\n    }\r\n\r\n    if (tokenizer.pos === end) {\r\n        tokenizer.error('Expect a number');\r\n    }\r\n\r\n    return tokenizer.substringToPos(end);\r\n}\r\n\r\nfunction scanString(tokenizer) {\r\n    var end = tokenizer.str.indexOf('\\'', tokenizer.pos + 1);\r\n\r\n    if (end === -1) {\r\n        tokenizer.pos = tokenizer.str.length;\r\n        tokenizer.error('Expect an apostrophe');\r\n    }\r\n\r\n    return tokenizer.substringToPos(end + 1);\r\n}\r\n\r\nfunction readMultiplierRange(tokenizer) {\r\n    var min = null;\r\n    var max = null;\r\n\r\n    tokenizer.eat(LEFTCURLYBRACKET);\r\n\r\n    min = scanNumber(tokenizer);\r\n\r\n    if (tokenizer.charCode() === COMMA) {\r\n        tokenizer.pos++;\r\n        if (tokenizer.charCode() !== RIGHTCURLYBRACKET) {\r\n            max = scanNumber(tokenizer);\r\n        }\r\n    } else {\r\n        max = min;\r\n    }\r\n\r\n    tokenizer.eat(RIGHTCURLYBRACKET);\r\n\r\n    return {\r\n        min: Number(min),\r\n        max: max ? Number(max) : 0\r\n    };\r\n}\r\n\r\nfunction readMultiplier(tokenizer) {\r\n    var range = null;\r\n    var comma = false;\r\n\r\n    switch (tokenizer.charCode()) {\r\n        case ASTERISK:\r\n            tokenizer.pos++;\r\n\r\n            range = {\r\n                min: 0,\r\n                max: 0\r\n            };\r\n\r\n            break;\r\n\r\n        case PLUSSIGN:\r\n            tokenizer.pos++;\r\n\r\n            range = {\r\n                min: 1,\r\n                max: 0\r\n            };\r\n\r\n            break;\r\n\r\n        case QUESTIONMARK:\r\n            tokenizer.pos++;\r\n\r\n            range = {\r\n                min: 0,\r\n                max: 1\r\n            };\r\n\r\n            break;\r\n\r\n        case NUMBERSIGN:\r\n            tokenizer.pos++;\r\n\r\n            comma = true;\r\n\r\n            if (tokenizer.charCode() === LEFTCURLYBRACKET) {\r\n                range = readMultiplierRange(tokenizer);\r\n            } else {\r\n                range = {\r\n                    min: 1,\r\n                    max: 0\r\n                };\r\n            }\r\n\r\n            break;\r\n\r\n        case LEFTCURLYBRACKET:\r\n            range = readMultiplierRange(tokenizer);\r\n            break;\r\n\r\n        default:\r\n            return null;\r\n    }\r\n\r\n    return {\r\n        type: 'Multiplier',\r\n        comma: comma,\r\n        min: range.min,\r\n        max: range.max,\r\n        term: null\r\n    };\r\n}\r\n\r\nfunction maybeMultiplied(tokenizer, node) {\r\n    var multiplier = readMultiplier(tokenizer);\r\n\r\n    if (multiplier !== null) {\r\n        multiplier.term = node;\r\n        return multiplier;\r\n    }\r\n\r\n    return node;\r\n}\r\n\r\nfunction maybeToken(tokenizer) {\r\n    var ch = tokenizer.peek();\r\n\r\n    if (ch === '') {\r\n        return null;\r\n    }\r\n\r\n    return {\r\n        type: 'Token',\r\n        value: ch\r\n    };\r\n}\r\n\r\nfunction readProperty(tokenizer) {\r\n    var name;\r\n\r\n    tokenizer.eat(LESSTHANSIGN);\r\n    tokenizer.eat(APOSTROPHE);\r\n\r\n    name = scanWord(tokenizer);\r\n\r\n    tokenizer.eat(APOSTROPHE);\r\n    tokenizer.eat(GREATERTHANSIGN);\r\n\r\n    return maybeMultiplied(tokenizer, {\r\n        type: 'Property',\r\n        name: name\r\n    });\r\n}\r\n\r\n// https://drafts.csswg.org/css-values-3/#numeric-ranges\r\n// 4.1. Range Restrictions and Range Definition Notation\r\n//\r\n// Range restrictions can be annotated in the numeric type notation using CSS bracketed\r\n// range notation—[min,max]—within the angle brackets, after the identifying keyword,\r\n// indicating a closed range between (and including) min and max.\r\n// For example, <integer [0, 10]> indicates an integer between 0 and 10, inclusive.\r\nfunction readTypeRange(tokenizer) {\r\n    // use null for Infinity to make AST format JSON serializable/deserializable\r\n    var min = null; // -Infinity\r\n    var max = null; // Infinity\r\n    var sign = 1;\r\n\r\n    tokenizer.eat(LEFTSQUAREBRACKET);\r\n\r\n    if (tokenizer.charCode() === HYPERMINUS) {\r\n        tokenizer.peek();\r\n        sign = -1;\r\n    }\r\n\r\n    if (sign == -1 && tokenizer.charCode() === INFINITY) {\r\n        tokenizer.peek();\r\n    } else {\r\n        min = sign * Number(scanNumber(tokenizer));\r\n    }\r\n\r\n    scanSpaces(tokenizer);\r\n    tokenizer.eat(COMMA);\r\n    scanSpaces(tokenizer);\r\n\r\n    if (tokenizer.charCode() === INFINITY) {\r\n        tokenizer.peek();\r\n    } else {\r\n        sign = 1;\r\n\r\n        if (tokenizer.charCode() === HYPERMINUS) {\r\n            tokenizer.peek();\r\n            sign = -1;\r\n        }\r\n\r\n        max = sign * Number(scanNumber(tokenizer));\r\n    }\r\n\r\n    tokenizer.eat(RIGHTSQUAREBRACKET);\r\n\r\n    // If no range is indicated, either by using the bracketed range notation\r\n    // or in the property description, then [−∞,∞] is assumed.\r\n    if (min === null && max === null) {\r\n        return null;\r\n    }\r\n\r\n    return {\r\n        type: 'Range',\r\n        min: min,\r\n        max: max\r\n    };\r\n}\r\n\r\nfunction readType(tokenizer) {\r\n    var name;\r\n    var opts = null;\r\n\r\n    tokenizer.eat(LESSTHANSIGN);\r\n    name = scanWord(tokenizer);\r\n\r\n    if (tokenizer.charCode() === LEFTPARENTHESIS &&\r\n        tokenizer.nextCharCode() === RIGHTPARENTHESIS) {\r\n        tokenizer.pos += 2;\r\n        name += '()';\r\n    }\r\n\r\n    if (tokenizer.charCodeAt(tokenizer.findWsEnd(tokenizer.pos)) === LEFTSQUAREBRACKET) {\r\n        scanSpaces(tokenizer);\r\n        opts = readTypeRange(tokenizer);\r\n    }\r\n\r\n    tokenizer.eat(GREATERTHANSIGN);\r\n\r\n    return maybeMultiplied(tokenizer, {\r\n        type: 'Type',\r\n        name: name,\r\n        opts: opts\r\n    });\r\n}\r\n\r\nfunction readKeywordOrFunction(tokenizer) {\r\n    var name;\r\n\r\n    name = scanWord(tokenizer);\r\n\r\n    if (tokenizer.charCode() === LEFTPARENTHESIS) {\r\n        tokenizer.pos++;\r\n\r\n        return {\r\n            type: 'Function',\r\n            name: name\r\n        };\r\n    }\r\n\r\n    return maybeMultiplied(tokenizer, {\r\n        type: 'Keyword',\r\n        name: name\r\n    });\r\n}\r\n\r\nfunction regroupTerms(terms, combinators) {\r\n    function createGroup(terms, combinator) {\r\n        return {\r\n            type: 'Group',\r\n            terms: terms,\r\n            combinator: combinator,\r\n            disallowEmpty: false,\r\n            explicit: false\r\n        };\r\n    }\r\n\r\n    combinators = Object.keys(combinators).sort(function(a, b) {\r\n        return COMBINATOR_PRECEDENCE[a] - COMBINATOR_PRECEDENCE[b];\r\n    });\r\n\r\n    while (combinators.length > 0) {\r\n        var combinator = combinators.shift();\r\n        for (var i = 0, subgroupStart = 0; i < terms.length; i++) {\r\n            var term = terms[i];\r\n            if (term.type === 'Combinator') {\r\n                if (term.value === combinator) {\r\n                    if (subgroupStart === -1) {\r\n                        subgroupStart = i - 1;\r\n                    }\r\n                    terms.splice(i, 1);\r\n                    i--;\r\n                } else {\r\n                    if (subgroupStart !== -1 && i - subgroupStart > 1) {\r\n                        terms.splice(\r\n                            subgroupStart,\r\n                            i - subgroupStart,\r\n                            createGroup(terms.slice(subgroupStart, i), combinator)\r\n                        );\r\n                        i = subgroupStart + 1;\r\n                    }\r\n                    subgroupStart = -1;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (subgroupStart !== -1 && combinators.length) {\r\n            terms.splice(\r\n                subgroupStart,\r\n                i - subgroupStart,\r\n                createGroup(terms.slice(subgroupStart, i), combinator)\r\n            );\r\n        }\r\n    }\r\n\r\n    return combinator;\r\n}\r\n\r\nfunction readImplicitGroup(tokenizer) {\r\n    var terms = [];\r\n    var combinators = {};\r\n    var token;\r\n    var prevToken = null;\r\n    var prevTokenPos = tokenizer.pos;\r\n\r\n    while (token = peek(tokenizer)) {\r\n        if (token.type !== 'Spaces') {\r\n            if (token.type === 'Combinator') {\r\n                // check for combinator in group beginning and double combinator sequence\r\n                if (prevToken === null || prevToken.type === 'Combinator') {\r\n                    tokenizer.pos = prevTokenPos;\r\n                    tokenizer.error('Unexpected combinator');\r\n                }\r\n\r\n                combinators[token.value] = true;\r\n            } else if (prevToken !== null && prevToken.type !== 'Combinator') {\r\n                combinators[' '] = true;  // a b\r\n                terms.push({\r\n                    type: 'Combinator',\r\n                    value: ' '\r\n                });\r\n            }\r\n\r\n            terms.push(token);\r\n            prevToken = token;\r\n            prevTokenPos = tokenizer.pos;\r\n        }\r\n    }\r\n\r\n    // check for combinator in group ending\r\n    if (prevToken !== null && prevToken.type === 'Combinator') {\r\n        tokenizer.pos -= prevTokenPos;\r\n        tokenizer.error('Unexpected combinator');\r\n    }\r\n\r\n    return {\r\n        type: 'Group',\r\n        terms: terms,\r\n        combinator: regroupTerms(terms, combinators) || ' ',\r\n        disallowEmpty: false,\r\n        explicit: false\r\n    };\r\n}\r\n\r\nfunction readGroup(tokenizer) {\r\n    var result;\r\n\r\n    tokenizer.eat(LEFTSQUAREBRACKET);\r\n    result = readImplicitGroup(tokenizer);\r\n    tokenizer.eat(RIGHTSQUAREBRACKET);\r\n\r\n    result.explicit = true;\r\n\r\n    if (tokenizer.charCode() === EXCLAMATIONMARK) {\r\n        tokenizer.pos++;\r\n        result.disallowEmpty = true;\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nfunction peek(tokenizer) {\r\n    var code = tokenizer.charCode();\r\n\r\n    if (code < 128 && NAME_CHAR[code] === 1) {\r\n        return readKeywordOrFunction(tokenizer);\r\n    }\r\n\r\n    switch (code) {\r\n        case RIGHTSQUAREBRACKET:\r\n            // don't eat, stop scan a group\r\n            break;\r\n\r\n        case LEFTSQUAREBRACKET:\r\n            return maybeMultiplied(tokenizer, readGroup(tokenizer));\r\n\r\n        case LESSTHANSIGN:\r\n            return tokenizer.nextCharCode() === APOSTROPHE\r\n                ? readProperty(tokenizer)\r\n                : readType(tokenizer);\r\n\r\n        case VERTICALLINE:\r\n            return {\r\n                type: 'Combinator',\r\n                value: tokenizer.substringToPos(\r\n                    tokenizer.nextCharCode() === VERTICALLINE\r\n                        ? tokenizer.pos + 2\r\n                        : tokenizer.pos + 1\r\n                )\r\n            };\r\n\r\n        case AMPERSAND:\r\n            tokenizer.pos++;\r\n            tokenizer.eat(AMPERSAND);\r\n\r\n            return {\r\n                type: 'Combinator',\r\n                value: '&&'\r\n            };\r\n\r\n        case COMMA:\r\n            tokenizer.pos++;\r\n            return {\r\n                type: 'Comma'\r\n            };\r\n\r\n        case APOSTROPHE:\r\n            return maybeMultiplied(tokenizer, {\r\n                type: 'String',\r\n                value: scanString(tokenizer)\r\n            });\r\n\r\n        case SPACE:\r\n        case TAB:\r\n        case N:\r\n        case R:\r\n        case F:\r\n            return {\r\n                type: 'Spaces',\r\n                value: scanSpaces(tokenizer)\r\n            };\r\n\r\n        case COMMERCIALAT:\r\n            code = tokenizer.nextCharCode();\r\n\r\n            if (code < 128 && NAME_CHAR[code] === 1) {\r\n                tokenizer.pos++;\r\n                return {\r\n                    type: 'AtKeyword',\r\n                    name: scanWord(tokenizer)\r\n                };\r\n            }\r\n\r\n            return maybeToken(tokenizer);\r\n\r\n        case ASTERISK:\r\n        case PLUSSIGN:\r\n        case QUESTIONMARK:\r\n        case NUMBERSIGN:\r\n        case EXCLAMATIONMARK:\r\n            // prohibited tokens (used as a multiplier start)\r\n            break;\r\n\r\n        case LEFTCURLYBRACKET:\r\n            // LEFTCURLYBRACKET is allowed since mdn/data uses it w/o quoting\r\n            // check next char isn't a number, because it's likely a disjoined multiplier\r\n            code = tokenizer.nextCharCode();\r\n\r\n            if (code < 48 || code > 57) {\r\n                return maybeToken(tokenizer);\r\n            }\r\n\r\n            break;\r\n\r\n        default:\r\n            return maybeToken(tokenizer);\r\n    }\r\n}\r\n\r\nfunction parse(source) {\r\n    var tokenizer = new Tokenizer(source);\r\n    var result = readImplicitGroup(tokenizer);\r\n\r\n    if (tokenizer.pos !== source.length) {\r\n        tokenizer.error('Unexpected input');\r\n    }\r\n\r\n    // reduce redundant groups with single group term\r\n    if (result.terms.length === 1 && result.terms[0].type === 'Group') {\r\n        result = result.terms[0];\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\n// warm up parse to elimitate code branches that never execute\r\n// fix soft deoptimizations (insufficient type feedback)\r\nparse('[a&&<b>#|<\\'c\\'>*||e() f{2} /,(% g#{1,2} h{2,})]!');\r\n\r\nmodule.exports = parse;\r\n","var noop = function() {};\r\n\r\nfunction ensureFunction(value) {\r\n    return typeof value === 'function' ? value : noop;\r\n}\r\n\r\nmodule.exports = function(node, options, context) {\r\n    function walk(node) {\r\n        enter.call(context, node);\r\n\r\n        switch (node.type) {\r\n            case 'Group':\r\n                node.terms.forEach(walk);\r\n                break;\r\n\r\n            case 'Multiplier':\r\n                walk(node.term);\r\n                break;\r\n\r\n            case 'Type':\r\n            case 'Property':\r\n            case 'Keyword':\r\n            case 'AtKeyword':\r\n            case 'Function':\r\n            case 'String':\r\n            case 'Token':\r\n            case 'Comma':\r\n                break;\r\n\r\n            default:\r\n                throw new Error('Unknown type: ' + node.type);\r\n        }\r\n\r\n        leave.call(context, node);\r\n    }\r\n\r\n    var enter = noop;\r\n    var leave = noop;\r\n\r\n    if (typeof options === 'function') {\r\n        enter = options;\r\n    } else if (options) {\r\n        enter = ensureFunction(options.enter);\r\n        leave = ensureFunction(options.leave);\r\n    }\r\n\r\n    if (enter === noop && leave === noop) {\r\n        throw new Error('Neither `enter` nor `leave` walker handler is set or both aren\\'t a function');\r\n    }\r\n\r\n    walk(node, context);\r\n};\r\n","var tokenize = require('../tokenizer');\r\nvar TokenStream = require('../common/TokenStream');\r\nvar tokenStream = new TokenStream();\r\nvar astToTokens = {\r\n    decorator: function(handlers) {\r\n        var curNode = null;\r\n        var prev = { len: 0, node: null };\r\n        var nodes = [prev];\r\n        var buffer = '';\r\n\r\n        return {\r\n            children: handlers.children,\r\n            node: function(node) {\r\n                var tmp = curNode;\r\n                curNode = node;\r\n                handlers.node.call(this, node);\r\n                curNode = tmp;\r\n            },\r\n            chunk: function(chunk) {\r\n                buffer += chunk;\r\n                if (prev.node !== curNode) {\r\n                    nodes.push({\r\n                        len: chunk.length,\r\n                        node: curNode\r\n                    });\r\n                } else {\r\n                    prev.len += chunk.length;\r\n                }\r\n            },\r\n            result: function() {\r\n                return prepareTokens(buffer, nodes);\r\n            }\r\n        };\r\n    }\r\n};\r\n\r\nfunction prepareTokens(str, nodes) {\r\n    var tokens = [];\r\n    var nodesOffset = 0;\r\n    var nodesIndex = 0;\r\n    var currentNode = nodes ? nodes[nodesIndex].node : null;\r\n\r\n    tokenize(str, tokenStream);\r\n\r\n    while (!tokenStream.eof) {\r\n        if (nodes) {\r\n            while (nodesIndex < nodes.length && nodesOffset + nodes[nodesIndex].len <= tokenStream.tokenStart) {\r\n                nodesOffset += nodes[nodesIndex++].len;\r\n                currentNode = nodes[nodesIndex].node;\r\n            }\r\n        }\r\n\r\n        tokens.push({\r\n            type: tokenStream.tokenType,\r\n            value: tokenStream.getTokenValue(),\r\n            index: tokenStream.tokenIndex, // TODO: remove it, temporary solution\r\n            balance: tokenStream.balance[tokenStream.tokenIndex], // TODO: remove it, temporary solution\r\n            node: currentNode\r\n        });\r\n        tokenStream.next();\r\n        // console.log({ ...tokens[tokens.length - 1], node: undefined });\r\n    }\r\n\r\n    return tokens;\r\n}\r\n\r\nmodule.exports = function(value, syntax) {\r\n    if (typeof value === 'string') {\r\n        return prepareTokens(value, null);\r\n    }\r\n\r\n    return syntax.generate(value, astToTokens);\r\n};\r\n","var parse = require('../definition-syntax/parse');\r\n\r\nvar MATCH = { type: 'Match' };\r\nvar MISMATCH = { type: 'Mismatch' };\r\nvar DISALLOW_EMPTY = { type: 'DisallowEmpty' };\r\nvar LEFTPARENTHESIS = 40;  // (\r\nvar RIGHTPARENTHESIS = 41; // )\r\n\r\nfunction createCondition(match, thenBranch, elseBranch) {\r\n    // reduce node count\r\n    if (thenBranch === MATCH && elseBranch === MISMATCH) {\r\n        return match;\r\n    }\r\n\r\n    if (match === MATCH && thenBranch === MATCH && elseBranch === MATCH) {\r\n        return match;\r\n    }\r\n\r\n    if (match.type === 'If' && match.else === MISMATCH && thenBranch === MATCH) {\r\n        thenBranch = match.then;\r\n        match = match.match;\r\n    }\r\n\r\n    return {\r\n        type: 'If',\r\n        match: match,\r\n        then: thenBranch,\r\n        else: elseBranch\r\n    };\r\n}\r\n\r\nfunction isFunctionType(name) {\r\n    return (\r\n        name.length > 2 &&\r\n        name.charCodeAt(name.length - 2) === LEFTPARENTHESIS &&\r\n        name.charCodeAt(name.length - 1) === RIGHTPARENTHESIS\r\n    );\r\n}\r\n\r\nfunction isEnumCapatible(term) {\r\n    return (\r\n        term.type === 'Keyword' ||\r\n        term.type === 'AtKeyword' ||\r\n        term.type === 'Function' ||\r\n        term.type === 'Type' && isFunctionType(term.name)\r\n    );\r\n}\r\n\r\nfunction buildGroupMatchGraph(combinator, terms, atLeastOneTermMatched) {\r\n    switch (combinator) {\r\n        case ' ':\r\n            // Juxtaposing components means that all of them must occur, in the given order.\r\n            //\r\n            // a b c\r\n            // =\r\n            // match a\r\n            //   then match b\r\n            //     then match c\r\n            //       then MATCH\r\n            //       else MISMATCH\r\n            //     else MISMATCH\r\n            //   else MISMATCH\r\n            var result = MATCH;\r\n\r\n            for (var i = terms.length - 1; i >= 0; i--) {\r\n                var term = terms[i];\r\n\r\n                result = createCondition(\r\n                    term,\r\n                    result,\r\n                    MISMATCH\r\n                );\r\n            };\r\n\r\n            return result;\r\n\r\n        case '|':\r\n            // A bar (|) separates two or more alternatives: exactly one of them must occur.\r\n            //\r\n            // a | b | c\r\n            // =\r\n            // match a\r\n            //   then MATCH\r\n            //   else match b\r\n            //     then MATCH\r\n            //     else match c\r\n            //       then MATCH\r\n            //       else MISMATCH\r\n\r\n            var result = MISMATCH;\r\n            var map = null;\r\n\r\n            for (var i = terms.length - 1; i >= 0; i--) {\r\n                var term = terms[i];\r\n\r\n                // reduce sequence of keywords into a Enum\r\n                if (isEnumCapatible(term)) {\r\n                    if (map === null && i > 0 && isEnumCapatible(terms[i - 1])) {\r\n                        map = Object.create(null);\r\n                        result = createCondition(\r\n                            {\r\n                                type: 'Enum',\r\n                                map: map\r\n                            },\r\n                            MATCH,\r\n                            result\r\n                        );\r\n                    }\r\n\r\n                    if (map !== null) {\r\n                        var key = (isFunctionType(term.name) ? term.name.slice(0, -1) : term.name).toLowerCase();\r\n                        if (key in map === false) {\r\n                            map[key] = term;\r\n                            continue;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                map = null;\r\n\r\n                // create a new conditonal node\r\n                result = createCondition(\r\n                    term,\r\n                    MATCH,\r\n                    result\r\n                );\r\n            };\r\n\r\n            return result;\r\n\r\n        case '&&':\r\n            // A double ampersand (&&) separates two or more components,\r\n            // all of which must occur, in any order.\r\n\r\n            // Use MatchOnce for groups with a large number of terms,\r\n            // since &&-groups produces at least N!-node trees\r\n            if (terms.length > 5) {\r\n                return {\r\n                    type: 'MatchOnce',\r\n                    terms: terms,\r\n                    all: true\r\n                };\r\n            }\r\n\r\n            // Use a combination tree for groups with small number of terms\r\n            //\r\n            // a && b && c\r\n            // =\r\n            // match a\r\n            //   then [b && c]\r\n            //   else match b\r\n            //     then [a && c]\r\n            //     else match c\r\n            //       then [a && b]\r\n            //       else MISMATCH\r\n            //\r\n            // a && b\r\n            // =\r\n            // match a\r\n            //   then match b\r\n            //     then MATCH\r\n            //     else MISMATCH\r\n            //   else match b\r\n            //     then match a\r\n            //       then MATCH\r\n            //       else MISMATCH\r\n            //     else MISMATCH\r\n            var result = MISMATCH;\r\n\r\n            for (var i = terms.length - 1; i >= 0; i--) {\r\n                var term = terms[i];\r\n                var thenClause;\r\n\r\n                if (terms.length > 1) {\r\n                    thenClause = buildGroupMatchGraph(\r\n                        combinator,\r\n                        terms.filter(function(newGroupTerm) {\r\n                            return newGroupTerm !== term;\r\n                        }),\r\n                        false\r\n                    );\r\n                } else {\r\n                    thenClause = MATCH;\r\n                }\r\n\r\n                result = createCondition(\r\n                    term,\r\n                    thenClause,\r\n                    result\r\n                );\r\n            };\r\n\r\n            return result;\r\n\r\n        case '||':\r\n            // A double bar (||) separates two or more options:\r\n            // one or more of them must occur, in any order.\r\n\r\n            // Use MatchOnce for groups with a large number of terms,\r\n            // since ||-groups produces at least N!-node trees\r\n            if (terms.length > 5) {\r\n                return {\r\n                    type: 'MatchOnce',\r\n                    terms: terms,\r\n                    all: false\r\n                };\r\n            }\r\n\r\n            // Use a combination tree for groups with small number of terms\r\n            //\r\n            // a || b || c\r\n            // =\r\n            // match a\r\n            //   then [b || c]\r\n            //   else match b\r\n            //     then [a || c]\r\n            //     else match c\r\n            //       then [a || b]\r\n            //       else MISMATCH\r\n            //\r\n            // a || b\r\n            // =\r\n            // match a\r\n            //   then match b\r\n            //     then MATCH\r\n            //     else MATCH\r\n            //   else match b\r\n            //     then match a\r\n            //       then MATCH\r\n            //       else MATCH\r\n            //     else MISMATCH\r\n            var result = atLeastOneTermMatched ? MATCH : MISMATCH;\r\n\r\n            for (var i = terms.length - 1; i >= 0; i--) {\r\n                var term = terms[i];\r\n                var thenClause;\r\n\r\n                if (terms.length > 1) {\r\n                    thenClause = buildGroupMatchGraph(\r\n                        combinator,\r\n                        terms.filter(function(newGroupTerm) {\r\n                            return newGroupTerm !== term;\r\n                        }),\r\n                        true\r\n                    );\r\n                } else {\r\n                    thenClause = MATCH;\r\n                }\r\n\r\n                result = createCondition(\r\n                    term,\r\n                    thenClause,\r\n                    result\r\n                );\r\n            };\r\n\r\n            return result;\r\n    }\r\n}\r\n\r\nfunction buildMultiplierMatchGraph(node) {\r\n    var result = MATCH;\r\n    var matchTerm = buildMatchGraph(node.term);\r\n\r\n    if (node.max === 0) {\r\n        // disable repeating of empty match to prevent infinite loop\r\n        matchTerm = createCondition(\r\n            matchTerm,\r\n            DISALLOW_EMPTY,\r\n            MISMATCH\r\n        );\r\n\r\n        // an occurrence count is not limited, make a cycle;\r\n        // to collect more terms on each following matching mismatch\r\n        result = createCondition(\r\n            matchTerm,\r\n            null, // will be a loop\r\n            MISMATCH\r\n        );\r\n\r\n        result.then = createCondition(\r\n            MATCH,\r\n            MATCH,\r\n            result // make a loop\r\n        );\r\n\r\n        if (node.comma) {\r\n            result.then.else = createCondition(\r\n                { type: 'Comma', syntax: node },\r\n                result,\r\n                MISMATCH\r\n            );\r\n        }\r\n    } else {\r\n        // create a match node chain for [min .. max] interval with optional matches\r\n        for (var i = node.min || 1; i <= node.max; i++) {\r\n            if (node.comma && result !== MATCH) {\r\n                result = createCondition(\r\n                    { type: 'Comma', syntax: node },\r\n                    result,\r\n                    MISMATCH\r\n                );\r\n            }\r\n\r\n            result = createCondition(\r\n                matchTerm,\r\n                createCondition(\r\n                    MATCH,\r\n                    MATCH,\r\n                    result\r\n                ),\r\n                MISMATCH\r\n            );\r\n        }\r\n    }\r\n\r\n    if (node.min === 0) {\r\n        // allow zero match\r\n        result = createCondition(\r\n            MATCH,\r\n            MATCH,\r\n            result\r\n        );\r\n    } else {\r\n        // create a match node chain to collect [0 ... min - 1] required matches\r\n        for (var i = 0; i < node.min - 1; i++) {\r\n            if (node.comma && result !== MATCH) {\r\n                result = createCondition(\r\n                    { type: 'Comma', syntax: node },\r\n                    result,\r\n                    MISMATCH\r\n                );\r\n            }\r\n\r\n            result = createCondition(\r\n                matchTerm,\r\n                result,\r\n                MISMATCH\r\n            );\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nfunction buildMatchGraph(node) {\r\n    if (typeof node === 'function') {\r\n        return {\r\n            type: 'Generic',\r\n            fn: node\r\n        };\r\n    }\r\n\r\n    switch (node.type) {\r\n        case 'Group':\r\n            var result = buildGroupMatchGraph(\r\n                node.combinator,\r\n                node.terms.map(buildMatchGraph),\r\n                false\r\n            );\r\n\r\n            if (node.disallowEmpty) {\r\n                result = createCondition(\r\n                    result,\r\n                    DISALLOW_EMPTY,\r\n                    MISMATCH\r\n                );\r\n            }\r\n\r\n            return result;\r\n\r\n        case 'Multiplier':\r\n            return buildMultiplierMatchGraph(node);\r\n\r\n        case 'Type':\r\n        case 'Property':\r\n            return {\r\n                type: node.type,\r\n                name: node.name,\r\n                syntax: node\r\n            };\r\n\r\n        case 'Keyword':\r\n            return {\r\n                type: node.type,\r\n                name: node.name.toLowerCase(),\r\n                syntax: node\r\n            };\r\n\r\n        case 'AtKeyword':\r\n            return {\r\n                type: node.type,\r\n                name: '@' + node.name.toLowerCase(),\r\n                syntax: node\r\n            };\r\n\r\n        case 'Function':\r\n            return {\r\n                type: node.type,\r\n                name: node.name.toLowerCase() + '(',\r\n                syntax: node\r\n            };\r\n\r\n        case 'String':\r\n            // convert a one char length String to a Token\r\n            if (node.value.length === 3) {\r\n                return {\r\n                    type: 'Token',\r\n                    value: node.value.charAt(1),\r\n                    syntax: node\r\n                };\r\n            }\r\n\r\n            // otherwise use it as is\r\n            return {\r\n                type: node.type,\r\n                value: node.value.substr(1, node.value.length - 2).replace(/\\\\'/g, '\\''),\r\n                syntax: node\r\n            };\r\n\r\n        case 'Token':\r\n            return {\r\n                type: node.type,\r\n                value: node.value,\r\n                syntax: node\r\n            };\r\n\r\n        case 'Comma':\r\n            return {\r\n                type: node.type,\r\n                syntax: node\r\n            };\r\n\r\n        default:\r\n            throw new Error('Unknown node type:', node.type);\r\n    }\r\n}\r\n\r\nmodule.exports = {\r\n    MATCH: MATCH,\r\n    MISMATCH: MISMATCH,\r\n    DISALLOW_EMPTY: DISALLOW_EMPTY,\r\n    buildMatchGraph: function(syntaxTree, ref) {\r\n        if (typeof syntaxTree === 'string') {\r\n            syntaxTree = parse(syntaxTree);\r\n        }\r\n\r\n        return {\r\n            type: 'MatchGraph',\r\n            match: buildMatchGraph(syntaxTree),\r\n            syntax: ref || null,\r\n            source: syntaxTree\r\n        };\r\n    }\r\n};\r\n","var hasOwnProperty = Object.prototype.hasOwnProperty;\r\nvar matchGraph = require('./match-graph');\r\nvar MATCH = matchGraph.MATCH;\r\nvar MISMATCH = matchGraph.MISMATCH;\r\nvar DISALLOW_EMPTY = matchGraph.DISALLOW_EMPTY;\r\nvar TYPE = require('../tokenizer/const').TYPE;\r\n\r\nvar STUB = 0;\r\nvar TOKEN = 1;\r\nvar OPEN_SYNTAX = 2;\r\nvar CLOSE_SYNTAX = 3;\r\n\r\nvar EXIT_REASON_MATCH = 'Match';\r\nvar EXIT_REASON_MISMATCH = 'Mismatch';\r\nvar EXIT_REASON_ITERATION_LIMIT = 'Maximum iteration number exceeded (please fill an issue on https://github.com/csstree/csstree/issues)';\r\n\r\nvar ITERATION_LIMIT = 15000;\r\nvar totalIterationCount = 0;\r\n\r\nfunction reverseList(list) {\r\n    var prev = null;\r\n    var next = null;\r\n    var item = list;\r\n\r\n    while (item !== null) {\r\n        next = item.prev;\r\n        item.prev = prev;\r\n        prev = item;\r\n        item = next;\r\n    }\r\n\r\n    return prev;\r\n}\r\n\r\nfunction areStringsEqualCaseInsensitive(testStr, referenceStr) {\r\n    if (testStr.length !== referenceStr.length) {\r\n        return false;\r\n    }\r\n\r\n    for (var i = 0; i < testStr.length; i++) {\r\n        var testCode = testStr.charCodeAt(i);\r\n        var referenceCode = referenceStr.charCodeAt(i);\r\n\r\n        // testCode.toLowerCase() for U+0041 LATIN CAPITAL LETTER A (A) .. U+005A LATIN CAPITAL LETTER Z (Z).\r\n        if (testCode >= 0x0041 && testCode <= 0x005A) {\r\n            testCode = testCode | 32;\r\n        }\r\n\r\n        if (testCode !== referenceCode) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nfunction isCommaContextStart(token) {\r\n    if (token === null) {\r\n        return true;\r\n    }\r\n\r\n    return (\r\n        token.type === TYPE.Comma ||\r\n        token.type === TYPE.Function ||\r\n        token.type === TYPE.LeftParenthesis ||\r\n        token.type === TYPE.LeftSquareBracket ||\r\n        token.type === TYPE.LeftCurlyBracket ||\r\n        token.type === TYPE.Delim\r\n    );\r\n}\r\n\r\nfunction isCommaContextEnd(token) {\r\n    if (token === null) {\r\n        return true;\r\n    }\r\n\r\n    return (\r\n        token.type === TYPE.RightParenthesis ||\r\n        token.type === TYPE.RightSquareBracket ||\r\n        token.type === TYPE.RightCurlyBracket ||\r\n        token.type === TYPE.Delim\r\n    );\r\n}\r\n\r\nfunction internalMatch(tokens, state, syntaxes) {\r\n    function moveToNextToken() {\r\n        do {\r\n            tokenIndex++;\r\n            token = tokenIndex < tokens.length ? tokens[tokenIndex] : null;\r\n        } while (token !== null && (token.type === TYPE.WhiteSpace || token.type === TYPE.Comment));\r\n    }\r\n\r\n    function getNextToken(offset) {\r\n        var nextIndex = tokenIndex + offset;\r\n\r\n        return nextIndex < tokens.length ? tokens[nextIndex] : null;\r\n    }\r\n\r\n    function stateSnapshotFromSyntax(nextState, prev) {\r\n        return {\r\n            nextState: nextState,\r\n            matchStack: matchStack,\r\n            syntaxStack: syntaxStack,\r\n            thenStack: thenStack,\r\n            tokenIndex: tokenIndex,\r\n            prev: prev\r\n        };\r\n    }\r\n\r\n    function pushThenStack(nextState) {\r\n        thenStack = {\r\n            nextState: nextState,\r\n            matchStack: matchStack,\r\n            syntaxStack: syntaxStack,\r\n            prev: thenStack\r\n        };\r\n    }\r\n\r\n    function pushElseStack(nextState) {\r\n        elseStack = stateSnapshotFromSyntax(nextState, elseStack);\r\n    }\r\n\r\n    function addTokenToMatch() {\r\n        matchStack = {\r\n            type: TOKEN,\r\n            syntax: state.syntax,\r\n            token: token,\r\n            prev: matchStack\r\n        };\r\n\r\n        moveToNextToken();\r\n        syntaxStash = null;\r\n\r\n        if (tokenIndex > longestMatch) {\r\n            longestMatch = tokenIndex;\r\n        }\r\n    }\r\n\r\n    function openSyntax() {\r\n        syntaxStack = {\r\n            syntax: state.syntax,\r\n            opts: state.syntax.opts || (syntaxStack !== null && syntaxStack.opts) || null,\r\n            prev: syntaxStack\r\n        };\r\n\r\n        matchStack = {\r\n            type: OPEN_SYNTAX,\r\n            syntax: state.syntax,\r\n            token: matchStack.token,\r\n            prev: matchStack\r\n        };\r\n    }\r\n\r\n    function closeSyntax() {\r\n        if (matchStack.type === OPEN_SYNTAX) {\r\n            matchStack = matchStack.prev;\r\n        } else {\r\n            matchStack = {\r\n                type: CLOSE_SYNTAX,\r\n                syntax: syntaxStack.syntax,\r\n                token: matchStack.token,\r\n                prev: matchStack\r\n            };\r\n        }\r\n\r\n        syntaxStack = syntaxStack.prev;\r\n    }\r\n\r\n    var syntaxStack = null;\r\n    var thenStack = null;\r\n    var elseStack = null;\r\n\r\n    // null – stashing allowed, nothing stashed\r\n    // false – stashing disabled, nothing stashed\r\n    // anithing else – fail stashable syntaxes, some syntax stashed\r\n    var syntaxStash = null;\r\n\r\n    var iterationCount = 0; // count iterations and prevent infinite loop\r\n    var exitReason = null;\r\n\r\n    var token = null;\r\n    var tokenIndex = -1;\r\n    var longestMatch = 0;\r\n    var matchStack = {\r\n        type: STUB,\r\n        syntax: null,\r\n        token: null,\r\n        prev: null\r\n    };\r\n\r\n    moveToNextToken();\r\n\r\n    while (exitReason === null && ++iterationCount < ITERATION_LIMIT) {\r\n        // function mapList(list, fn) {\r\n        //     var result = [];\r\n        //     while (list) {\r\n        //         result.unshift(fn(list));\r\n        //         list = list.prev;\r\n        //     }\r\n        //     return result;\r\n        // }\r\n        // console.log('--\\n',\r\n        //     '#' + iterationCount,\r\n        //     require('util').inspect({\r\n        //         match: mapList(matchStack, x => x.type === TOKEN ? x.token && x.token.value : x.syntax ? ({ [OPEN_SYNTAX]: '<', [CLOSE_SYNTAX]: '</' }[x.type] || x.type) + '!' + x.syntax.name : null),\r\n        //         token: token && token.value,\r\n        //         tokenIndex,\r\n        //         syntax: syntax.type + (syntax.id ? ' #' + syntax.id : '')\r\n        //     }, { depth: null })\r\n        // );\r\n        switch (state.type) {\r\n            case 'Match':\r\n                if (thenStack === null) {\r\n                    // turn to MISMATCH when some tokens left unmatched\r\n                    if (token !== null) {\r\n                        // doesn't mismatch if just one token left and it's an IE hack\r\n                        if (tokenIndex !== tokens.length - 1 || (token.value !== '\\\\0' && token.value !== '\\\\9')) {\r\n                            state = MISMATCH;\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    // break the main loop, return a result - MATCH\r\n                    exitReason = EXIT_REASON_MATCH;\r\n                    break;\r\n                }\r\n\r\n                // go to next syntax (`then` branch)\r\n                state = thenStack.nextState;\r\n\r\n                // check match is not empty\r\n                if (state === DISALLOW_EMPTY) {\r\n                    if (thenStack.matchStack === matchStack) {\r\n                        state = MISMATCH;\r\n                        break;\r\n                    } else {\r\n                        state = MATCH;\r\n                    }\r\n                }\r\n\r\n                // close syntax if needed\r\n                while (thenStack.syntaxStack !== syntaxStack) {\r\n                    closeSyntax();\r\n                }\r\n\r\n                // pop stack\r\n                thenStack = thenStack.prev;\r\n                break;\r\n\r\n            case 'Mismatch':\r\n                // when some syntax is stashed\r\n                if (syntaxStash !== null && syntaxStash !== false) {\r\n                    // there is no else branches or a branch reduce match stack\r\n                    if (elseStack === null || tokenIndex > elseStack.tokenIndex) {\r\n                        // restore state from the stash\r\n                        elseStack = syntaxStash;\r\n                        syntaxStash = false; // disable stashing\r\n                    }\r\n                } else if (elseStack === null) {\r\n                    // no else branches -> break the main loop\r\n                    // return a result - MISMATCH\r\n                    exitReason = EXIT_REASON_MISMATCH;\r\n                    break;\r\n                }\r\n\r\n                // go to next syntax (`else` branch)\r\n                state = elseStack.nextState;\r\n\r\n                // restore all the rest stack states\r\n                thenStack = elseStack.thenStack;\r\n                syntaxStack = elseStack.syntaxStack;\r\n                matchStack = elseStack.matchStack;\r\n                tokenIndex = elseStack.tokenIndex;\r\n                token = tokenIndex < tokens.length ? tokens[tokenIndex] : null;\r\n\r\n                // pop stack\r\n                elseStack = elseStack.prev;\r\n                break;\r\n\r\n            case 'MatchGraph':\r\n                state = state.match;\r\n                break;\r\n\r\n            case 'If':\r\n                // IMPORTANT: else stack push must go first,\r\n                // since it stores the state of thenStack before changes\r\n                if (state.else !== MISMATCH) {\r\n                    pushElseStack(state.else);\r\n                }\r\n\r\n                if (state.then !== MATCH) {\r\n                    pushThenStack(state.then);\r\n                }\r\n\r\n                state = state.match;\r\n                break;\r\n\r\n            case 'MatchOnce':\r\n                state = {\r\n                    type: 'MatchOnceBuffer',\r\n                    syntax: state,\r\n                    index: 0,\r\n                    mask: 0\r\n                };\r\n                break;\r\n\r\n            case 'MatchOnceBuffer':\r\n                var terms = state.syntax.terms;\r\n\r\n                if (state.index === terms.length) {\r\n                    // no matches at all or it's required all terms to be matched\r\n                    if (state.mask === 0 || state.syntax.all) {\r\n                        state = MISMATCH;\r\n                        break;\r\n                    }\r\n\r\n                    // a partial match is ok\r\n                    state = MATCH;\r\n                    break;\r\n                }\r\n\r\n                // all terms are matched\r\n                if (state.mask === (1 << terms.length) - 1) {\r\n                    state = MATCH;\r\n                    break;\r\n                }\r\n\r\n                for (; state.index < terms.length; state.index++) {\r\n                    var matchFlag = 1 << state.index;\r\n\r\n                    if ((state.mask & matchFlag) === 0) {\r\n                        // IMPORTANT: else stack push must go first,\r\n                        // since it stores the state of thenStack before changes\r\n                        pushElseStack(state);\r\n                        pushThenStack({\r\n                            type: 'AddMatchOnce',\r\n                            syntax: state.syntax,\r\n                            mask: state.mask | matchFlag\r\n                        });\r\n\r\n                        // match\r\n                        state = terms[state.index++];\r\n                        break;\r\n                    }\r\n                }\r\n                break;\r\n\r\n            case 'AddMatchOnce':\r\n                state = {\r\n                    type: 'MatchOnceBuffer',\r\n                    syntax: state.syntax,\r\n                    index: 0,\r\n                    mask: state.mask\r\n                };\r\n                break;\r\n\r\n            case 'Enum':\r\n                if (token !== null) {\r\n                    var name = token.value.toLowerCase();\r\n\r\n                    // drop \\0 and \\9 hack from keyword name\r\n                    if (name.indexOf('\\\\') !== -1) {\r\n                        name = name.replace(/\\\\[09].*$/, '');\r\n                    }\r\n\r\n                    if (hasOwnProperty.call(state.map, name)) {\r\n                        state = state.map[name];\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                state = MISMATCH;\r\n                break;\r\n\r\n            case 'Generic':\r\n                var opts = syntaxStack !== null ? syntaxStack.opts : null;\r\n                var lastTokenIndex = tokenIndex + Math.floor(state.fn(token, getNextToken, opts));\r\n\r\n                if (!isNaN(lastTokenIndex) && lastTokenIndex > tokenIndex) {\r\n                    while (tokenIndex < lastTokenIndex) {\r\n                        addTokenToMatch();\r\n                    }\r\n\r\n                    state = MATCH;\r\n                } else {\r\n                    state = MISMATCH;\r\n                }\r\n\r\n                break;\r\n\r\n            case 'Type':\r\n            case 'Property':\r\n                var syntaxDict = state.type === 'Type' ? 'types' : 'properties';\r\n                var dictSyntax = hasOwnProperty.call(syntaxes, syntaxDict) ? syntaxes[syntaxDict][state.name] : null;\r\n\r\n                if (!dictSyntax || !dictSyntax.match) {\r\n                    throw new Error(\r\n                        'Bad syntax reference: ' +\r\n                        (state.type === 'Type'\r\n                            ? '<' + state.name + '>'\r\n                            : '<\\'' + state.name + '\\'>')\r\n                    );\r\n                }\r\n\r\n                // stash a syntax for types with low priority\r\n                if (syntaxStash !== false && token !== null && state.type === 'Type') {\r\n                    var lowPriorityMatching =\r\n                        // https://drafts.csswg.org/css-values-4/#custom-idents\r\n                        // When parsing positionally-ambiguous keywords in a property value, a <custom-ident> production\r\n                        // can only claim the keyword if no other unfulfilled production can claim it.\r\n                        (state.name === 'custom-ident' && token.type === TYPE.Ident) ||\r\n\r\n                        // https://drafts.csswg.org/css-values-4/#lengths\r\n                        // ... if a `0` could be parsed as either a <number> or a <length> in a property (such as line-height),\r\n                        // it must parse as a <number>\r\n                        (state.name === 'length' && token.value === '0');\r\n\r\n                    if (lowPriorityMatching) {\r\n                        if (syntaxStash === null) {\r\n                            syntaxStash = stateSnapshotFromSyntax(state, elseStack);\r\n                        }\r\n\r\n                        state = MISMATCH;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                openSyntax();\r\n                state = dictSyntax.match;\r\n                break;\r\n\r\n            case 'Keyword':\r\n                var name = state.name;\r\n\r\n                if (token !== null) {\r\n                    var keywordName = token.value;\r\n\r\n                    // drop \\0 and \\9 hack from keyword name\r\n                    if (keywordName.indexOf('\\\\') !== -1) {\r\n                        keywordName = keywordName.replace(/\\\\[09].*$/, '');\r\n                    }\r\n\r\n                    if (areStringsEqualCaseInsensitive(keywordName, name)) {\r\n                        addTokenToMatch();\r\n                        state = MATCH;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                state = MISMATCH;\r\n                break;\r\n\r\n            case 'AtKeyword':\r\n            case 'Function':\r\n                if (token !== null && areStringsEqualCaseInsensitive(token.value, state.name)) {\r\n                    addTokenToMatch();\r\n                    state = MATCH;\r\n                    break;\r\n                }\r\n\r\n                state = MISMATCH;\r\n                break;\r\n\r\n            case 'Token':\r\n                if (token !== null && token.value === state.value) {\r\n                    addTokenToMatch();\r\n                    state = MATCH;\r\n                    break;\r\n                }\r\n\r\n                state = MISMATCH;\r\n                break;\r\n\r\n            case 'Comma':\r\n                if (token !== null && token.type === TYPE.Comma) {\r\n                    if (isCommaContextStart(matchStack.token)) {\r\n                        state = MISMATCH;\r\n                    } else {\r\n                        addTokenToMatch();\r\n                        state = isCommaContextEnd(token) ? MISMATCH : MATCH;\r\n                    }\r\n                } else {\r\n                    state = isCommaContextStart(matchStack.token) || isCommaContextEnd(token) ? MATCH : MISMATCH;\r\n                }\r\n\r\n                break;\r\n\r\n            case 'String':\r\n                var string = '';\r\n\r\n                for (var lastTokenIndex = tokenIndex; lastTokenIndex < tokens.length && string.length < state.value.length; lastTokenIndex++) {\r\n                    string += tokens[lastTokenIndex].value;\r\n                }\r\n\r\n                if (areStringsEqualCaseInsensitive(string, state.value)) {\r\n                    while (tokenIndex < lastTokenIndex) {\r\n                        addTokenToMatch();\r\n                    }\r\n\r\n                    state = MATCH;\r\n                } else {\r\n                    state = MISMATCH;\r\n                }\r\n\r\n                break;\r\n\r\n            default:\r\n                throw new Error('Unknown node type: ' + state.type);\r\n        }\r\n    }\r\n\r\n    totalIterationCount += iterationCount;\r\n\r\n    switch (exitReason) {\r\n        case null:\r\n            console.warn('[csstree-match] BREAK after ' + ITERATION_LIMIT + ' iterations');\r\n            exitReason = EXIT_REASON_ITERATION_LIMIT;\r\n            matchStack = null;\r\n            break;\r\n\r\n        case EXIT_REASON_MATCH:\r\n            while (syntaxStack !== null) {\r\n                closeSyntax();\r\n            }\r\n            break;\r\n\r\n        default:\r\n            matchStack = null;\r\n    }\r\n\r\n    return {\r\n        tokens: tokens,\r\n        reason: exitReason,\r\n        iterations: iterationCount,\r\n        match: matchStack,\r\n        longestMatch: longestMatch\r\n    };\r\n}\r\n\r\nfunction matchAsList(tokens, matchGraph, syntaxes) {\r\n    var matchResult = internalMatch(tokens, matchGraph, syntaxes || {});\r\n\r\n    if (matchResult.match !== null) {\r\n        var item = reverseList(matchResult.match).prev;\r\n\r\n        matchResult.match = [];\r\n\r\n        while (item !== null) {\r\n            switch (item.type) {\r\n                case STUB:\r\n                    break;\r\n\r\n                case OPEN_SYNTAX:\r\n                case CLOSE_SYNTAX:\r\n                    matchResult.match.push({\r\n                        type: item.type,\r\n                        syntax: item.syntax\r\n                    });\r\n                    break;\r\n\r\n                default:\r\n                    matchResult.match.push({\r\n                        token: item.token.value,\r\n                        node: item.token.node\r\n                    });\r\n                    break;\r\n            }\r\n\r\n            item = item.prev;\r\n        }\r\n    }\r\n\r\n    return matchResult;\r\n}\r\n\r\nfunction matchAsTree(tokens, matchGraph, syntaxes) {\r\n    var matchResult = internalMatch(tokens, matchGraph, syntaxes || {});\r\n\r\n    if (matchResult.match === null) {\r\n        return matchResult;\r\n    }\r\n\r\n    var item = matchResult.match;\r\n    var host = matchResult.match = {\r\n        syntax: matchGraph.syntax || null,\r\n        match: []\r\n    };\r\n    var hostStack = [host];\r\n\r\n    // revert a list and start with 2nd item since 1st is a stub item\r\n    item = reverseList(item).prev;\r\n\r\n    // build a tree\r\n    while (item !== null) {\r\n        switch (item.type) {\r\n            case OPEN_SYNTAX:\r\n                host.match.push(host = {\r\n                    syntax: item.syntax,\r\n                    match: []\r\n                });\r\n                hostStack.push(host);\r\n                break;\r\n\r\n            case CLOSE_SYNTAX:\r\n                hostStack.pop();\r\n                host = hostStack[hostStack.length - 1];\r\n                break;\r\n\r\n            default:\r\n                host.match.push({\r\n                    syntax: item.syntax || null,\r\n                    token: item.token.value,\r\n                    node: item.token.node\r\n                });\r\n        }\r\n\r\n        item = item.prev;\r\n    }\r\n\r\n    return matchResult;\r\n}\r\n\r\nmodule.exports = {\r\n    matchAsList: matchAsList,\r\n    matchAsTree: matchAsTree,\r\n    getTotalIterationCount: function() {\r\n        return totalIterationCount;\r\n    }\r\n};\r\n","function getTrace(node) {\r\n    function shouldPutToTrace(syntax) {\r\n        if (syntax === null) {\r\n            return false;\r\n        }\r\n\r\n        return (\r\n            syntax.type === 'Type' ||\r\n            syntax.type === 'Property' ||\r\n            syntax.type === 'Keyword'\r\n        );\r\n    }\r\n\r\n    function hasMatch(matchNode) {\r\n        if (Array.isArray(matchNode.match)) {\r\n            // use for-loop for better perfomance\r\n            for (var i = 0; i < matchNode.match.length; i++) {\r\n                if (hasMatch(matchNode.match[i])) {\r\n                    if (shouldPutToTrace(matchNode.syntax)) {\r\n                        result.unshift(matchNode.syntax);\r\n                    }\r\n\r\n                    return true;\r\n                }\r\n            }\r\n        } else if (matchNode.node === node) {\r\n            result = shouldPutToTrace(matchNode.syntax)\r\n                ? [matchNode.syntax]\r\n                : [];\r\n\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    var result = null;\r\n\r\n    if (this.matched !== null) {\r\n        hasMatch(this.matched);\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nfunction testNode(match, node, fn) {\r\n    var trace = getTrace.call(match, node);\r\n\r\n    if (trace === null) {\r\n        return false;\r\n    }\r\n\r\n    return trace.some(fn);\r\n}\r\n\r\nfunction isType(node, type) {\r\n    return testNode(this, node, function(matchNode) {\r\n        return matchNode.type === 'Type' && matchNode.name === type;\r\n    });\r\n}\r\n\r\nfunction isProperty(node, property) {\r\n    return testNode(this, node, function(matchNode) {\r\n        return matchNode.type === 'Property' && matchNode.name === property;\r\n    });\r\n}\r\n\r\nfunction isKeyword(node) {\r\n    return testNode(this, node, function(matchNode) {\r\n        return matchNode.type === 'Keyword';\r\n    });\r\n}\r\n\r\nmodule.exports = {\r\n    getTrace: getTrace,\r\n    isType: isType,\r\n    isProperty: isProperty,\r\n    isKeyword: isKeyword\r\n};\r\n","var List = require('../common/List');\r\n\r\nfunction getFirstMatchNode(matchNode) {\r\n    if ('node' in matchNode) {\r\n        return matchNode.node;\r\n    }\r\n\r\n    return getFirstMatchNode(matchNode.match[0]);\r\n}\r\n\r\nfunction getLastMatchNode(matchNode) {\r\n    if ('node' in matchNode) {\r\n        return matchNode.node;\r\n    }\r\n\r\n    return getLastMatchNode(matchNode.match[matchNode.match.length - 1]);\r\n}\r\n\r\nfunction matchFragments(lexer, ast, match, type, name) {\r\n    function findFragments(matchNode) {\r\n        if (matchNode.syntax !== null &&\r\n            matchNode.syntax.type === type &&\r\n            matchNode.syntax.name === name) {\r\n            var start = getFirstMatchNode(matchNode);\r\n            var end = getLastMatchNode(matchNode);\r\n\r\n            lexer.syntax.walk(ast, function(node, item, list) {\r\n                if (node === start) {\r\n                    var nodes = new List();\r\n\r\n                    do {\r\n                        nodes.appendData(item.data);\r\n\r\n                        if (item.data === end) {\r\n                            break;\r\n                        }\r\n\r\n                        item = item.next;\r\n                    } while (item !== null);\r\n\r\n                    fragments.push({\r\n                        parent: list,\r\n                        nodes: nodes\r\n                    });\r\n                }\r\n            });\r\n        }\r\n\r\n        if (Array.isArray(matchNode.match)) {\r\n            matchNode.match.forEach(findFragments);\r\n        }\r\n    }\r\n\r\n    var fragments = [];\r\n\r\n    if (match.matched !== null) {\r\n        findFragments(match.matched);\r\n    }\r\n\r\n    return fragments;\r\n}\r\n\r\nmodule.exports = {\r\n    matchFragments: matchFragments\r\n};\r\n","var List = require('../common/List');\r\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\r\n\r\nfunction isValidNumber(value) {\r\n    // Number.isInteger(value) && value >= 0\r\n    return (\r\n        typeof value === 'number' &&\r\n        isFinite(value) &&\r\n        Math.floor(value) === value &&\r\n        value >= 0\r\n    );\r\n}\r\n\r\nfunction isValidLocation(loc) {\r\n    return (\r\n        Boolean(loc) &&\r\n        isValidNumber(loc.offset) &&\r\n        isValidNumber(loc.line) &&\r\n        isValidNumber(loc.column)\r\n    );\r\n}\r\n\r\nfunction createNodeStructureChecker(type, fields) {\r\n    return function checkNode(node, warn) {\r\n        if (!node || node.constructor !== Object) {\r\n            return warn(node, 'Type of node should be an Object');\r\n        }\r\n\r\n        for (var key in node) {\r\n            var valid = true;\r\n\r\n            if (hasOwnProperty.call(node, key) === false) {\r\n                continue;\r\n            }\r\n\r\n            if (key === 'type') {\r\n                if (node.type !== type) {\r\n                    warn(node, 'Wrong node type `' + node.type + '`, expected `' + type + '`');\r\n                }\r\n            } else if (key === 'loc') {\r\n                if (node.loc === null) {\r\n                    continue;\r\n                } else if (node.loc && node.loc.constructor === Object) {\r\n                    if (typeof node.loc.source !== 'string') {\r\n                        key += '.source';\r\n                    } else if (!isValidLocation(node.loc.start)) {\r\n                        key += '.start';\r\n                    } else if (!isValidLocation(node.loc.end)) {\r\n                        key += '.end';\r\n                    } else {\r\n                        continue;\r\n                    }\r\n                }\r\n\r\n                valid = false;\r\n            } else if (fields.hasOwnProperty(key)) {\r\n                for (var i = 0, valid = false; !valid && i < fields[key].length; i++) {\r\n                    var fieldType = fields[key][i];\r\n\r\n                    switch (fieldType) {\r\n                        case String:\r\n                            valid = typeof node[key] === 'string';\r\n                            break;\r\n\r\n                        case Boolean:\r\n                            valid = typeof node[key] === 'boolean';\r\n                            break;\r\n\r\n                        case null:\r\n                            valid = node[key] === null;\r\n                            break;\r\n\r\n                        default:\r\n                            if (typeof fieldType === 'string') {\r\n                                valid = node[key] && node[key].type === fieldType;\r\n                            } else if (Array.isArray(fieldType)) {\r\n                                valid = node[key] instanceof List;\r\n                            }\r\n                    }\r\n                }\r\n            } else {\r\n                warn(node, 'Unknown field `' + key + '` for ' + type + ' node type');\r\n            }\r\n\r\n            if (!valid) {\r\n                warn(node, 'Bad value for `' + type + '.' + key + '`');\r\n            }\r\n        }\r\n\r\n        for (var key in fields) {\r\n            if (hasOwnProperty.call(fields, key) &&\r\n                hasOwnProperty.call(node, key) === false) {\r\n                warn(node, 'Field `' + type + '.' + key + '` is missed');\r\n            }\r\n        }\r\n    };\r\n}\r\n\r\nfunction processStructure(name, nodeType) {\r\n    var structure = nodeType.structure;\r\n    var fields = {\r\n        type: String,\r\n        loc: true\r\n    };\r\n    var docs = {\r\n        type: '\"' + name + '\"'\r\n    };\r\n\r\n    for (var key in structure) {\r\n        if (hasOwnProperty.call(structure, key) === false) {\r\n            continue;\r\n        }\r\n\r\n        var docsTypes = [];\r\n        var fieldTypes = fields[key] = Array.isArray(structure[key])\r\n            ? structure[key].slice()\r\n            : [structure[key]];\r\n\r\n        for (var i = 0; i < fieldTypes.length; i++) {\r\n            var fieldType = fieldTypes[i];\r\n            if (fieldType === String || fieldType === Boolean) {\r\n                docsTypes.push(fieldType.name);\r\n            } else if (fieldType === null) {\r\n                docsTypes.push('null');\r\n            } else if (typeof fieldType === 'string') {\r\n                docsTypes.push('<' + fieldType + '>');\r\n            } else if (Array.isArray(fieldType)) {\r\n                docsTypes.push('List'); // TODO: use type enum\r\n            } else {\r\n                throw new Error('Wrong value `' + fieldType + '` in `' + name + '.' + key + '` structure definition');\r\n            }\r\n        }\r\n\r\n        docs[key] = docsTypes.join(' | ');\r\n    }\r\n\r\n    return {\r\n        docs: docs,\r\n        check: createNodeStructureChecker(name, fields)\r\n    };\r\n}\r\n\r\nmodule.exports = {\r\n    getStructureFromConfig: function(config) {\r\n        var structure = {};\r\n\r\n        if (config.node) {\r\n            for (var name in config.node) {\r\n                if (hasOwnProperty.call(config.node, name)) {\r\n                    var nodeType = config.node[name];\r\n\r\n                    if (nodeType.structure) {\r\n                        structure[name] = processStructure(name, nodeType);\r\n                    } else {\r\n                        throw new Error('Missed `structure` field in `' + name + '` node type definition');\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return structure;\r\n    }\r\n};\r\n","var SyntaxReferenceError = require('./error').SyntaxReferenceError;\r\nvar MatchError = require('./error').MatchError;\r\nvar names = require('../utils/names');\r\nvar generic = require('./generic');\r\nvar parse = require('../definition-syntax/parse');\r\nvar generate = require('../definition-syntax/generate');\r\nvar walk = require('../definition-syntax/walk');\r\nvar prepareTokens = require('./prepare-tokens');\r\nvar buildMatchGraph = require('./match-graph').buildMatchGraph;\r\nvar matchAsTree = require('./match').matchAsTree;\r\nvar trace = require('./trace');\r\nvar search = require('./search');\r\nvar getStructureFromConfig = require('./structure').getStructureFromConfig;\r\nvar cssWideKeywords = buildMatchGraph('inherit | initial | unset');\r\nvar cssWideKeywordsWithExpression = buildMatchGraph('inherit | initial | unset | <-ms-legacy-expression>');\r\n\r\nfunction dumpMapSyntax(map, compact, syntaxAsAst) {\r\n    var result = {};\r\n\r\n    for (var name in map) {\r\n        if (map[name].syntax) {\r\n            result[name] = syntaxAsAst\r\n                ? map[name].syntax\r\n                : generate(map[name].syntax, { compact: compact });\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nfunction valueHasVar(tokens) {\r\n    for (var i = 0; i < tokens.length; i++) {\r\n        if (tokens[i].value.toLowerCase() === 'var(') {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\nfunction buildMatchResult(match, error, iterations) {\r\n    return {\r\n        matched: match,\r\n        iterations: iterations,\r\n        error: error,\r\n        getTrace: trace.getTrace,\r\n        isType: trace.isType,\r\n        isProperty: trace.isProperty,\r\n        isKeyword: trace.isKeyword\r\n    };\r\n}\r\n\r\nfunction matchSyntax(lexer, syntax, value, useCommon) {\r\n    var tokens = prepareTokens(value, lexer.syntax);\r\n    var result;\r\n\r\n    if (valueHasVar(tokens)) {\r\n        return buildMatchResult(null, new Error('Matching for a tree with var() is not supported'));\r\n    }\r\n\r\n    if (useCommon) {\r\n        result = matchAsTree(tokens, lexer.valueCommonSyntax, lexer);\r\n    }\r\n\r\n    if (!useCommon || !result.match) {\r\n        result = matchAsTree(tokens, syntax.match, lexer);\r\n        if (!result.match) {\r\n            return buildMatchResult(\r\n                null,\r\n                new MatchError(result.reason, syntax.syntax, value, result),\r\n                result.iterations\r\n            );\r\n        }\r\n    }\r\n\r\n    return buildMatchResult(result.match, null, result.iterations);\r\n}\r\n\r\nvar Lexer = function(config, syntax, structure) {\r\n    this.valueCommonSyntax = cssWideKeywords;\r\n    this.syntax = syntax;\r\n    this.generic = false;\r\n    this.atrules = {};\r\n    this.properties = {};\r\n    this.types = {};\r\n    this.structure = structure || getStructureFromConfig(config);\r\n\r\n    if (config) {\r\n        if (config.types) {\r\n            for (var name in config.types) {\r\n                this.addType_(name, config.types[name]);\r\n            }\r\n        }\r\n\r\n        if (config.generic) {\r\n            this.generic = true;\r\n            for (var name in generic) {\r\n                this.addType_(name, generic[name]);\r\n            }\r\n        }\r\n\r\n        if (config.atrules) {\r\n            for (var name in config.atrules) {\r\n                this.addAtrule_(name, config.atrules[name]);\r\n            }\r\n        }\r\n\r\n        if (config.properties) {\r\n            for (var name in config.properties) {\r\n                this.addProperty_(name, config.properties[name]);\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nLexer.prototype = {\r\n    structure: {},\r\n    checkStructure: function(ast) {\r\n        function collectWarning(node, message) {\r\n            warns.push({\r\n                node: node,\r\n                message: message\r\n            });\r\n        }\r\n\r\n        var structure = this.structure;\r\n        var warns = [];\r\n\r\n        this.syntax.walk(ast, function(node) {\r\n            if (structure.hasOwnProperty(node.type)) {\r\n                structure[node.type].check(node, collectWarning);\r\n            } else {\r\n                collectWarning(node, 'Unknown node type `' + node.type + '`');\r\n            }\r\n        });\r\n\r\n        return warns.length ? warns : false;\r\n    },\r\n\r\n    createDescriptor: function(syntax, type, name) {\r\n        var ref = {\r\n            type: type,\r\n            name: name\r\n        };\r\n        var descriptor = {\r\n            type: type,\r\n            name: name,\r\n            syntax: null,\r\n            match: null\r\n        };\r\n\r\n        if (typeof syntax === 'function') {\r\n            descriptor.match = buildMatchGraph(syntax, ref);\r\n        } else {\r\n            if (typeof syntax === 'string') {\r\n                // lazy parsing on first access\r\n                Object.defineProperty(descriptor, 'syntax', {\r\n                    get: function() {\r\n                        Object.defineProperty(descriptor, 'syntax', {\r\n                            value: parse(syntax)\r\n                        });\r\n\r\n                        return descriptor.syntax;\r\n                    }\r\n                });\r\n            } else {\r\n                descriptor.syntax = syntax;\r\n            }\r\n\r\n            // lazy graph build on first access\r\n            Object.defineProperty(descriptor, 'match', {\r\n                get: function() {\r\n                    Object.defineProperty(descriptor, 'match', {\r\n                        value: buildMatchGraph(descriptor.syntax, ref)\r\n                    });\r\n\r\n                    return descriptor.match;\r\n                }\r\n            });\r\n        }\r\n\r\n        return descriptor;\r\n    },\r\n    addAtrule_: function(name, syntax) {\r\n        this.atrules[name] = {\r\n            prelude: syntax.prelude ? this.createDescriptor(syntax.prelude, 'AtrulePrelude', name) : null,\r\n            descriptors: syntax.descriptors\r\n                ? Object.keys(syntax.descriptors).reduce((res, name) => {\r\n                    res[name] = this.createDescriptor(syntax.descriptors[name], 'AtruleDescriptor', name);\r\n                    return res;\r\n                }, {})\r\n                : null\r\n        };\r\n    },\r\n    addProperty_: function(name, syntax) {\r\n        this.properties[name] = this.createDescriptor(syntax, 'Property', name);\r\n    },\r\n    addType_: function(name, syntax) {\r\n        this.types[name] = this.createDescriptor(syntax, 'Type', name);\r\n\r\n        if (syntax === generic['-ms-legacy-expression']) {\r\n            this.valueCommonSyntax = cssWideKeywordsWithExpression;\r\n        }\r\n    },\r\n\r\n    matchAtrulePrelude: function(atruleName, prelude) {\r\n        var atrule = names.keyword(atruleName);\r\n\r\n        var atrulePreludeSyntax = atrule.vendor\r\n            ? this.getAtrulePrelude(atrule.name) || this.getAtrulePrelude(atrule.basename)\r\n            : this.getAtrulePrelude(atrule.name);\r\n\r\n        if (!atrulePreludeSyntax) {\r\n            if (atrule.basename in this.atrules) {\r\n                return buildMatchResult(null, new Error('At-rule `' + atruleName + '` should not contain a prelude'));\r\n            }\r\n\r\n            return buildMatchResult(null, new SyntaxReferenceError('Unknown at-rule', atruleName));\r\n        }\r\n\r\n        return matchSyntax(this, atrulePreludeSyntax, prelude, true);\r\n    },\r\n    matchAtruleDescriptor: function(atruleName, descriptorName, value) {\r\n        var atrule = names.keyword(atruleName);\r\n        var descriptor = names.keyword(descriptorName);\r\n\r\n        var atruleEntry = atrule.vendor\r\n            ? this.atrules[atrule.name] || this.atrules[atrule.basename]\r\n            : this.atrules[atrule.name];\r\n\r\n        if (!atruleEntry) {\r\n            return buildMatchResult(null, new SyntaxReferenceError('Unknown at-rule', atruleName));\r\n        }\r\n\r\n        if (!atruleEntry.descriptors) {\r\n            return buildMatchResult(null, new Error('At-rule `' + atruleName + '` has no known descriptors'));\r\n        }\r\n\r\n        var atruleDescriptorSyntax = descriptor.vendor\r\n            ? atruleEntry.descriptors[descriptor.name] || atruleEntry.descriptors[descriptor.basename]\r\n            : atruleEntry.descriptors[descriptor.name];\r\n\r\n        if (!atruleDescriptorSyntax) {\r\n            return buildMatchResult(null, new SyntaxReferenceError('Unknown at-rule descriptor', descriptorName));\r\n        }\r\n\r\n        return matchSyntax(this, atruleDescriptorSyntax, value, true);\r\n    },\r\n    matchDeclaration: function(node) {\r\n        if (node.type !== 'Declaration') {\r\n            return buildMatchResult(null, new Error('Not a Declaration node'));\r\n        }\r\n\r\n        return this.matchProperty(node.property, node.value);\r\n    },\r\n    matchProperty: function(propertyName, value) {\r\n        var property = names.property(propertyName);\r\n\r\n        // don't match syntax for a custom property\r\n        if (property.custom) {\r\n            return buildMatchResult(null, new Error('Lexer matching doesn\\'t applicable for custom properties'));\r\n        }\r\n\r\n        var propertySyntax = property.vendor\r\n            ? this.getProperty(property.name) || this.getProperty(property.basename)\r\n            : this.getProperty(property.name);\r\n\r\n        if (!propertySyntax) {\r\n            return buildMatchResult(null, new SyntaxReferenceError('Unknown property', propertyName));\r\n        }\r\n\r\n        return matchSyntax(this, propertySyntax, value, true);\r\n    },\r\n    matchType: function(typeName, value) {\r\n        var typeSyntax = this.getType(typeName);\r\n\r\n        if (!typeSyntax) {\r\n            return buildMatchResult(null, new SyntaxReferenceError('Unknown type', typeName));\r\n        }\r\n\r\n        return matchSyntax(this, typeSyntax, value, false);\r\n    },\r\n    match: function(syntax, value) {\r\n        if (typeof syntax !== 'string' && (!syntax || !syntax.type)) {\r\n            return buildMatchResult(null, new SyntaxReferenceError('Bad syntax'));\r\n        }\r\n\r\n        if (typeof syntax === 'string' || !syntax.match) {\r\n            syntax = this.createDescriptor(syntax, 'Type', 'anonymous');\r\n        }\r\n\r\n        return matchSyntax(this, syntax, value, false);\r\n    },\r\n\r\n    findValueFragments: function(propertyName, value, type, name) {\r\n        return search.matchFragments(this, value, this.matchProperty(propertyName, value), type, name);\r\n    },\r\n    findDeclarationValueFragments: function(declaration, type, name) {\r\n        return search.matchFragments(this, declaration.value, this.matchDeclaration(declaration), type, name);\r\n    },\r\n    findAllFragments: function(ast, type, name) {\r\n        var result = [];\r\n\r\n        this.syntax.walk(ast, {\r\n            visit: 'Declaration',\r\n            enter: function(declaration) {\r\n                result.push.apply(result, this.findDeclarationValueFragments(declaration, type, name));\r\n            }.bind(this)\r\n        });\r\n\r\n        return result;\r\n    },\r\n\r\n    getAtrulePrelude: function(atruleName) {\r\n        return this.atrules.hasOwnProperty(atruleName) ? this.atrules[atruleName].prelude : null;\r\n    },\r\n    getAtruleDescriptor: function(atruleName, name) {\r\n        return this.atrules.hasOwnProperty(atruleName) && this.atrules.declarators\r\n            ? this.atrules[atruleName].declarators[name] || null\r\n            : null;\r\n    },\r\n    getProperty: function(name) {\r\n        return this.properties.hasOwnProperty(name) ? this.properties[name] : null;\r\n    },\r\n    getType: function(name) {\r\n        return this.types.hasOwnProperty(name) ? this.types[name] : null;\r\n    },\r\n\r\n    validate: function() {\r\n        function validate(syntax, name, broken, descriptor) {\r\n            if (broken.hasOwnProperty(name)) {\r\n                return broken[name];\r\n            }\r\n\r\n            broken[name] = false;\r\n            if (descriptor.syntax !== null) {\r\n                walk(descriptor.syntax, function(node) {\r\n                    if (node.type !== 'Type' && node.type !== 'Property') {\r\n                        return;\r\n                    }\r\n\r\n                    var map = node.type === 'Type' ? syntax.types : syntax.properties;\r\n                    var brokenMap = node.type === 'Type' ? brokenTypes : brokenProperties;\r\n\r\n                    if (!map.hasOwnProperty(node.name) || validate(syntax, node.name, brokenMap, map[node.name])) {\r\n                        broken[name] = true;\r\n                    }\r\n                }, this);\r\n            }\r\n        }\r\n\r\n        var brokenTypes = {};\r\n        var brokenProperties = {};\r\n\r\n        for (var key in this.types) {\r\n            validate(this, key, brokenTypes, this.types[key]);\r\n        }\r\n\r\n        for (var key in this.properties) {\r\n            validate(this, key, brokenProperties, this.properties[key]);\r\n        }\r\n\r\n        brokenTypes = Object.keys(brokenTypes).filter(function(name) {\r\n            return brokenTypes[name];\r\n        });\r\n        brokenProperties = Object.keys(brokenProperties).filter(function(name) {\r\n            return brokenProperties[name];\r\n        });\r\n\r\n        if (brokenTypes.length || brokenProperties.length) {\r\n            return {\r\n                types: brokenTypes,\r\n                properties: brokenProperties\r\n            };\r\n        }\r\n\r\n        return null;\r\n    },\r\n    dump: function(syntaxAsAst, pretty) {\r\n        return {\r\n            generic: this.generic,\r\n            types: dumpMapSyntax(this.types, !pretty, syntaxAsAst),\r\n            properties: dumpMapSyntax(this.properties, !pretty, syntaxAsAst)\r\n        };\r\n    },\r\n    toString: function() {\r\n        return JSON.stringify(this.dump());\r\n    }\r\n};\r\n\r\nmodule.exports = Lexer;\r\n","module.exports = {\r\n    SyntaxError: require('./SyntaxError'),\r\n    parse: require('./parse'),\r\n    generate: require('./generate'),\r\n    walk: require('./walk')\r\n};\r\n","var adoptBuffer = require('./adopt-buffer');\r\nvar isBOM = require('../tokenizer').isBOM;\r\n\r\nvar N = 10;\r\nvar F = 12;\r\nvar R = 13;\r\n\r\nfunction computeLinesAndColumns(host, source) {\r\n    var sourceLength = source.length;\r\n    var lines = adoptBuffer(host.lines, sourceLength); // +1\r\n    var line = host.startLine;\r\n    var columns = adoptBuffer(host.columns, sourceLength);\r\n    var column = host.startColumn;\r\n    var startOffset = source.length > 0 ? isBOM(source.charCodeAt(0)) : 0;\r\n\r\n    for (var i = startOffset; i < sourceLength; i++) { // -1\r\n        var code = source.charCodeAt(i);\r\n\r\n        lines[i] = line;\r\n        columns[i] = column++;\r\n\r\n        if (code === N || code === R || code === F) {\r\n            if (code === R && i + 1 < sourceLength && source.charCodeAt(i + 1) === N) {\r\n                i++;\r\n                lines[i] = line;\r\n                columns[i] = column;\r\n            }\r\n\r\n            line++;\r\n            column = 1;\r\n        }\r\n    }\r\n\r\n    lines[i] = line;\r\n    columns[i] = column;\r\n\r\n    host.lines = lines;\r\n    host.columns = columns;\r\n}\r\n\r\nvar OffsetToLocation = function() {\r\n    this.lines = null;\r\n    this.columns = null;\r\n    this.linesAndColumnsComputed = false;\r\n};\r\n\r\nOffsetToLocation.prototype = {\r\n    setSource: function(source, startOffset, startLine, startColumn) {\r\n        this.source = source;\r\n        this.startOffset = typeof startOffset === 'undefined' ? 0 : startOffset;\r\n        this.startLine = typeof startLine === 'undefined' ? 1 : startLine;\r\n        this.startColumn = typeof startColumn === 'undefined' ? 1 : startColumn;\r\n        this.linesAndColumnsComputed = false;\r\n    },\r\n\r\n    ensureLinesAndColumnsComputed: function() {\r\n        if (!this.linesAndColumnsComputed) {\r\n            computeLinesAndColumns(this, this.source);\r\n            this.linesAndColumnsComputed = true;\r\n        }\r\n    },\r\n    getLocation: function(offset, filename) {\r\n        this.ensureLinesAndColumnsComputed();\r\n\r\n        return {\r\n            source: filename,\r\n            offset: this.startOffset + offset,\r\n            line: this.lines[offset],\r\n            column: this.columns[offset]\r\n        };\r\n    },\r\n    getLocationRange: function(start, end, filename) {\r\n        this.ensureLinesAndColumnsComputed();\r\n\r\n        return {\r\n            source: filename,\r\n            start: {\r\n                offset: this.startOffset + start,\r\n                line: this.lines[start],\r\n                column: this.columns[start]\r\n            },\r\n            end: {\r\n                offset: this.startOffset + end,\r\n                line: this.lines[end],\r\n                column: this.columns[end]\r\n            }\r\n        };\r\n    }\r\n};\r\n\r\nmodule.exports = OffsetToLocation;\r\n","var TYPE = require('../tokenizer').TYPE;\r\nvar WHITESPACE = TYPE.WhiteSpace;\r\nvar COMMENT = TYPE.Comment;\r\n\r\nmodule.exports = function readSequence(recognizer) {\r\n    var children = this.createList();\r\n    var child = null;\r\n    var context = {\r\n        recognizer: recognizer,\r\n        space: null,\r\n        ignoreWS: false,\r\n        ignoreWSAfter: false\r\n    };\r\n\r\n    this.scanner.skipSC();\r\n\r\n    while (!this.scanner.eof) {\r\n        switch (this.scanner.tokenType) {\r\n            case COMMENT:\r\n                this.scanner.next();\r\n                continue;\r\n\r\n            case WHITESPACE:\r\n                if (context.ignoreWS) {\r\n                    this.scanner.next();\r\n                } else {\r\n                    context.space = this.WhiteSpace();\r\n                }\r\n                continue;\r\n        }\r\n\r\n        child = recognizer.getNode.call(this, context);\r\n\r\n        if (child === undefined) {\r\n            break;\r\n        }\r\n\r\n        if (context.space !== null) {\r\n            children.push(context.space);\r\n            context.space = null;\r\n        }\r\n\r\n        children.push(child);\r\n\r\n        if (context.ignoreWSAfter) {\r\n            context.ignoreWSAfter = false;\r\n            context.ignoreWS = true;\r\n        } else {\r\n            context.ignoreWS = false;\r\n        }\r\n    }\r\n\r\n    return children;\r\n};\r\n","var OffsetToLocation = require('../common/OffsetToLocation');\r\nvar SyntaxError = require('../common/SyntaxError');\r\nvar TokenStream = require('../common/TokenStream');\r\nvar List = require('../common/List');\r\nvar tokenize = require('../tokenizer');\r\nvar constants = require('../tokenizer/const');\r\nvar findWhiteSpaceStart = require('../tokenizer/utils').findWhiteSpaceStart;\r\nvar sequence = require('./sequence');\r\nvar noop = function() {};\r\n\r\nvar TYPE = constants.TYPE;\r\nvar NAME = constants.NAME;\r\nvar WHITESPACE = TYPE.WhiteSpace;\r\nvar IDENT = TYPE.Ident;\r\nvar FUNCTION = TYPE.Function;\r\nvar URL = TYPE.Url;\r\nvar HASH = TYPE.Hash;\r\nvar PERCENTAGE = TYPE.Percentage;\r\nvar NUMBER = TYPE.Number;\r\nvar NUMBERSIGN = 0x0023; // U+0023 NUMBER SIGN (#)\r\nvar NULL = 0;\r\n\r\nfunction createParseContext(name) {\r\n    return function() {\r\n        return this[name]();\r\n    };\r\n}\r\n\r\nfunction processConfig(config) {\r\n    var parserConfig = {\r\n        context: {},\r\n        scope: {},\r\n        atrule: {},\r\n        pseudo: {}\r\n    };\r\n\r\n    if (config.parseContext) {\r\n        for (var name in config.parseContext) {\r\n            switch (typeof config.parseContext[name]) {\r\n                case 'function':\r\n                    parserConfig.context[name] = config.parseContext[name];\r\n                    break;\r\n\r\n                case 'string':\r\n                    parserConfig.context[name] = createParseContext(config.parseContext[name]);\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    if (config.scope) {\r\n        for (var name in config.scope) {\r\n            parserConfig.scope[name] = config.scope[name];\r\n        }\r\n    }\r\n\r\n    if (config.atrule) {\r\n        for (var name in config.atrule) {\r\n            var atrule = config.atrule[name];\r\n\r\n            if (atrule.parse) {\r\n                parserConfig.atrule[name] = atrule.parse;\r\n            }\r\n        }\r\n    }\r\n\r\n    if (config.pseudo) {\r\n        for (var name in config.pseudo) {\r\n            var pseudo = config.pseudo[name];\r\n\r\n            if (pseudo.parse) {\r\n                parserConfig.pseudo[name] = pseudo.parse;\r\n            }\r\n        }\r\n    }\r\n\r\n    if (config.node) {\r\n        for (var name in config.node) {\r\n            parserConfig[name] = config.node[name].parse;\r\n        }\r\n    }\r\n\r\n    return parserConfig;\r\n}\r\n\r\nmodule.exports = function createParser(config) {\r\n    var parser = {\r\n        scanner: new TokenStream(),\r\n        locationMap: new OffsetToLocation(),\r\n\r\n        filename: '<unknown>',\r\n        needPositions: false,\r\n        onParseError: noop,\r\n        onParseErrorThrow: false,\r\n        parseAtrulePrelude: true,\r\n        parseRulePrelude: true,\r\n        parseValue: true,\r\n        parseCustomProperty: false,\r\n\r\n        readSequence: sequence,\r\n\r\n        createList: function() {\r\n            return new List();\r\n        },\r\n        createSingleNodeList: function(node) {\r\n            return new List().appendData(node);\r\n        },\r\n        getFirstListNode: function(list) {\r\n            return list && list.first();\r\n        },\r\n        getLastListNode: function(list) {\r\n            return list.last();\r\n        },\r\n\r\n        parseWithFallback: function(consumer, fallback) {\r\n            var startToken = this.scanner.tokenIndex;\r\n\r\n            try {\r\n                return consumer.call(this);\r\n            } catch (e) {\r\n                if (this.onParseErrorThrow) {\r\n                    throw e;\r\n                }\r\n\r\n                var fallbackNode = fallback.call(this, startToken);\r\n\r\n                this.onParseErrorThrow = true;\r\n                this.onParseError(e, fallbackNode);\r\n                this.onParseErrorThrow = false;\r\n\r\n                return fallbackNode;\r\n            }\r\n        },\r\n\r\n        lookupNonWSType: function(offset) {\r\n            do {\r\n                var type = this.scanner.lookupType(offset++);\r\n                if (type !== WHITESPACE) {\r\n                    return type;\r\n                }\r\n            } while (type !== NULL);\r\n\r\n            return NULL;\r\n        },\r\n\r\n        eat: function(tokenType) {\r\n            if (this.scanner.tokenType !== tokenType) {\r\n                var offset = this.scanner.tokenStart;\r\n                var message = NAME[tokenType] + ' is expected';\r\n\r\n                // tweak message and offset\r\n                switch (tokenType) {\r\n                    case IDENT:\r\n                        // when identifier is expected but there is a function or url\r\n                        if (this.scanner.tokenType === FUNCTION || this.scanner.tokenType === URL) {\r\n                            offset = this.scanner.tokenEnd - 1;\r\n                            message = 'Identifier is expected but function found';\r\n                        } else {\r\n                            message = 'Identifier is expected';\r\n                        }\r\n                        break;\r\n\r\n                    case HASH:\r\n                        if (this.scanner.isDelim(NUMBERSIGN)) {\r\n                            this.scanner.next();\r\n                            offset++;\r\n                            message = 'Name is expected';\r\n                        }\r\n                        break;\r\n\r\n                    case PERCENTAGE:\r\n                        if (this.scanner.tokenType === NUMBER) {\r\n                            offset = this.scanner.tokenEnd;\r\n                            message = 'Percent sign is expected';\r\n                        }\r\n                        break;\r\n\r\n                    default:\r\n                        // when test type is part of another token show error for current position + 1\r\n                        // e.g. eat(HYPHENMINUS) will fail on \"-foo\", but pointing on \"-\" is odd\r\n                        if (this.scanner.source.charCodeAt(this.scanner.tokenStart) === tokenType) {\r\n                            offset = offset + 1;\r\n                        }\r\n                }\r\n\r\n                this.error(message, offset);\r\n            }\r\n\r\n            this.scanner.next();\r\n        },\r\n\r\n        consume: function(tokenType) {\r\n            var value = this.scanner.getTokenValue();\r\n\r\n            this.eat(tokenType);\r\n\r\n            return value;\r\n        },\r\n        consumeFunctionName: function() {\r\n            var name = this.scanner.source.substring(this.scanner.tokenStart, this.scanner.tokenEnd - 1);\r\n\r\n            this.eat(FUNCTION);\r\n\r\n            return name;\r\n        },\r\n\r\n        getLocation: function(start, end) {\r\n            if (this.needPositions) {\r\n                return this.locationMap.getLocationRange(\r\n                    start,\r\n                    end,\r\n                    this.filename\r\n                );\r\n            }\r\n\r\n            return null;\r\n        },\r\n        getLocationFromList: function(list) {\r\n            if (this.needPositions) {\r\n                var head = this.getFirstListNode(list);\r\n                var tail = this.getLastListNode(list);\r\n                return this.locationMap.getLocationRange(\r\n                    head !== null ? head.loc.start.offset - this.locationMap.startOffset : this.scanner.tokenStart,\r\n                    tail !== null ? tail.loc.end.offset - this.locationMap.startOffset : this.scanner.tokenStart,\r\n                    this.filename\r\n                );\r\n            }\r\n\r\n            return null;\r\n        },\r\n\r\n        error: function(message, offset) {\r\n            var location = typeof offset !== 'undefined' && offset < this.scanner.source.length\r\n                ? this.locationMap.getLocation(offset)\r\n                : this.scanner.eof\r\n                    ? this.locationMap.getLocation(findWhiteSpaceStart(this.scanner.source, this.scanner.source.length - 1))\r\n                    : this.locationMap.getLocation(this.scanner.tokenStart);\r\n\r\n            throw new SyntaxError(\r\n                message || 'Unexpected input',\r\n                this.scanner.source,\r\n                location.offset,\r\n                location.line,\r\n                location.column\r\n            );\r\n        }\r\n    };\r\n\r\n    config = processConfig(config || {});\r\n    for (var key in config) {\r\n        parser[key] = config[key];\r\n    }\r\n\r\n    return function(source, options) {\r\n        options = options || {};\r\n\r\n        var context = options.context || 'default';\r\n        var ast;\r\n\r\n        tokenize(source, parser.scanner);\r\n        parser.locationMap.setSource(\r\n            source,\r\n            options.offset,\r\n            options.line,\r\n            options.column\r\n        );\r\n\r\n        parser.filename = options.filename || '<unknown>';\r\n        parser.needPositions = Boolean(options.positions);\r\n        parser.onParseError = typeof options.onParseError === 'function' ? options.onParseError : noop;\r\n        parser.onParseErrorThrow = false;\r\n        parser.parseAtrulePrelude = 'parseAtrulePrelude' in options ? Boolean(options.parseAtrulePrelude) : true;\r\n        parser.parseRulePrelude = 'parseRulePrelude' in options ? Boolean(options.parseRulePrelude) : true;\r\n        parser.parseValue = 'parseValue' in options ? Boolean(options.parseValue) : true;\r\n        parser.parseCustomProperty = 'parseCustomProperty' in options ? Boolean(options.parseCustomProperty) : false;\r\n\r\n        if (!parser.context.hasOwnProperty(context)) {\r\n            throw new Error('Unknown context `' + context + '`');\r\n        }\r\n\r\n        ast = parser.context[context].call(parser, options);\r\n\r\n        if (!parser.scanner.eof) {\r\n            parser.error();\r\n        }\r\n\r\n        return ast;\r\n    };\r\n};\r\n","var hasOwnProperty = Object.prototype.hasOwnProperty;\r\n\r\nfunction processChildren(node, delimeter) {\r\n    var list = node.children;\r\n    var prev = null;\r\n\r\n    if (typeof delimeter !== 'function') {\r\n        list.forEach(this.node, this);\r\n    } else {\r\n        list.forEach(function(node) {\r\n            if (prev !== null) {\r\n                delimeter.call(this, prev);\r\n            }\r\n\r\n            this.node(node);\r\n            prev = node;\r\n        }, this);\r\n    }\r\n}\r\n\r\nmodule.exports = function createGenerator(config) {\r\n    function processNode(node) {\r\n        if (hasOwnProperty.call(types, node.type)) {\r\n            types[node.type].call(this, node);\r\n        } else {\r\n            throw new Error('Unknown node type: ' + node.type);\r\n        }\r\n    }\r\n\r\n    var types = {};\r\n\r\n    if (config.node) {\r\n        for (var name in config.node) {\r\n            types[name] = config.node[name].generate;\r\n        }\r\n    }\r\n\r\n    return function(node, options) {\r\n        var buffer = '';\r\n        var handlers = {\r\n            children: processChildren,\r\n            node: processNode,\r\n            chunk: function(chunk) {\r\n                buffer += chunk;\r\n            },\r\n            result: function() {\r\n                return buffer;\r\n            }\r\n        };\r\n\r\n        if (options) {\r\n            if (typeof options.decorator === 'function') {\r\n                handlers = options.decorator(handlers);\r\n            }\r\n        }\r\n\r\n        handlers.node(node);\r\n\r\n        return handlers.result();\r\n    };\r\n};\r\n","var List = require('../common/List');\r\n\r\nmodule.exports = function createConvertors(walk) {\r\n    return {\r\n        fromPlainObject: function(ast) {\r\n            walk(ast, {\r\n                enter: function(node) {\r\n                    if (node.children && node.children instanceof List === false) {\r\n                        node.children = new List().fromArray(node.children);\r\n                    }\r\n                }\r\n            });\r\n\r\n            return ast;\r\n        },\r\n        toPlainObject: function(ast) {\r\n            walk(ast, {\r\n                leave: function(node) {\r\n                    if (node.children && node.children instanceof List) {\r\n                        node.children = node.children.toArray();\r\n                    }\r\n                }\r\n            });\r\n\r\n            return ast;\r\n        }\r\n    };\r\n};\r\n","var hasOwnProperty = Object.prototype.hasOwnProperty;\r\nvar noop = function() {};\r\n\r\nfunction ensureFunction(value) {\r\n    return typeof value === 'function' ? value : noop;\r\n}\r\n\r\nfunction invokeForType(fn, type) {\r\n    return function(node, item, list) {\r\n        if (node.type === type) {\r\n            fn.call(this, node, item, list);\r\n        }\r\n    };\r\n}\r\n\r\nfunction getWalkersFromStructure(name, nodeType) {\r\n    var structure = nodeType.structure;\r\n    var walkers = [];\r\n\r\n    for (var key in structure) {\r\n        if (hasOwnProperty.call(structure, key) === false) {\r\n            continue;\r\n        }\r\n\r\n        var fieldTypes = structure[key];\r\n        var walker = {\r\n            name: key,\r\n            type: false,\r\n            nullable: false\r\n        };\r\n\r\n        if (!Array.isArray(structure[key])) {\r\n            fieldTypes = [structure[key]];\r\n        }\r\n\r\n        for (var i = 0; i < fieldTypes.length; i++) {\r\n            var fieldType = fieldTypes[i];\r\n            if (fieldType === null) {\r\n                walker.nullable = true;\r\n            } else if (typeof fieldType === 'string') {\r\n                walker.type = 'node';\r\n            } else if (Array.isArray(fieldType)) {\r\n                walker.type = 'list';\r\n            }\r\n        }\r\n\r\n        if (walker.type) {\r\n            walkers.push(walker);\r\n        }\r\n    }\r\n\r\n    if (walkers.length) {\r\n        return {\r\n            context: nodeType.walkContext,\r\n            fields: walkers\r\n        };\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nfunction getTypesFromConfig(config) {\r\n    var types = {};\r\n\r\n    for (var name in config.node) {\r\n        if (hasOwnProperty.call(config.node, name)) {\r\n            var nodeType = config.node[name];\r\n\r\n            if (!nodeType.structure) {\r\n                throw new Error('Missed `structure` field in `' + name + '` node type definition');\r\n            }\r\n\r\n            types[name] = getWalkersFromStructure(name, nodeType);\r\n        }\r\n    }\r\n\r\n    return types;\r\n}\r\n\r\nfunction createTypeIterator(config, reverse) {\r\n    var fields = config.fields.slice();\r\n    var contextName = config.context;\r\n    var useContext = typeof contextName === 'string';\r\n\r\n    if (reverse) {\r\n        fields.reverse();\r\n    }\r\n\r\n    return function(node, context, walk) {\r\n        var prevContextValue;\r\n\r\n        if (useContext) {\r\n            prevContextValue = context[contextName];\r\n            context[contextName] = node;\r\n        }\r\n\r\n        for (var i = 0; i < fields.length; i++) {\r\n            var field = fields[i];\r\n            var ref = node[field.name];\r\n\r\n            if (!field.nullable || ref) {\r\n                if (field.type === 'list') {\r\n                    if (reverse) {\r\n                        ref.forEachRight(walk);\r\n                    } else {\r\n                        ref.forEach(walk);\r\n                    }\r\n                } else {\r\n                    walk(ref);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (useContext) {\r\n            context[contextName] = prevContextValue;\r\n        }\r\n    };\r\n}\r\n\r\nfunction createFastTraveralMap(iterators) {\r\n    return {\r\n        Atrule: {\r\n            StyleSheet: iterators.StyleSheet,\r\n            Atrule: iterators.Atrule,\r\n            Rule: iterators.Rule,\r\n            Block: iterators.Block\r\n        },\r\n        Rule: {\r\n            StyleSheet: iterators.StyleSheet,\r\n            Atrule: iterators.Atrule,\r\n            Rule: iterators.Rule,\r\n            Block: iterators.Block\r\n        },\r\n        Declaration: {\r\n            StyleSheet: iterators.StyleSheet,\r\n            Atrule: iterators.Atrule,\r\n            Rule: iterators.Rule,\r\n            Block: iterators.Block,\r\n            DeclarationList: iterators.DeclarationList\r\n        }\r\n    };\r\n}\r\n\r\nmodule.exports = function createWalker(config) {\r\n    var types = getTypesFromConfig(config);\r\n    var iteratorsNatural = {};\r\n    var iteratorsReverse = {};\r\n\r\n    for (var name in types) {\r\n        if (hasOwnProperty.call(types, name) && types[name] !== null) {\r\n            iteratorsNatural[name] = createTypeIterator(types[name], false);\r\n            iteratorsReverse[name] = createTypeIterator(types[name], true);\r\n        }\r\n    }\r\n\r\n    var fastTraversalIteratorsNatural = createFastTraveralMap(iteratorsNatural);\r\n    var fastTraversalIteratorsReverse = createFastTraveralMap(iteratorsReverse);\r\n\r\n    var walk = function(root, options) {\r\n        function walkNode(node, item, list) {\r\n            enter.call(context, node, item, list);\r\n\r\n            if (iterators.hasOwnProperty(node.type)) {\r\n                iterators[node.type](node, context, walkNode);\r\n            }\r\n\r\n            leave.call(context, node, item, list);\r\n        }\r\n\r\n        var enter = noop;\r\n        var leave = noop;\r\n        var iterators = iteratorsNatural;\r\n        var context = {\r\n            root: root,\r\n            stylesheet: null,\r\n            atrule: null,\r\n            atrulePrelude: null,\r\n            rule: null,\r\n            selector: null,\r\n            block: null,\r\n            declaration: null,\r\n            function: null\r\n        };\r\n\r\n        if (typeof options === 'function') {\r\n            enter = options;\r\n        } else if (options) {\r\n            enter = ensureFunction(options.enter);\r\n            leave = ensureFunction(options.leave);\r\n\r\n            if (options.reverse) {\r\n                iterators = iteratorsReverse;\r\n            }\r\n\r\n            if (options.visit) {\r\n                if (fastTraversalIteratorsNatural.hasOwnProperty(options.visit)) {\r\n                    iterators = options.reverse\r\n                        ? fastTraversalIteratorsReverse[options.visit]\r\n                        : fastTraversalIteratorsNatural[options.visit];\r\n                } else if (!types.hasOwnProperty(options.visit)) {\r\n                    throw new Error('Bad value `' + options.visit + '` for `visit` option (should be: ' + Object.keys(types).join(', ') + ')');\r\n                }\r\n\r\n                enter = invokeForType(enter, options.visit);\r\n                leave = invokeForType(leave, options.visit);\r\n            }\r\n        }\r\n\r\n        if (enter === noop && leave === noop) {\r\n            throw new Error('Neither `enter` nor `leave` walker handler is set or both aren\\'t a function');\r\n        }\r\n\r\n        // swap handlers in reverse mode to invert visit order\r\n        if (options.reverse) {\r\n            var tmp = enter;\r\n            enter = leave;\r\n            leave = tmp;\r\n        }\r\n\r\n        walkNode(root);\r\n    };\r\n\r\n    walk.find = function(ast, fn) {\r\n        var found = null;\r\n\r\n        walk(ast, function(node, item, list) {\r\n            if (found === null && fn.call(this, node, item, list)) {\r\n                found = node;\r\n            }\r\n        });\r\n\r\n        return found;\r\n    };\r\n\r\n    walk.findLast = function(ast, fn) {\r\n        var found = null;\r\n\r\n        walk(ast, {\r\n            reverse: true,\r\n            enter: function(node, item, list) {\r\n                if (found === null && fn.call(this, node, item, list)) {\r\n                    found = node;\r\n                }\r\n            }\r\n        });\r\n\r\n        return found;\r\n    };\r\n\r\n    walk.findAll = function(ast, fn) {\r\n        var found = [];\r\n\r\n        walk(ast, function(node, item, list) {\r\n            if (fn.call(this, node, item, list)) {\r\n                found.push(node);\r\n            }\r\n        });\r\n\r\n        return found;\r\n    };\r\n\r\n    return walk;\r\n};\r\n","var List = require('../common/List');\r\n\r\nmodule.exports = function clone(node) {\r\n    var result = {};\r\n\r\n    for (var key in node) {\r\n        var value = node[key];\r\n\r\n        if (value) {\r\n            if (Array.isArray(value) || value instanceof List) {\r\n                value = value.map(clone);\r\n            } else if (value.constructor === Object) {\r\n                value = clone(value);\r\n            }\r\n        }\r\n\r\n        result[key] = value;\r\n    }\r\n\r\n    return result;\r\n};\r\n","var hasOwnProperty = Object.prototype.hasOwnProperty;\r\nvar shape = {\r\n    generic: true,\r\n    types: {},\r\n    atrules: {},\r\n    properties: {},\r\n    parseContext: {},\r\n    scope: {},\r\n    atrule: ['parse'],\r\n    pseudo: ['parse'],\r\n    node: ['name', 'structure', 'parse', 'generate', 'walkContext']\r\n};\r\n\r\nfunction isObject(value) {\r\n    return value && value.constructor === Object;\r\n}\r\n\r\nfunction copy(value) {\r\n    if (isObject(value)) {\r\n        return Object.assign({}, value);\r\n    } else {\r\n        return value;\r\n    }\r\n}\r\nfunction extend(dest, src) {\r\n    for (var key in src) {\r\n        if (hasOwnProperty.call(src, key)) {\r\n            if (isObject(dest[key])) {\r\n                extend(dest[key], copy(src[key]));\r\n            } else {\r\n                dest[key] = copy(src[key]);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction mix(dest, src, shape) {\r\n    for (var key in shape) {\r\n        if (hasOwnProperty.call(shape, key) === false) {\r\n            continue;\r\n        }\r\n\r\n        if (shape[key] === true) {\r\n            if (key in src) {\r\n                if (hasOwnProperty.call(src, key)) {\r\n                    dest[key] = copy(src[key]);\r\n                }\r\n            }\r\n        } else if (shape[key]) {\r\n            if (isObject(shape[key])) {\r\n                var res = {};\r\n                extend(res, dest[key]);\r\n                extend(res, src[key]);\r\n                dest[key] = res;\r\n            } else if (Array.isArray(shape[key])) {\r\n                var res = {};\r\n                var innerShape = shape[key].reduce(function(s, k) {\r\n                    s[k] = true;\r\n                    return s;\r\n                }, {});\r\n                for (var name in dest[key]) {\r\n                    if (hasOwnProperty.call(dest[key], name)) {\r\n                        res[name] = {};\r\n                        if (dest[key] && dest[key][name]) {\r\n                            mix(res[name], dest[key][name], innerShape);\r\n                        }\r\n                    }\r\n                }\r\n                for (var name in src[key]) {\r\n                    if (hasOwnProperty.call(src[key], name)) {\r\n                        if (!res[name]) {\r\n                            res[name] = {};\r\n                        }\r\n                        if (src[key] && src[key][name]) {\r\n                            mix(res[name], src[key][name], innerShape);\r\n                        }\r\n                    }\r\n                }\r\n                dest[key] = res;\r\n            }\r\n        }\r\n    }\r\n    return dest;\r\n}\r\n\r\nmodule.exports = function(dest, src) {\r\n    return mix(dest, src, shape);\r\n};\r\n","var List = require('../common/List');\r\nvar SyntaxError = require('../common/SyntaxError');\r\nvar TokenStream = require('../common/TokenStream');\r\nvar Lexer = require('../lexer/Lexer');\r\nvar definitionSyntax = require('../definition-syntax');\r\nvar tokenize = require('../tokenizer');\r\nvar createParser = require('../parser/create');\r\nvar createGenerator = require('../generator/create');\r\nvar createConvertor = require('../convertor/create');\r\nvar createWalker = require('../walker/create');\r\nvar clone = require('../utils/clone');\r\nvar names = require('../utils/names');\r\nvar mix = require('./config/mix');\r\n\r\nfunction createSyntax(config) {\r\n    var parse = createParser(config);\r\n    var walk = createWalker(config);\r\n    var generate = createGenerator(config);\r\n    var convert = createConvertor(walk);\r\n\r\n    var syntax = {\r\n        List: List,\r\n        SyntaxError: SyntaxError,\r\n        TokenStream: TokenStream,\r\n        Lexer: Lexer,\r\n\r\n        vendorPrefix: names.vendorPrefix,\r\n        keyword: names.keyword,\r\n        property: names.property,\r\n        isCustomProperty: names.isCustomProperty,\r\n\r\n        definitionSyntax: definitionSyntax,\r\n        lexer: null,\r\n        createLexer: function(config) {\r\n            return new Lexer(config, syntax, syntax.lexer.structure);\r\n        },\r\n\r\n        tokenize: tokenize,\r\n        parse: parse,\r\n        walk: walk,\r\n        generate: generate,\r\n\r\n        find: walk.find,\r\n        findLast: walk.findLast,\r\n        findAll: walk.findAll,\r\n\r\n        clone: clone,\r\n        fromPlainObject: convert.fromPlainObject,\r\n        toPlainObject: convert.toPlainObject,\r\n\r\n        createSyntax: function(config) {\r\n            return createSyntax(mix({}, config));\r\n        },\r\n        fork: function(extension) {\r\n            var base = mix({}, config); // copy of config\r\n            return createSyntax(\r\n                typeof extension === 'function'\r\n                    ? extension(base, Object.assign)\r\n                    : mix(base, extension)\r\n            );\r\n        }\r\n    };\r\n\r\n    syntax.lexer = new Lexer({\r\n        generic: true,\r\n        types: config.types,\r\n        atrules: config.atrules,\r\n        properties: config.properties,\r\n        node: config.node\r\n    }, syntax);\r\n\r\n    return syntax;\r\n};\r\n\r\nexports.create = function(config) {\r\n    return createSyntax(mix({}, config));\r\n};\r\n","var mdnAtrules = require('mdn-data-animatable/css/at-rules.json');\r\nvar mdnProperties = require('mdn-data-animatable/css/properties.json');\r\nvar mdnSyntaxes = require('mdn-data-animatable/css/syntaxes.json');\r\nvar patch = require('./patch.json');\r\n\r\nfunction preprocessAtrules(dict) {\r\n    var result = Object.create(null);\r\n\r\n    for (var atruleName in dict) {\r\n        var atrule = dict[atruleName];\r\n        var descriptors = null;\r\n\r\n        if (atrule.descriptors) {\r\n            descriptors = Object.create(null);\r\n\r\n            for (var descriptor in atrule.descriptors) {\r\n                descriptors[descriptor] = atrule.descriptors[descriptor].syntax;\r\n            }\r\n        }\r\n\r\n        result[atruleName.substr(1)] = {\r\n            prelude: atrule.syntax.trim().match(/^@\\S+\\s+([^;\\{]*)/)[1].trim() || null,\r\n            descriptors\r\n        };\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nfunction buildDictionary(dict, patchDict) {\r\n    var result = {};\r\n\r\n    // copy all syntaxes for an original dict\r\n    for (var key in dict) {\r\n        result[key] = dict[key].syntax;\r\n    }\r\n\r\n    // apply a patch\r\n    for (var key in patchDict) {\r\n        if (key in dict) {\r\n            if (patchDict[key].syntax) {\r\n                result[key] = patchDict[key].syntax;\r\n            } else {\r\n                delete result[key];\r\n            }\r\n        } else {\r\n            if (patchDict[key].syntax) {\r\n                result[key] = patchDict[key].syntax;\r\n            }\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nmodule.exports = {\r\n    types: buildDictionary(mdnSyntaxes, patch.syntaxes),\r\n    atrules: preprocessAtrules(mdnAtrules),\r\n    properties: buildDictionary(mdnProperties, patch.properties)\r\n};\r\n","var cmpChar = require('../../tokenizer').cmpChar;\r\nvar isDigit = require('../../tokenizer').isDigit;\r\nvar TYPE = require('../../tokenizer').TYPE;\r\n\r\nvar WHITESPACE = TYPE.WhiteSpace;\r\nvar COMMENT = TYPE.Comment;\r\nvar IDENT = TYPE.Ident;\r\nvar NUMBER = TYPE.Number;\r\nvar DIMENSION = TYPE.Dimension;\r\nvar PLUSSIGN = 0x002B;    // U+002B PLUS SIGN (+)\r\nvar HYPHENMINUS = 0x002D; // U+002D HYPHEN-MINUS (-)\r\nvar N = 0x006E;           // U+006E LATIN SMALL LETTER N (n)\r\nvar DISALLOW_SIGN = true;\r\nvar ALLOW_SIGN = false;\r\n\r\nfunction checkInteger(offset, disallowSign) {\r\n    var pos = this.scanner.tokenStart + offset;\r\n    var code = this.scanner.source.charCodeAt(pos);\r\n\r\n    if (code === PLUSSIGN || code === HYPHENMINUS) {\r\n        if (disallowSign) {\r\n            this.error('Number sign is not allowed');\r\n        }\r\n        pos++;\r\n    }\r\n\r\n    for (; pos < this.scanner.tokenEnd; pos++) {\r\n        if (!isDigit(this.scanner.source.charCodeAt(pos))) {\r\n            this.error('Integer is expected', pos);\r\n        }\r\n    }\r\n}\r\n\r\nfunction checkTokenIsInteger(disallowSign) {\r\n    return checkInteger.call(this, 0, disallowSign);\r\n}\r\n\r\nfunction expectCharCode(offset, code) {\r\n    if (!cmpChar(this.scanner.source, this.scanner.tokenStart + offset, code)) {\r\n        var msg = '';\r\n\r\n        switch (code) {\r\n            case N:\r\n                msg = 'N is expected';\r\n                break;\r\n            case HYPHENMINUS:\r\n                msg = 'HyphenMinus is expected';\r\n                break;\r\n        }\r\n\r\n        this.error(msg, this.scanner.tokenStart + offset);\r\n    }\r\n}\r\n\r\n// ... <signed-integer>\r\n// ... ['+' | '-'] <signless-integer>\r\nfunction consumeB() {\r\n    var offset = 0;\r\n    var sign = 0;\r\n    var type = this.scanner.tokenType;\r\n\r\n    while (type === WHITESPACE || type === COMMENT) {\r\n        type = this.scanner.lookupType(++offset);\r\n    }\r\n\r\n    if (type !== NUMBER) {\r\n        if (this.scanner.isDelim(PLUSSIGN, offset) ||\r\n            this.scanner.isDelim(HYPHENMINUS, offset)) {\r\n            sign = this.scanner.isDelim(PLUSSIGN, offset) ? PLUSSIGN : HYPHENMINUS;\r\n\r\n            do {\r\n                type = this.scanner.lookupType(++offset);\r\n            } while (type === WHITESPACE || type === COMMENT);\r\n\r\n            if (type !== NUMBER) {\r\n                this.scanner.skip(offset);\r\n                checkTokenIsInteger.call(this, DISALLOW_SIGN);\r\n            }\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    if (offset > 0) {\r\n        this.scanner.skip(offset);\r\n    }\r\n\r\n    if (sign === 0) {\r\n        type = this.scanner.source.charCodeAt(this.scanner.tokenStart);\r\n        if (type !== PLUSSIGN && type !== HYPHENMINUS) {\r\n            this.error('Number sign is expected');\r\n        }\r\n    }\r\n\r\n    checkTokenIsInteger.call(this, sign !== 0);\r\n    return sign === HYPHENMINUS ? '-' + this.consume(NUMBER) : this.consume(NUMBER);\r\n}\r\n\r\n// An+B microsyntax https://www.w3.org/TR/css-syntax-3/#anb\r\nmodule.exports = {\r\n    name: 'AnPlusB',\r\n    structure: {\r\n        a: [String, null],\r\n        b: [String, null]\r\n    },\r\n    parse: function() {\r\n        /* eslint-disable brace-style*/\r\n        var start = this.scanner.tokenStart;\r\n        var a = null;\r\n        var b = null;\r\n\r\n        // <integer>\r\n        if (this.scanner.tokenType === NUMBER) {\r\n            checkTokenIsInteger.call(this, ALLOW_SIGN);\r\n            b = this.consume(NUMBER);\r\n        }\r\n\r\n        // -n\r\n        // -n <signed-integer>\r\n        // -n ['+' | '-'] <signless-integer>\r\n        // -n- <signless-integer>\r\n        // <dashndashdigit-ident>\r\n        else if (this.scanner.tokenType === IDENT && cmpChar(this.scanner.source, this.scanner.tokenStart, HYPHENMINUS)) {\r\n            a = '-1';\r\n\r\n            expectCharCode.call(this, 1, N);\r\n\r\n            switch (this.scanner.getTokenLength()) {\r\n                // -n\r\n                // -n <signed-integer>\r\n                // -n ['+' | '-'] <signless-integer>\r\n                case 2:\r\n                    this.scanner.next();\r\n                    b = consumeB.call(this);\r\n                    break;\r\n\r\n                // -n- <signless-integer>\r\n                case 3:\r\n                    expectCharCode.call(this, 2, HYPHENMINUS);\r\n\r\n                    this.scanner.next();\r\n                    this.scanner.skipSC();\r\n\r\n                    checkTokenIsInteger.call(this, DISALLOW_SIGN);\r\n\r\n                    b = '-' + this.consume(NUMBER);\r\n                    break;\r\n\r\n                // <dashndashdigit-ident>\r\n                default:\r\n                    expectCharCode.call(this, 2, HYPHENMINUS);\r\n                    checkInteger.call(this, 3, DISALLOW_SIGN);\r\n                    this.scanner.next();\r\n\r\n                    b = this.scanner.substrToCursor(start + 2);\r\n            }\r\n        }\r\n\r\n        // '+'? n\r\n        // '+'? n <signed-integer>\r\n        // '+'? n ['+' | '-'] <signless-integer>\r\n        // '+'? n- <signless-integer>\r\n        // '+'? <ndashdigit-ident>\r\n        else if (this.scanner.tokenType === IDENT || (this.scanner.isDelim(PLUSSIGN) && this.scanner.lookupType(1) === IDENT)) {\r\n            var sign = 0;\r\n            a = '1';\r\n\r\n            // just ignore a plus\r\n            if (this.scanner.isDelim(PLUSSIGN)) {\r\n                sign = 1;\r\n                this.scanner.next();\r\n            }\r\n\r\n            expectCharCode.call(this, 0, N);\r\n\r\n            switch (this.scanner.getTokenLength()) {\r\n                // '+'? n\r\n                // '+'? n <signed-integer>\r\n                // '+'? n ['+' | '-'] <signless-integer>\r\n                case 1:\r\n                    this.scanner.next();\r\n                    b = consumeB.call(this);\r\n                    break;\r\n\r\n                // '+'? n- <signless-integer>\r\n                case 2:\r\n                    expectCharCode.call(this, 1, HYPHENMINUS);\r\n\r\n                    this.scanner.next();\r\n                    this.scanner.skipSC();\r\n\r\n                    checkTokenIsInteger.call(this, DISALLOW_SIGN);\r\n\r\n                    b = '-' + this.consume(NUMBER);\r\n                    break;\r\n\r\n                // '+'? <ndashdigit-ident>\r\n                default:\r\n                    expectCharCode.call(this, 1, HYPHENMINUS);\r\n                    checkInteger.call(this, 2, DISALLOW_SIGN);\r\n                    this.scanner.next();\r\n\r\n                    b = this.scanner.substrToCursor(start + sign + 1);\r\n            }\r\n        }\r\n\r\n        // <ndashdigit-dimension>\r\n        // <ndash-dimension> <signless-integer>\r\n        // <n-dimension>\r\n        // <n-dimension> <signed-integer>\r\n        // <n-dimension> ['+' | '-'] <signless-integer>\r\n        else if (this.scanner.tokenType === DIMENSION) {\r\n            var code = this.scanner.source.charCodeAt(this.scanner.tokenStart);\r\n            var sign = code === PLUSSIGN || code === HYPHENMINUS;\r\n\r\n            for (var i = this.scanner.tokenStart + sign; i < this.scanner.tokenEnd; i++) {\r\n                if (!isDigit(this.scanner.source.charCodeAt(i))) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (i === this.scanner.tokenStart + sign) {\r\n                this.error('Integer is expected', this.scanner.tokenStart + sign);\r\n            }\r\n\r\n            expectCharCode.call(this, i - this.scanner.tokenStart, N);\r\n            a = this.scanner.source.substring(start, i);\r\n\r\n            // <n-dimension>\r\n            // <n-dimension> <signed-integer>\r\n            // <n-dimension> ['+' | '-'] <signless-integer>\r\n            if (i + 1 === this.scanner.tokenEnd) {\r\n                this.scanner.next();\r\n                b = consumeB.call(this);\r\n            } else {\r\n                expectCharCode.call(this, i - this.scanner.tokenStart + 1, HYPHENMINUS);\r\n\r\n                // <ndash-dimension> <signless-integer>\r\n                if (i + 2 === this.scanner.tokenEnd) {\r\n                    this.scanner.next();\r\n                    this.scanner.skipSC();\r\n                    checkTokenIsInteger.call(this, DISALLOW_SIGN);\r\n                    b = '-' + this.consume(NUMBER);\r\n                }\r\n                // <ndashdigit-dimension>\r\n                else {\r\n                    checkInteger.call(this, i - this.scanner.tokenStart + 2, DISALLOW_SIGN);\r\n                    this.scanner.next();\r\n                    b = this.scanner.substrToCursor(i + 1);\r\n                }\r\n            }\r\n        } else {\r\n            this.error();\r\n        }\r\n\r\n        if (a !== null && a.charCodeAt(0) === PLUSSIGN) {\r\n            a = a.substr(1);\r\n        }\r\n\r\n        if (b !== null && b.charCodeAt(0) === PLUSSIGN) {\r\n            b = b.substr(1);\r\n        }\r\n\r\n        return {\r\n            type: 'AnPlusB',\r\n            loc: this.getLocation(start, this.scanner.tokenStart),\r\n            a: a,\r\n            b: b\r\n        };\r\n    },\r\n    generate: function(node) {\r\n        var a = node.a !== null && node.a !== undefined;\r\n        var b = node.b !== null && node.b !== undefined;\r\n\r\n        if (a) {\r\n            this.chunk(\r\n                node.a === '+1' ? '+n' : // eslint-disable-line operator-linebreak, indent\r\n                node.a ===  '1' ?  'n' : // eslint-disable-line operator-linebreak, indent\r\n                node.a === '-1' ? '-n' : // eslint-disable-line operator-linebreak, indent\r\n                node.a + 'n'             // eslint-disable-line operator-linebreak, indent\r\n            );\r\n\r\n            if (b) {\r\n                b = String(node.b);\r\n                if (b.charAt(0) === '-' || b.charAt(0) === '+') {\r\n                    this.chunk(b.charAt(0));\r\n                    this.chunk(b.substr(1));\r\n                } else {\r\n                    this.chunk('+');\r\n                    this.chunk(b);\r\n                }\r\n            }\r\n        } else {\r\n            this.chunk(String(node.b));\r\n        }\r\n    }\r\n};\r\n","var tokenizer = require('../../tokenizer');\r\nvar TYPE = tokenizer.TYPE;\r\n\r\nvar WhiteSpace = TYPE.WhiteSpace;\r\nvar Semicolon = TYPE.Semicolon;\r\nvar LeftCurlyBracket = TYPE.LeftCurlyBracket;\r\nvar Delim = TYPE.Delim;\r\nvar EXCLAMATIONMARK = 0x0021; // U+0021 EXCLAMATION MARK (!)\r\n\r\nfunction getOffsetExcludeWS() {\r\n    if (this.scanner.tokenIndex > 0) {\r\n        if (this.scanner.lookupType(-1) === WhiteSpace) {\r\n            return this.scanner.tokenIndex > 1\r\n                ? this.scanner.getTokenStart(this.scanner.tokenIndex - 1)\r\n                : this.scanner.firstCharOffset;\r\n        }\r\n    }\r\n\r\n    return this.scanner.tokenStart;\r\n}\r\n\r\n// 0, 0, false\r\nfunction balanceEnd() {\r\n    return 0;\r\n}\r\n\r\n// LEFTCURLYBRACKET, 0, false\r\nfunction leftCurlyBracket(tokenType) {\r\n    return tokenType === LeftCurlyBracket ? 1 : 0;\r\n}\r\n\r\n// LEFTCURLYBRACKET, SEMICOLON, false\r\nfunction leftCurlyBracketOrSemicolon(tokenType) {\r\n    return tokenType === LeftCurlyBracket || tokenType === Semicolon ? 1 : 0;\r\n}\r\n\r\n// EXCLAMATIONMARK, SEMICOLON, false\r\nfunction exclamationMarkOrSemicolon(tokenType, source, offset) {\r\n    if (tokenType === Delim && source.charCodeAt(offset) === EXCLAMATIONMARK) {\r\n        return 1;\r\n    }\r\n\r\n    return tokenType === Semicolon ? 1 : 0;\r\n}\r\n\r\n// 0, SEMICOLON, true\r\nfunction semicolonIncluded(tokenType) {\r\n    return tokenType === Semicolon ? 2 : 0;\r\n}\r\n\r\nmodule.exports = {\r\n    name: 'Raw',\r\n    structure: {\r\n        value: String\r\n    },\r\n    parse: function(startToken, mode, excludeWhiteSpace) {\r\n        var startOffset = this.scanner.getTokenStart(startToken);\r\n        var endOffset;\r\n\r\n        this.scanner.skip(\r\n            this.scanner.getRawLength(startToken, mode || balanceEnd)\r\n        );\r\n\r\n        if (excludeWhiteSpace && this.scanner.tokenStart > startOffset) {\r\n            endOffset = getOffsetExcludeWS.call(this);\r\n        } else {\r\n            endOffset = this.scanner.tokenStart;\r\n        }\r\n\r\n        return {\r\n            type: 'Raw',\r\n            loc: this.getLocation(startOffset, endOffset),\r\n            value: this.scanner.source.substring(startOffset, endOffset)\r\n        };\r\n    },\r\n    generate: function(node) {\r\n        this.chunk(node.value);\r\n    },\r\n\r\n    mode: {\r\n        default: balanceEnd,\r\n        leftCurlyBracket: leftCurlyBracket,\r\n        leftCurlyBracketOrSemicolon: leftCurlyBracketOrSemicolon,\r\n        exclamationMarkOrSemicolon: exclamationMarkOrSemicolon,\r\n        semicolonIncluded: semicolonIncluded\r\n    }\r\n};\r\n","var TYPE = require('../../tokenizer').TYPE;\r\nvar rawMode = require('./Raw').mode;\r\n\r\nvar ATKEYWORD = TYPE.AtKeyword;\r\nvar SEMICOLON = TYPE.Semicolon;\r\nvar LEFTCURLYBRACKET = TYPE.LeftCurlyBracket;\r\nvar RIGHTCURLYBRACKET = TYPE.RightCurlyBracket;\r\n\r\nfunction consumeRaw(startToken) {\r\n    return this.Raw(startToken, rawMode.leftCurlyBracketOrSemicolon, true);\r\n}\r\n\r\nfunction isDeclarationBlockAtrule() {\r\n    for (var offset = 1, type; type = this.scanner.lookupType(offset); offset++) {\r\n        if (type === RIGHTCURLYBRACKET) {\r\n            return true;\r\n        }\r\n\r\n        if (type === LEFTCURLYBRACKET ||\r\n            type === ATKEYWORD) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\nmodule.exports = {\r\n    name: 'Atrule',\r\n    structure: {\r\n        name: String,\r\n        prelude: ['AtrulePrelude', 'Raw', null],\r\n        block: ['Block', null]\r\n    },\r\n    parse: function() {\r\n        var start = this.scanner.tokenStart;\r\n        var name;\r\n        var nameLowerCase;\r\n        var prelude = null;\r\n        var block = null;\r\n\r\n        this.eat(ATKEYWORD);\r\n\r\n        name = this.scanner.substrToCursor(start + 1);\r\n        nameLowerCase = name.toLowerCase();\r\n        this.scanner.skipSC();\r\n\r\n        // parse prelude\r\n        if (this.scanner.eof === false &&\r\n            this.scanner.tokenType !== LEFTCURLYBRACKET &&\r\n            this.scanner.tokenType !== SEMICOLON) {\r\n            if (this.parseAtrulePrelude) {\r\n                prelude = this.parseWithFallback(this.AtrulePrelude.bind(this, name), consumeRaw);\r\n\r\n                // turn empty AtrulePrelude into null\r\n                if (prelude.type === 'AtrulePrelude' && prelude.children.head === null) {\r\n                    prelude = null;\r\n                }\r\n            } else {\r\n                prelude = consumeRaw.call(this, this.scanner.tokenIndex);\r\n            }\r\n\r\n            this.scanner.skipSC();\r\n        }\r\n\r\n        switch (this.scanner.tokenType) {\r\n            case SEMICOLON:\r\n                this.scanner.next();\r\n                break;\r\n\r\n            case LEFTCURLYBRACKET:\r\n                if (this.atrule.hasOwnProperty(nameLowerCase) &&\r\n                    typeof this.atrule[nameLowerCase].block === 'function') {\r\n                    block = this.atrule[nameLowerCase].block.call(this);\r\n                } else {\r\n                    // TODO: should consume block content as Raw?\r\n                    block = this.Block(isDeclarationBlockAtrule.call(this));\r\n                }\r\n\r\n                break;\r\n        }\r\n\r\n        return {\r\n            type: 'Atrule',\r\n            loc: this.getLocation(start, this.scanner.tokenStart),\r\n            name: name,\r\n            prelude: prelude,\r\n            block: block\r\n        };\r\n    },\r\n    generate: function(node) {\r\n        this.chunk('@');\r\n        this.chunk(node.name);\r\n\r\n        if (node.prelude !== null) {\r\n            this.chunk(' ');\r\n            this.node(node.prelude);\r\n        }\r\n\r\n        if (node.block) {\r\n            this.node(node.block);\r\n        } else {\r\n            this.chunk(';');\r\n        }\r\n    },\r\n    walkContext: 'atrule'\r\n};\r\n","var TYPE = require('../../tokenizer').TYPE;\r\n\r\nvar SEMICOLON = TYPE.Semicolon;\r\nvar LEFTCURLYBRACKET = TYPE.LeftCurlyBracket;\r\n\r\nmodule.exports = {\r\n    name: 'AtrulePrelude',\r\n    structure: {\r\n        children: [[]]\r\n    },\r\n    parse: function(name) {\r\n        var children = null;\r\n\r\n        if (name !== null) {\r\n            name = name.toLowerCase();\r\n        }\r\n\r\n        this.scanner.skipSC();\r\n\r\n        if (this.atrule.hasOwnProperty(name) &&\r\n            typeof this.atrule[name].prelude === 'function') {\r\n            // custom consumer\r\n            children = this.atrule[name].prelude.call(this);\r\n        } else {\r\n            // default consumer\r\n            children = this.readSequence(this.scope.AtrulePrelude);\r\n        }\r\n\r\n        this.scanner.skipSC();\r\n\r\n        if (this.scanner.eof !== true &&\r\n            this.scanner.tokenType !== LEFTCURLYBRACKET &&\r\n            this.scanner.tokenType !== SEMICOLON) {\r\n            this.error('Semicolon or block is expected');\r\n        }\r\n\r\n        if (children === null) {\r\n            children = this.createList();\r\n        }\r\n\r\n        return {\r\n            type: 'AtrulePrelude',\r\n            loc: this.getLocationFromList(children),\r\n            children: children\r\n        };\r\n    },\r\n    generate: function(node) {\r\n        this.children(node);\r\n    },\r\n    walkContext: 'atrulePrelude'\r\n};\r\n","var TYPE = require('../../tokenizer').TYPE;\r\n\r\nvar IDENT = TYPE.Ident;\r\nvar STRING = TYPE.String;\r\nvar COLON = TYPE.Colon;\r\nvar LEFTSQUAREBRACKET = TYPE.LeftSquareBracket;\r\nvar RIGHTSQUAREBRACKET = TYPE.RightSquareBracket;\r\nvar DOLLARSIGN = 0x0024;       // U+0024 DOLLAR SIGN ($)\r\nvar ASTERISK = 0x002A;         // U+002A ASTERISK (*)\r\nvar EQUALSSIGN = 0x003D;       // U+003D EQUALS SIGN (=)\r\nvar CIRCUMFLEXACCENT = 0x005E; // U+005E (^)\r\nvar VERTICALLINE = 0x007C;     // U+007C VERTICAL LINE (|)\r\nvar TILDE = 0x007E;            // U+007E TILDE (~)\r\n\r\nfunction getAttributeName() {\r\n    if (this.scanner.eof) {\r\n        this.error('Unexpected end of input');\r\n    }\r\n\r\n    var start = this.scanner.tokenStart;\r\n    var expectIdent = false;\r\n    var checkColon = true;\r\n\r\n    if (this.scanner.isDelim(ASTERISK)) {\r\n        expectIdent = true;\r\n        checkColon = false;\r\n        this.scanner.next();\r\n    } else if (!this.scanner.isDelim(VERTICALLINE)) {\r\n        this.eat(IDENT);\r\n    }\r\n\r\n    if (this.scanner.isDelim(VERTICALLINE)) {\r\n        if (this.scanner.source.charCodeAt(this.scanner.tokenStart + 1) !== EQUALSSIGN) {\r\n            this.scanner.next();\r\n            this.eat(IDENT);\r\n        } else if (expectIdent) {\r\n            this.error('Identifier is expected', this.scanner.tokenEnd);\r\n        }\r\n    } else if (expectIdent) {\r\n        this.error('Vertical line is expected');\r\n    }\r\n\r\n    if (checkColon && this.scanner.tokenType === COLON) {\r\n        this.scanner.next();\r\n        this.eat(IDENT);\r\n    }\r\n\r\n    return {\r\n        type: 'Identifier',\r\n        loc: this.getLocation(start, this.scanner.tokenStart),\r\n        name: this.scanner.substrToCursor(start)\r\n    };\r\n}\r\n\r\nfunction getOperator() {\r\n    var start = this.scanner.tokenStart;\r\n    var code = this.scanner.source.charCodeAt(start);\r\n\r\n    if (code !== EQUALSSIGN &&        // =\r\n        code !== TILDE &&             // ~=\r\n        code !== CIRCUMFLEXACCENT &&  // ^=\r\n        code !== DOLLARSIGN &&        // $=\r\n        code !== ASTERISK &&          // *=\r\n        code !== VERTICALLINE         // |=\r\n    ) {\r\n        this.error('Attribute selector (=, ~=, ^=, $=, *=, |=) is expected');\r\n    }\r\n\r\n    this.scanner.next();\r\n\r\n    if (code !== EQUALSSIGN) {\r\n        if (!this.scanner.isDelim(EQUALSSIGN)) {\r\n            this.error('Equal sign is expected');\r\n        }\r\n\r\n        this.scanner.next();\r\n    }\r\n\r\n    return this.scanner.substrToCursor(start);\r\n}\r\n\r\n// '[' <wq-name> ']'\r\n// '[' <wq-name> <attr-matcher> [ <string-token> | <ident-token> ] <attr-modifier>? ']'\r\nmodule.exports = {\r\n    name: 'AttributeSelector',\r\n    structure: {\r\n        name: 'Identifier',\r\n        matcher: [String, null],\r\n        value: ['String', 'Identifier', null],\r\n        flags: [String, null]\r\n    },\r\n    parse: function() {\r\n        var start = this.scanner.tokenStart;\r\n        var name;\r\n        var matcher = null;\r\n        var value = null;\r\n        var flags = null;\r\n\r\n        this.eat(LEFTSQUAREBRACKET);\r\n        this.scanner.skipSC();\r\n\r\n        name = getAttributeName.call(this);\r\n        this.scanner.skipSC();\r\n\r\n        if (this.scanner.tokenType !== RIGHTSQUAREBRACKET) {\r\n            // avoid case `[name i]`\r\n            if (this.scanner.tokenType !== IDENT) {\r\n                matcher = getOperator.call(this);\r\n\r\n                this.scanner.skipSC();\r\n\r\n                value = this.scanner.tokenType === STRING\r\n                    ? this.String()\r\n                    : this.Identifier();\r\n\r\n                this.scanner.skipSC();\r\n            }\r\n\r\n            // attribute flags\r\n            if (this.scanner.tokenType === IDENT) {\r\n                flags = this.scanner.getTokenValue();\r\n                this.scanner.next();\r\n\r\n                this.scanner.skipSC();\r\n            }\r\n        }\r\n\r\n        this.eat(RIGHTSQUAREBRACKET);\r\n\r\n        return {\r\n            type: 'AttributeSelector',\r\n            loc: this.getLocation(start, this.scanner.tokenStart),\r\n            name: name,\r\n            matcher: matcher,\r\n            value: value,\r\n            flags: flags\r\n        };\r\n    },\r\n    generate: function(node) {\r\n        var flagsPrefix = ' ';\r\n\r\n        this.chunk('[');\r\n        this.node(node.name);\r\n\r\n        if (node.matcher !== null) {\r\n            this.chunk(node.matcher);\r\n\r\n            if (node.value !== null) {\r\n                this.node(node.value);\r\n\r\n                // space between string and flags is not required\r\n                if (node.value.type === 'String') {\r\n                    flagsPrefix = '';\r\n                }\r\n            }\r\n        }\r\n\r\n        if (node.flags !== null) {\r\n            this.chunk(flagsPrefix);\r\n            this.chunk(node.flags);\r\n        }\r\n\r\n        this.chunk(']');\r\n    }\r\n};\r\n","var TYPE = require('../../tokenizer').TYPE;\r\nvar rawMode = require('./Raw').mode;\r\n\r\nvar WHITESPACE = TYPE.WhiteSpace;\r\nvar COMMENT = TYPE.Comment;\r\nvar SEMICOLON = TYPE.Semicolon;\r\nvar ATKEYWORD = TYPE.AtKeyword;\r\nvar LEFTCURLYBRACKET = TYPE.LeftCurlyBracket;\r\nvar RIGHTCURLYBRACKET = TYPE.RightCurlyBracket;\r\n\r\nfunction consumeRaw(startToken) {\r\n    return this.Raw(startToken, null, true);\r\n}\r\nfunction consumeRule() {\r\n    return this.parseWithFallback(this.Rule, consumeRaw);\r\n}\r\nfunction consumeRawDeclaration(startToken) {\r\n    return this.Raw(startToken, rawMode.semicolonIncluded, true);\r\n}\r\nfunction consumeDeclaration() {\r\n    if (this.scanner.tokenType === SEMICOLON) {\r\n        return consumeRawDeclaration.call(this, this.scanner.tokenIndex);\r\n    }\r\n\r\n    var node = this.parseWithFallback(this.Declaration, consumeRawDeclaration);\r\n\r\n    if (this.scanner.tokenType === SEMICOLON) {\r\n        this.scanner.next();\r\n    }\r\n\r\n    return node;\r\n}\r\n\r\nmodule.exports = {\r\n    name: 'Block',\r\n    structure: {\r\n        children: [[\r\n            'Atrule',\r\n            'Rule',\r\n            'Declaration'\r\n        ]]\r\n    },\r\n    parse: function(isDeclaration) {\r\n        var consumer = isDeclaration ? consumeDeclaration : consumeRule;\r\n\r\n        var start = this.scanner.tokenStart;\r\n        var children = this.createList();\r\n\r\n        this.eat(LEFTCURLYBRACKET);\r\n\r\n        scan:\r\n        while (!this.scanner.eof) {\r\n            switch (this.scanner.tokenType) {\r\n                case RIGHTCURLYBRACKET:\r\n                    break scan;\r\n\r\n                case WHITESPACE:\r\n                case COMMENT:\r\n                    this.scanner.next();\r\n                    break;\r\n\r\n                case ATKEYWORD:\r\n                    children.push(this.parseWithFallback(this.Atrule, consumeRaw));\r\n                    break;\r\n\r\n                default:\r\n                    children.push(consumer.call(this));\r\n            }\r\n        }\r\n\r\n        if (!this.scanner.eof) {\r\n            this.eat(RIGHTCURLYBRACKET);\r\n        }\r\n\r\n        return {\r\n            type: 'Block',\r\n            loc: this.getLocation(start, this.scanner.tokenStart),\r\n            children: children\r\n        };\r\n    },\r\n    generate: function(node) {\r\n        this.chunk('{');\r\n        this.children(node, function(prev) {\r\n            if (prev.type === 'Declaration') {\r\n                this.chunk(';');\r\n            }\r\n        });\r\n        this.chunk('}');\r\n    },\r\n    walkContext: 'block'\r\n};\r\n","var TYPE = require('../../tokenizer').TYPE;\r\n\r\nvar LEFTSQUAREBRACKET = TYPE.LeftSquareBracket;\r\nvar RIGHTSQUAREBRACKET = TYPE.RightSquareBracket;\r\n\r\nmodule.exports = {\r\n    name: 'Brackets',\r\n    structure: {\r\n        children: [[]]\r\n    },\r\n    parse: function(readSequence, recognizer) {\r\n        var start = this.scanner.tokenStart;\r\n        var children = null;\r\n\r\n        this.eat(LEFTSQUAREBRACKET);\r\n\r\n        children = readSequence.call(this, recognizer);\r\n\r\n        if (!this.scanner.eof) {\r\n            this.eat(RIGHTSQUAREBRACKET);\r\n        }\r\n\r\n        return {\r\n            type: 'Brackets',\r\n            loc: this.getLocation(start, this.scanner.tokenStart),\r\n            children: children\r\n        };\r\n    },\r\n    generate: function(node) {\r\n        this.chunk('[');\r\n        this.children(node);\r\n        this.chunk(']');\r\n    }\r\n};\r\n","var CDC = require('../../tokenizer').TYPE.CDC;\r\n\r\nmodule.exports = {\r\n    name: 'CDC',\r\n    structure: [],\r\n    parse: function() {\r\n        var start = this.scanner.tokenStart;\r\n\r\n        this.eat(CDC); // -->\r\n\r\n        return {\r\n            type: 'CDC',\r\n            loc: this.getLocation(start, this.scanner.tokenStart)\r\n        };\r\n    },\r\n    generate: function() {\r\n        this.chunk('-->');\r\n    }\r\n};\r\n","var CDO = require('../../tokenizer').TYPE.CDO;\r\n\r\nmodule.exports = {\r\n    name: 'CDO',\r\n    structure: [],\r\n    parse: function() {\r\n        var start = this.scanner.tokenStart;\r\n\r\n        this.eat(CDO); // <!--\r\n\r\n        return {\r\n            type: 'CDO',\r\n            loc: this.getLocation(start, this.scanner.tokenStart)\r\n        };\r\n    },\r\n    generate: function() {\r\n        this.chunk('<!--');\r\n    }\r\n};\r\n","var TYPE = require('../../tokenizer').TYPE;\r\n\r\nvar IDENT = TYPE.Ident;\r\nvar FULLSTOP = 0x002E; // U+002E FULL STOP (.)\r\n\r\n// '.' ident\r\nmodule.exports = {\r\n    name: 'ClassSelector',\r\n    structure: {\r\n        name: String\r\n    },\r\n    parse: function() {\r\n        if (!this.scanner.isDelim(FULLSTOP)) {\r\n            this.error('Full stop is expected');\r\n        }\r\n\r\n        this.scanner.next();\r\n\r\n        return {\r\n            type: 'ClassSelector',\r\n            loc: this.getLocation(this.scanner.tokenStart - 1, this.scanner.tokenEnd),\r\n            name: this.consume(IDENT)\r\n        };\r\n    },\r\n    generate: function(node) {\r\n        this.chunk('.');\r\n        this.chunk(node.name);\r\n    }\r\n};\r\n","var TYPE = require('../../tokenizer').TYPE;\r\n\r\nvar IDENT = TYPE.Ident;\r\nvar PLUSSIGN = 0x002B;        // U+002B PLUS SIGN (+)\r\nvar SOLIDUS = 0x002F;         // U+002F SOLIDUS (/)\r\nvar GREATERTHANSIGN = 0x003E; // U+003E GREATER-THAN SIGN (>)\r\nvar TILDE = 0x007E;           // U+007E TILDE (~)\r\n\r\n// + | > | ~ | /deep/\r\nmodule.exports = {\r\n    name: 'Combinator',\r\n    structure: {\r\n        name: String\r\n    },\r\n    parse: function() {\r\n        var start = this.scanner.tokenStart;\r\n        var code = this.scanner.source.charCodeAt(this.scanner.tokenStart);\r\n\r\n        switch (code) {\r\n            case GREATERTHANSIGN:\r\n            case PLUSSIGN:\r\n            case TILDE:\r\n                this.scanner.next();\r\n                break;\r\n\r\n            case SOLIDUS:\r\n                this.scanner.next();\r\n\r\n                if (this.scanner.tokenType !== IDENT || this.scanner.lookupValue(0, 'deep') === false) {\r\n                    this.error('Identifier `deep` is expected');\r\n                }\r\n\r\n                this.scanner.next();\r\n\r\n                if (!this.scanner.isDelim(SOLIDUS)) {\r\n                    this.error('Solidus is expected');\r\n                }\r\n\r\n                this.scanner.next();\r\n                break;\r\n\r\n            default:\r\n                this.error('Combinator is expected');\r\n        }\r\n\r\n        return {\r\n            type: 'Combinator',\r\n            loc: this.getLocation(start, this.scanner.tokenStart),\r\n            name: this.scanner.substrToCursor(start)\r\n        };\r\n    },\r\n    generate: function(node) {\r\n        this.chunk(node.name);\r\n    }\r\n};\r\n","var TYPE = require('../../tokenizer').TYPE;\r\n\r\nvar COMMENT = TYPE.Comment;\r\nvar ASTERISK = 0x002A;        // U+002A ASTERISK (*)\r\nvar SOLIDUS = 0x002F;         // U+002F SOLIDUS (/)\r\n\r\n// '/*' .* '*/'\r\nmodule.exports = {\r\n    name: 'Comment',\r\n    structure: {\r\n        value: String\r\n    },\r\n    parse: function() {\r\n        var start = this.scanner.tokenStart;\r\n        var end = this.scanner.tokenEnd;\r\n\r\n        this.eat(COMMENT);\r\n\r\n        if ((end - start + 2) >= 2 &&\r\n            this.scanner.source.charCodeAt(end - 2) === ASTERISK &&\r\n            this.scanner.source.charCodeAt(end - 1) === SOLIDUS) {\r\n            end -= 2;\r\n        }\r\n\r\n        return {\r\n            type: 'Comment',\r\n            loc: this.getLocation(start, this.scanner.tokenStart),\r\n            value: this.scanner.source.substring(start + 2, end)\r\n        };\r\n    },\r\n    generate: function(node) {\r\n        this.chunk('/*');\r\n        this.chunk(node.value);\r\n        this.chunk('*/');\r\n    }\r\n};\r\n","var isCustomProperty = require('../../utils/names').isCustomProperty;\r\nvar TYPE = require('../../tokenizer').TYPE;\r\nvar rawMode = require('./Raw').mode;\r\n\r\nvar IDENT = TYPE.Ident;\r\nvar HASH = TYPE.Hash;\r\nvar COLON = TYPE.Colon;\r\nvar SEMICOLON = TYPE.Semicolon;\r\nvar DELIM = TYPE.Delim;\r\nvar EXCLAMATIONMARK = 0x0021; // U+0021 EXCLAMATION MARK (!)\r\nvar NUMBERSIGN = 0x0023;      // U+0023 NUMBER SIGN (#)\r\nvar DOLLARSIGN = 0x0024;      // U+0024 DOLLAR SIGN ($)\r\nvar AMPERSAND = 0x0026;       // U+0026 ANPERSAND (&)\r\nvar ASTERISK = 0x002A;        // U+002A ASTERISK (*)\r\nvar PLUSSIGN = 0x002B;        // U+002B PLUS SIGN (+)\r\nvar SOLIDUS = 0x002F;         // U+002F SOLIDUS (/)\r\n\r\nfunction consumeValueRaw(startToken) {\r\n    return this.Raw(startToken, rawMode.exclamationMarkOrSemicolon, true);\r\n}\r\n\r\nfunction consumeCustomPropertyRaw(startToken) {\r\n    return this.Raw(startToken, rawMode.exclamationMarkOrSemicolon, false);\r\n}\r\n\r\nfunction consumeValue() {\r\n    var startValueToken = this.scanner.tokenIndex;\r\n    var value = this.Value();\r\n\r\n    if (value.type !== 'Raw' &&\r\n        this.scanner.eof === false &&\r\n        this.scanner.tokenType !== SEMICOLON &&\r\n        this.scanner.isDelim(EXCLAMATIONMARK) === false &&\r\n        this.scanner.isBalanceEdge(startValueToken) === false) {\r\n        this.error();\r\n    }\r\n\r\n    return value;\r\n}\r\n\r\nmodule.exports = {\r\n    name: 'Declaration',\r\n    structure: {\r\n        important: [Boolean, String],\r\n        property: String,\r\n        value: ['Value', 'Raw']\r\n    },\r\n    parse: function() {\r\n        var start = this.scanner.tokenStart;\r\n        var startToken = this.scanner.tokenIndex;\r\n        var property = readProperty.call(this);\r\n        var customProperty = isCustomProperty(property);\r\n        var parseValue = customProperty ? this.parseCustomProperty : this.parseValue;\r\n        var consumeRaw = customProperty ? consumeCustomPropertyRaw : consumeValueRaw;\r\n        var important = false;\r\n        var value;\r\n\r\n        this.scanner.skipSC();\r\n        this.eat(COLON);\r\n\r\n        if (!customProperty) {\r\n            this.scanner.skipSC();\r\n        }\r\n\r\n        if (parseValue) {\r\n            value = this.parseWithFallback(consumeValue, consumeRaw);\r\n        } else {\r\n            value = consumeRaw.call(this, this.scanner.tokenIndex);\r\n        }\r\n\r\n        if (this.scanner.isDelim(EXCLAMATIONMARK)) {\r\n            important = getImportant.call(this);\r\n            this.scanner.skipSC();\r\n        }\r\n\r\n        // Do not include semicolon to range per spec\r\n        // https://drafts.csswg.org/css-syntax/#declaration-diagram\r\n\r\n        if (this.scanner.eof === false &&\r\n            this.scanner.tokenType !== SEMICOLON &&\r\n            this.scanner.isBalanceEdge(startToken) === false) {\r\n            this.error();\r\n        }\r\n\r\n        return {\r\n            type: 'Declaration',\r\n            loc: this.getLocation(start, this.scanner.tokenStart),\r\n            important: important,\r\n            property: property,\r\n            value: value\r\n        };\r\n    },\r\n    generate: function(node) {\r\n        this.chunk(node.property);\r\n        this.chunk(':');\r\n        this.node(node.value);\r\n\r\n        if (node.important) {\r\n            this.chunk(node.important === true ? '!important' : '!' + node.important);\r\n        }\r\n    },\r\n    walkContext: 'declaration'\r\n};\r\n\r\nfunction readProperty() {\r\n    var start = this.scanner.tokenStart;\r\n    var prefix = 0;\r\n\r\n    // hacks\r\n    if (this.scanner.tokenType === DELIM) {\r\n        switch (this.scanner.source.charCodeAt(this.scanner.tokenStart)) {\r\n            case ASTERISK:\r\n            case DOLLARSIGN:\r\n            case PLUSSIGN:\r\n            case NUMBERSIGN:\r\n            case AMPERSAND:\r\n                this.scanner.next();\r\n                break;\r\n\r\n            // TODO: not sure we should support this hack\r\n            case SOLIDUS:\r\n                this.scanner.next();\r\n                if (this.scanner.isDelim(SOLIDUS)) {\r\n                    this.scanner.next();\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    if (prefix) {\r\n        this.scanner.skip(prefix);\r\n    }\r\n\r\n    if (this.scanner.tokenType === HASH) {\r\n        this.eat(HASH);\r\n    } else {\r\n        this.eat(IDENT);\r\n    }\r\n\r\n    return this.scanner.substrToCursor(start);\r\n}\r\n\r\n// ! ws* important\r\nfunction getImportant() {\r\n    this.eat(DELIM);\r\n    this.scanner.skipSC();\r\n\r\n    var important = this.consume(IDENT);\r\n\r\n    // store original value in case it differ from `important`\r\n    // for better original source restoring and hacks like `!ie` support\r\n    return important === 'important' ? true : important;\r\n}\r\n","var TYPE = require('../../tokenizer').TYPE;\r\nvar rawMode = require('./Raw').mode;\r\n\r\nvar WHITESPACE = TYPE.WhiteSpace;\r\nvar COMMENT = TYPE.Comment;\r\nvar SEMICOLON = TYPE.Semicolon;\r\n\r\nfunction consumeRaw(startToken) {\r\n    return this.Raw(startToken, rawMode.semicolonIncluded, true);\r\n}\r\n\r\nmodule.exports = {\r\n    name: 'DeclarationList',\r\n    structure: {\r\n        children: [[\r\n            'Declaration'\r\n        ]]\r\n    },\r\n    parse: function() {\r\n        var children = this.createList();\r\n\r\n        scan:\r\n        while (!this.scanner.eof) {\r\n            switch (this.scanner.tokenType) {\r\n                case WHITESPACE:\r\n                case COMMENT:\r\n                case SEMICOLON:\r\n                    this.scanner.next();\r\n                    break;\r\n\r\n                default:\r\n                    children.push(this.parseWithFallback(this.Declaration, consumeRaw));\r\n            }\r\n        }\r\n\r\n        return {\r\n            type: 'DeclarationList',\r\n            loc: this.getLocationFromList(children),\r\n            children: children\r\n        };\r\n    },\r\n    generate: function(node) {\r\n        this.children(node, function(prev) {\r\n            if (prev.type === 'Declaration') {\r\n                this.chunk(';');\r\n            }\r\n        });\r\n    }\r\n};\r\n","var consumeNumber = require('../../tokenizer/utils').consumeNumber;\r\nvar TYPE = require('../../tokenizer').TYPE;\r\n\r\nvar DIMENSION = TYPE.Dimension;\r\n\r\nmodule.exports = {\r\n    name: 'Dimension',\r\n    structure: {\r\n        value: String,\r\n        unit: String\r\n    },\r\n    parse: function() {\r\n        var start = this.scanner.tokenStart;\r\n        var numberEnd = consumeNumber(this.scanner.source, start);\r\n\r\n        this.eat(DIMENSION);\r\n\r\n        return {\r\n            type: 'Dimension',\r\n            loc: this.getLocation(start, this.scanner.tokenStart),\r\n            value: this.scanner.source.substring(start, numberEnd),\r\n            unit: this.scanner.source.substring(numberEnd, this.scanner.tokenStart)\r\n        };\r\n    },\r\n    generate: function(node) {\r\n        this.chunk(node.value);\r\n        this.chunk(node.unit);\r\n    }\r\n};\r\n","var TYPE = require('../../tokenizer').TYPE;\r\n\r\nvar RIGHTPARENTHESIS = TYPE.RightParenthesis;\r\n\r\n// <function-token> <sequence> )\r\nmodule.exports = {\r\n    name: 'Function',\r\n    structure: {\r\n        name: String,\r\n        children: [[]]\r\n    },\r\n    parse: function(readSequence, recognizer) {\r\n        var start = this.scanner.tokenStart;\r\n        var name = this.consumeFunctionName();\r\n        var nameLowerCase = name.toLowerCase();\r\n        var children;\r\n\r\n        children = recognizer.hasOwnProperty(nameLowerCase)\r\n            ? recognizer[nameLowerCase].call(this, recognizer)\r\n            : readSequence.call(this, recognizer);\r\n\r\n        if (!this.scanner.eof) {\r\n            this.eat(RIGHTPARENTHESIS);\r\n        }\r\n\r\n        return {\r\n            type: 'Function',\r\n            loc: this.getLocation(start, this.scanner.tokenStart),\r\n            name: name,\r\n            children: children\r\n        };\r\n    },\r\n    generate: function(node) {\r\n        this.chunk(node.name);\r\n        this.chunk('(');\r\n        this.children(node);\r\n        this.chunk(')');\r\n    },\r\n    walkContext: 'function'\r\n};\r\n","var TYPE = require('../../tokenizer').TYPE;\r\n\r\nvar HASH = TYPE.Hash;\r\n\r\n// '#' ident\r\nmodule.exports = {\r\n    name: 'HexColor',\r\n    structure: {\r\n        value: String\r\n    },\r\n    parse: function() {\r\n        var start = this.scanner.tokenStart;\r\n\r\n        this.eat(HASH);\r\n\r\n        return {\r\n            type: 'HexColor',\r\n            loc: this.getLocation(start, this.scanner.tokenStart),\r\n            value: this.scanner.substrToCursor(start + 1)\r\n        };\r\n    },\r\n    generate: function(node) {\r\n        this.chunk('#');\r\n        this.chunk(node.value);\r\n    }\r\n};\r\n","var TYPE = require('../../tokenizer').TYPE;\r\n\r\nvar IDENT = TYPE.Ident;\r\n\r\nmodule.exports = {\r\n    name: 'Identifier',\r\n    structure: {\r\n        name: String\r\n    },\r\n    parse: function() {\r\n        return {\r\n            type: 'Identifier',\r\n            loc: this.getLocation(this.scanner.tokenStart, this.scanner.tokenEnd),\r\n            name: this.consume(IDENT)\r\n        };\r\n    },\r\n    generate: function(node) {\r\n        this.chunk(node.name);\r\n    }\r\n};\r\n","var TYPE = require('../../tokenizer').TYPE;\r\n\r\nvar HASH = TYPE.Hash;\r\n\r\n// <hash-token>\r\nmodule.exports = {\r\n    name: 'IdSelector',\r\n    structure: {\r\n        name: String\r\n    },\r\n    parse: function() {\r\n        var start = this.scanner.tokenStart;\r\n\r\n        // TODO: check value is an ident\r\n        this.eat(HASH);\r\n\r\n        return {\r\n            type: 'IdSelector',\r\n            loc: this.getLocation(start, this.scanner.tokenStart),\r\n            name: this.scanner.substrToCursor(start + 1)\r\n        };\r\n    },\r\n    generate: function(node) {\r\n        this.chunk('#');\r\n        this.chunk(node.name);\r\n    }\r\n};\r\n","var TYPE = require('../../tokenizer').TYPE;\r\n\r\nvar IDENT = TYPE.Ident;\r\nvar NUMBER = TYPE.Number;\r\nvar DIMENSION = TYPE.Dimension;\r\nvar LEFTPARENTHESIS = TYPE.LeftParenthesis;\r\nvar RIGHTPARENTHESIS = TYPE.RightParenthesis;\r\nvar COLON = TYPE.Colon;\r\nvar DELIM = TYPE.Delim;\r\n\r\nmodule.exports = {\r\n    name: 'MediaFeature',\r\n    structure: {\r\n        name: String,\r\n        value: ['Identifier', 'Number', 'Dimension', 'Ratio', null]\r\n    },\r\n    parse: function() {\r\n        var start = this.scanner.tokenStart;\r\n        var name;\r\n        var value = null;\r\n\r\n        this.eat(LEFTPARENTHESIS);\r\n        this.scanner.skipSC();\r\n\r\n        name = this.consume(IDENT);\r\n        this.scanner.skipSC();\r\n\r\n        if (this.scanner.tokenType !== RIGHTPARENTHESIS) {\r\n            this.eat(COLON);\r\n            this.scanner.skipSC();\r\n\r\n            switch (this.scanner.tokenType) {\r\n                case NUMBER:\r\n                    if (this.lookupNonWSType(1) === DELIM) {\r\n                        value = this.Ratio();\r\n                    } else {\r\n                        value = this.Number();\r\n                    }\r\n\r\n                    break;\r\n\r\n                case DIMENSION:\r\n                    value = this.Dimension();\r\n                    break;\r\n\r\n                case IDENT:\r\n                    value = this.Identifier();\r\n\r\n                    break;\r\n\r\n                default:\r\n                    this.error('Number, dimension, ratio or identifier is expected');\r\n            }\r\n\r\n            this.scanner.skipSC();\r\n        }\r\n\r\n        this.eat(RIGHTPARENTHESIS);\r\n\r\n        return {\r\n            type: 'MediaFeature',\r\n            loc: this.getLocation(start, this.scanner.tokenStart),\r\n            name: name,\r\n            value: value\r\n        };\r\n    },\r\n    generate: function(node) {\r\n        this.chunk('(');\r\n        this.chunk(node.name);\r\n        if (node.value !== null) {\r\n            this.chunk(':');\r\n            this.node(node.value);\r\n        }\r\n        this.chunk(')');\r\n    }\r\n};\r\n","var TYPE = require('../../tokenizer').TYPE;\r\n\r\nvar WHITESPACE = TYPE.WhiteSpace;\r\nvar COMMENT = TYPE.Comment;\r\nvar IDENT = TYPE.Ident;\r\nvar LEFTPARENTHESIS = TYPE.LeftParenthesis;\r\n\r\nmodule.exports = {\r\n    name: 'MediaQuery',\r\n    structure: {\r\n        children: [[\r\n            'Identifier',\r\n            'MediaFeature',\r\n            'WhiteSpace'\r\n        ]]\r\n    },\r\n    parse: function() {\r\n        this.scanner.skipSC();\r\n\r\n        var children = this.createList();\r\n        var child = null;\r\n        var space = null;\r\n\r\n        scan:\r\n        while (!this.scanner.eof) {\r\n            switch (this.scanner.tokenType) {\r\n                case COMMENT:\r\n                    this.scanner.next();\r\n                    continue;\r\n\r\n                case WHITESPACE:\r\n                    space = this.WhiteSpace();\r\n                    continue;\r\n\r\n                case IDENT:\r\n                    child = this.Identifier();\r\n                    break;\r\n\r\n                case LEFTPARENTHESIS:\r\n                    child = this.MediaFeature();\r\n                    break;\r\n\r\n                default:\r\n                    break scan;\r\n            }\r\n\r\n            if (space !== null) {\r\n                children.push(space);\r\n                space = null;\r\n            }\r\n\r\n            children.push(child);\r\n        }\r\n\r\n        if (child === null) {\r\n            this.error('Identifier or parenthesis is expected');\r\n        }\r\n\r\n        return {\r\n            type: 'MediaQuery',\r\n            loc: this.getLocationFromList(children),\r\n            children: children\r\n        };\r\n    },\r\n    generate: function(node) {\r\n        this.children(node);\r\n    }\r\n};\r\n","var COMMA = require('../../tokenizer').TYPE.Comma;\r\n\r\nmodule.exports = {\r\n    name: 'MediaQueryList',\r\n    structure: {\r\n        children: [[\r\n            'MediaQuery'\r\n        ]]\r\n    },\r\n    parse: function(relative) {\r\n        var children = this.createList();\r\n\r\n        this.scanner.skipSC();\r\n\r\n        while (!this.scanner.eof) {\r\n            children.push(this.MediaQuery(relative));\r\n\r\n            if (this.scanner.tokenType !== COMMA) {\r\n                break;\r\n            }\r\n\r\n            this.scanner.next();\r\n        }\r\n\r\n        return {\r\n            type: 'MediaQueryList',\r\n            loc: this.getLocationFromList(children),\r\n            children: children\r\n        };\r\n    },\r\n    generate: function(node) {\r\n        this.children(node, function() {\r\n            this.chunk(',');\r\n        });\r\n    }\r\n};\r\n","var NUMBER = require('../../tokenizer').TYPE.Number;\r\n\r\nmodule.exports = {\r\n    name: 'Number',\r\n    structure: {\r\n        value: String\r\n    },\r\n    parse: function() {\r\n        return {\r\n            type: 'Number',\r\n            loc: this.getLocation(this.scanner.tokenStart, this.scanner.tokenEnd),\r\n            value: this.consume(NUMBER)\r\n        };\r\n    },\r\n    generate: function(node) {\r\n        this.chunk(node.value);\r\n    }\r\n};\r\n","// '/' | '*' | ',' | ':' | '+' | '-'\r\nmodule.exports = {\r\n    name: 'Operator',\r\n    structure: {\r\n        value: String\r\n    },\r\n    parse: function() {\r\n        var start = this.scanner.tokenStart;\r\n\r\n        this.scanner.next();\r\n\r\n        return {\r\n            type: 'Operator',\r\n            loc: this.getLocation(start, this.scanner.tokenStart),\r\n            value: this.scanner.substrToCursor(start)\r\n        };\r\n    },\r\n    generate: function(node) {\r\n        this.chunk(node.value);\r\n    }\r\n};\r\n","var TYPE = require('../../tokenizer').TYPE;\r\n\r\nvar LEFTPARENTHESIS = TYPE.LeftParenthesis;\r\nvar RIGHTPARENTHESIS = TYPE.RightParenthesis;\r\n\r\nmodule.exports = {\r\n    name: 'Parentheses',\r\n    structure: {\r\n        children: [[]]\r\n    },\r\n    parse: function(readSequence, recognizer) {\r\n        var start = this.scanner.tokenStart;\r\n        var children = null;\r\n\r\n        this.eat(LEFTPARENTHESIS);\r\n\r\n        children = readSequence.call(this, recognizer);\r\n\r\n        if (!this.scanner.eof) {\r\n            this.eat(RIGHTPARENTHESIS);\r\n        }\r\n\r\n        return {\r\n            type: 'Parentheses',\r\n            loc: this.getLocation(start, this.scanner.tokenStart),\r\n            children: children\r\n        };\r\n    },\r\n    generate: function(node) {\r\n        this.chunk('(');\r\n        this.children(node);\r\n        this.chunk(')');\r\n    }\r\n};\r\n","var consumeNumber = require('../../tokenizer/utils').consumeNumber;\r\nvar TYPE = require('../../tokenizer').TYPE;\r\n\r\nvar PERCENTAGE = TYPE.Percentage;\r\n\r\nmodule.exports = {\r\n    name: 'Percentage',\r\n    structure: {\r\n        value: String\r\n    },\r\n    parse: function() {\r\n        var start = this.scanner.tokenStart;\r\n        var numberEnd = consumeNumber(this.scanner.source, start);\r\n\r\n        this.eat(PERCENTAGE);\r\n\r\n        return {\r\n            type: 'Percentage',\r\n            loc: this.getLocation(start, this.scanner.tokenStart),\r\n            value: this.scanner.source.substring(start, numberEnd)\r\n        };\r\n    },\r\n    generate: function(node) {\r\n        this.chunk(node.value);\r\n        this.chunk('%');\r\n    }\r\n};\r\n","var TYPE = require('../../tokenizer').TYPE;\r\n\r\nvar IDENT = TYPE.Ident;\r\nvar FUNCTION = TYPE.Function;\r\nvar COLON = TYPE.Colon;\r\nvar RIGHTPARENTHESIS = TYPE.RightParenthesis;\r\n\r\n// : [ <ident> | <function-token> <any-value>? ) ]\r\nmodule.exports = {\r\n    name: 'PseudoClassSelector',\r\n    structure: {\r\n        name: String,\r\n        children: [['Raw'], null]\r\n    },\r\n    parse: function() {\r\n        var start = this.scanner.tokenStart;\r\n        var children = null;\r\n        var name;\r\n        var nameLowerCase;\r\n\r\n        this.eat(COLON);\r\n\r\n        if (this.scanner.tokenType === FUNCTION) {\r\n            name = this.consumeFunctionName();\r\n            nameLowerCase = name.toLowerCase();\r\n\r\n            if (this.pseudo.hasOwnProperty(nameLowerCase)) {\r\n                this.scanner.skipSC();\r\n                children = this.pseudo[nameLowerCase].call(this);\r\n                this.scanner.skipSC();\r\n            } else {\r\n                children = this.createList();\r\n                children.push(\r\n                    this.Raw(this.scanner.tokenIndex, null, false)\r\n                );\r\n            }\r\n\r\n            this.eat(RIGHTPARENTHESIS);\r\n        } else {\r\n            name = this.consume(IDENT);\r\n        }\r\n\r\n        return {\r\n            type: 'PseudoClassSelector',\r\n            loc: this.getLocation(start, this.scanner.tokenStart),\r\n            name: name,\r\n            children: children\r\n        };\r\n    },\r\n    generate: function(node) {\r\n        this.chunk(':');\r\n        this.chunk(node.name);\r\n\r\n        if (node.children !== null) {\r\n            this.chunk('(');\r\n            this.children(node);\r\n            this.chunk(')');\r\n        }\r\n    },\r\n    walkContext: 'function'\r\n};\r\n","var TYPE = require('../../tokenizer').TYPE;\r\n\r\nvar IDENT = TYPE.Ident;\r\nvar FUNCTION = TYPE.Function;\r\nvar COLON = TYPE.Colon;\r\nvar RIGHTPARENTHESIS = TYPE.RightParenthesis;\r\n\r\n// :: [ <ident> | <function-token> <any-value>? ) ]\r\nmodule.exports = {\r\n    name: 'PseudoElementSelector',\r\n    structure: {\r\n        name: String,\r\n        children: [['Raw'], null]\r\n    },\r\n    parse: function() {\r\n        var start = this.scanner.tokenStart;\r\n        var children = null;\r\n        var name;\r\n        var nameLowerCase;\r\n\r\n        this.eat(COLON);\r\n        this.eat(COLON);\r\n\r\n        if (this.scanner.tokenType === FUNCTION) {\r\n            name = this.consumeFunctionName();\r\n            nameLowerCase = name.toLowerCase();\r\n\r\n            if (this.pseudo.hasOwnProperty(nameLowerCase)) {\r\n                this.scanner.skipSC();\r\n                children = this.pseudo[nameLowerCase].call(this);\r\n                this.scanner.skipSC();\r\n            } else {\r\n                children = this.createList();\r\n                children.push(\r\n                    this.Raw(this.scanner.tokenIndex, null, false)\r\n                );\r\n            }\r\n\r\n            this.eat(RIGHTPARENTHESIS);\r\n        } else {\r\n            name = this.consume(IDENT);\r\n        }\r\n\r\n        return {\r\n            type: 'PseudoElementSelector',\r\n            loc: this.getLocation(start, this.scanner.tokenStart),\r\n            name: name,\r\n            children: children\r\n        };\r\n    },\r\n    generate: function(node) {\r\n        this.chunk('::');\r\n        this.chunk(node.name);\r\n\r\n        if (node.children !== null) {\r\n            this.chunk('(');\r\n            this.children(node);\r\n            this.chunk(')');\r\n        }\r\n    },\r\n    walkContext: 'function'\r\n};\r\n","var isDigit = require('../../tokenizer').isDigit;\r\nvar TYPE = require('../../tokenizer').TYPE;\r\n\r\nvar NUMBER = TYPE.Number;\r\nvar DELIM = TYPE.Delim;\r\nvar SOLIDUS = 0x002F;  // U+002F SOLIDUS (/)\r\nvar FULLSTOP = 0x002E; // U+002E FULL STOP (.)\r\n\r\n// Terms of <ratio> should be a positive numbers (not zero or negative)\r\n// (see https://drafts.csswg.org/mediaqueries-3/#values)\r\n// However, -o-min-device-pixel-ratio takes fractional values as a ratio's term\r\n// and this is using by various sites. Therefore we relax checking on parse\r\n// to test a term is unsigned number without an exponent part.\r\n// Additional checking may be applied on lexer validation.\r\nfunction consumeNumber() {\r\n    this.scanner.skipWS();\r\n\r\n    var value = this.consume(NUMBER);\r\n\r\n    for (var i = 0; i < value.length; i++) {\r\n        var code = value.charCodeAt(i);\r\n        if (!isDigit(code) && code !== FULLSTOP) {\r\n            this.error('Unsigned number is expected', this.scanner.tokenStart - value.length + i);\r\n        }\r\n    }\r\n\r\n    if (Number(value) === 0) {\r\n        this.error('Zero number is not allowed', this.scanner.tokenStart - value.length);\r\n    }\r\n\r\n    return value;\r\n}\r\n\r\n// <positive-integer> S* '/' S* <positive-integer>\r\nmodule.exports = {\r\n    name: 'Ratio',\r\n    structure: {\r\n        left: String,\r\n        right: String\r\n    },\r\n    parse: function() {\r\n        var start = this.scanner.tokenStart;\r\n        var left = consumeNumber.call(this);\r\n        var right;\r\n\r\n        this.scanner.skipWS();\r\n\r\n        if (!this.scanner.isDelim(SOLIDUS)) {\r\n            this.error('Solidus is expected');\r\n        }\r\n        this.eat(DELIM);\r\n        right = consumeNumber.call(this);\r\n\r\n        return {\r\n            type: 'Ratio',\r\n            loc: this.getLocation(start, this.scanner.tokenStart),\r\n            left: left,\r\n            right: right\r\n        };\r\n    },\r\n    generate: function(node) {\r\n        this.chunk(node.left);\r\n        this.chunk('/');\r\n        this.chunk(node.right);\r\n    }\r\n};\r\n","var TYPE = require('../../tokenizer').TYPE;\r\nvar rawMode = require('./Raw').mode;\r\n\r\nvar LEFTCURLYBRACKET = TYPE.LeftCurlyBracket;\r\n\r\nfunction consumeRaw(startToken) {\r\n    return this.Raw(startToken, rawMode.leftCurlyBracket, true);\r\n}\r\n\r\nfunction consumePrelude() {\r\n    var prelude = this.SelectorList();\r\n\r\n    if (prelude.type !== 'Raw' &&\r\n        this.scanner.eof === false &&\r\n        this.scanner.tokenType !== LEFTCURLYBRACKET) {\r\n        this.error();\r\n    }\r\n\r\n    return prelude;\r\n}\r\n\r\nmodule.exports = {\r\n    name: 'Rule',\r\n    structure: {\r\n        prelude: ['SelectorList', 'Raw'],\r\n        block: ['Block']\r\n    },\r\n    parse: function() {\r\n        var startToken = this.scanner.tokenIndex;\r\n        var startOffset = this.scanner.tokenStart;\r\n        var prelude;\r\n        var block;\r\n\r\n        if (this.parseRulePrelude) {\r\n            prelude = this.parseWithFallback(consumePrelude, consumeRaw);\r\n        } else {\r\n            prelude = consumeRaw.call(this, startToken);\r\n        }\r\n\r\n        block = this.Block(true);\r\n\r\n        return {\r\n            type: 'Rule',\r\n            loc: this.getLocation(startOffset, this.scanner.tokenStart),\r\n            prelude: prelude,\r\n            block: block\r\n        };\r\n    },\r\n    generate: function(node) {\r\n        this.node(node.prelude);\r\n        this.node(node.block);\r\n    },\r\n    walkContext: 'rule'\r\n};\r\n","var TYPE = require('../../tokenizer').TYPE;\r\n\r\nvar COMMA = TYPE.Comma;\r\n\r\nmodule.exports = {\r\n    name: 'SelectorList',\r\n    structure: {\r\n        children: [[\r\n            'Selector',\r\n            'Raw'\r\n        ]]\r\n    },\r\n    parse: function() {\r\n        var children = this.createList();\r\n\r\n        while (!this.scanner.eof) {\r\n            children.push(this.Selector());\r\n\r\n            if (this.scanner.tokenType === COMMA) {\r\n                this.scanner.next();\r\n                continue;\r\n            }\r\n\r\n            break;\r\n        }\r\n\r\n        return {\r\n            type: 'SelectorList',\r\n            loc: this.getLocationFromList(children),\r\n            children: children\r\n        };\r\n    },\r\n    generate: function(node) {\r\n        this.children(node, function() {\r\n            this.chunk(',');\r\n        });\r\n    },\r\n    walkContext: 'selector'\r\n};\r\n","var STRING = require('../../tokenizer').TYPE.String;\r\n\r\nmodule.exports = {\r\n    name: 'String',\r\n    structure: {\r\n        value: String\r\n    },\r\n    parse: function() {\r\n        return {\r\n            type: 'String',\r\n            loc: this.getLocation(this.scanner.tokenStart, this.scanner.tokenEnd),\r\n            value: this.consume(STRING)\r\n        };\r\n    },\r\n    generate: function(node) {\r\n        this.chunk(node.value);\r\n    }\r\n};\r\n","var TYPE = require('../../tokenizer').TYPE;\r\n\r\nvar WHITESPACE = TYPE.WhiteSpace;\r\nvar COMMENT = TYPE.Comment;\r\nvar ATKEYWORD = TYPE.AtKeyword;\r\nvar CDO = TYPE.CDO;\r\nvar CDC = TYPE.CDC;\r\nvar EXCLAMATIONMARK = 0x0021; // U+0021 EXCLAMATION MARK (!)\r\n\r\nfunction consumeRaw(startToken) {\r\n    return this.Raw(startToken, null, false);\r\n}\r\n\r\nmodule.exports = {\r\n    name: 'StyleSheet',\r\n    structure: {\r\n        children: [[\r\n            'Comment',\r\n            'CDO',\r\n            'CDC',\r\n            'Atrule',\r\n            'Rule',\r\n            'Raw'\r\n        ]]\r\n    },\r\n    parse: function() {\r\n        var start = this.scanner.tokenStart;\r\n        var children = this.createList();\r\n        var child;\r\n\r\n        scan:\r\n        while (!this.scanner.eof) {\r\n            switch (this.scanner.tokenType) {\r\n                case WHITESPACE:\r\n                    this.scanner.next();\r\n                    continue;\r\n\r\n                case COMMENT:\r\n                    // ignore comments except exclamation comments (i.e. /*! .. */) on top level\r\n                    if (this.scanner.source.charCodeAt(this.scanner.tokenStart + 2) !== EXCLAMATIONMARK) {\r\n                        this.scanner.next();\r\n                        continue;\r\n                    }\r\n\r\n                    child = this.Comment();\r\n                    break;\r\n\r\n                case CDO: // <!--\r\n                    child = this.CDO();\r\n                    break;\r\n\r\n                case CDC: // -->\r\n                    child = this.CDC();\r\n                    break;\r\n\r\n                // CSS Syntax Module Level 3\r\n                // §2.2 Error handling\r\n                // At the \"top level\" of a stylesheet, an <at-keyword-token> starts an at-rule.\r\n                case ATKEYWORD:\r\n                    child = this.parseWithFallback(this.Atrule, consumeRaw);\r\n                    break;\r\n\r\n                // Anything else starts a qualified rule ...\r\n                default:\r\n                    child = this.parseWithFallback(this.Rule, consumeRaw);\r\n            }\r\n\r\n            children.push(child);\r\n        }\r\n\r\n        return {\r\n            type: 'StyleSheet',\r\n            loc: this.getLocation(start, this.scanner.tokenStart),\r\n            children: children\r\n        };\r\n    },\r\n    generate: function(node) {\r\n        this.children(node);\r\n    },\r\n    walkContext: 'stylesheet'\r\n};\r\n","var TYPE = require('../../tokenizer').TYPE;\r\n\r\nvar IDENT = TYPE.Ident;\r\nvar ASTERISK = 0x002A;     // U+002A ASTERISK (*)\r\nvar VERTICALLINE = 0x007C; // U+007C VERTICAL LINE (|)\r\n\r\nfunction eatIdentifierOrAsterisk() {\r\n    if (this.scanner.tokenType !== IDENT &&\r\n        this.scanner.isDelim(ASTERISK) === false) {\r\n        this.error('Identifier or asterisk is expected');\r\n    }\r\n\r\n    this.scanner.next();\r\n}\r\n\r\n// ident\r\n// ident|ident\r\n// ident|*\r\n// *\r\n// *|ident\r\n// *|*\r\n// |ident\r\n// |*\r\nmodule.exports = {\r\n    name: 'TypeSelector',\r\n    structure: {\r\n        name: String\r\n    },\r\n    parse: function() {\r\n        var start = this.scanner.tokenStart;\r\n\r\n        if (this.scanner.isDelim(VERTICALLINE)) {\r\n            this.scanner.next();\r\n            eatIdentifierOrAsterisk.call(this);\r\n        } else {\r\n            eatIdentifierOrAsterisk.call(this);\r\n\r\n            if (this.scanner.isDelim(VERTICALLINE)) {\r\n                this.scanner.next();\r\n                eatIdentifierOrAsterisk.call(this);\r\n            }\r\n        }\r\n\r\n        return {\r\n            type: 'TypeSelector',\r\n            loc: this.getLocation(start, this.scanner.tokenStart),\r\n            name: this.scanner.substrToCursor(start)\r\n        };\r\n    },\r\n    generate: function(node) {\r\n        this.chunk(node.name);\r\n    }\r\n};\r\n","var isHexDigit = require('../../tokenizer').isHexDigit;\r\nvar cmpChar = require('../../tokenizer').cmpChar;\r\nvar TYPE = require('../../tokenizer').TYPE;\r\nvar NAME = require('../../tokenizer').NAME;\r\n\r\nvar IDENT = TYPE.Ident;\r\nvar NUMBER = TYPE.Number;\r\nvar DIMENSION = TYPE.Dimension;\r\nvar PLUSSIGN = 0x002B;     // U+002B PLUS SIGN (+)\r\nvar HYPHENMINUS = 0x002D;  // U+002D HYPHEN-MINUS (-)\r\nvar QUESTIONMARK = 0x003F; // U+003F QUESTION MARK (?)\r\nvar U = 0x0075;            // U+0075 LATIN SMALL LETTER U (u)\r\n\r\nfunction eatHexSequence(offset, allowDash) {\r\n    for (var pos = this.scanner.tokenStart + offset, len = 0; pos < this.scanner.tokenEnd; pos++) {\r\n        var code = this.scanner.source.charCodeAt(pos);\r\n\r\n        if (code === HYPHENMINUS && allowDash && len !== 0) {\r\n            if (eatHexSequence.call(this, offset + len + 1, false) === 0) {\r\n                this.error();\r\n            }\r\n\r\n            return -1;\r\n        }\r\n\r\n        if (!isHexDigit(code)) {\r\n            this.error(\r\n                allowDash && len !== 0\r\n                    ? 'HyphenMinus' + (len < 6 ? ' or hex digit' : '') + ' is expected'\r\n                    : (len < 6 ? 'Hex digit is expected' : 'Unexpected input'),\r\n                pos\r\n            );\r\n        }\r\n\r\n        if (++len > 6) {\r\n            this.error('Too many hex digits', pos);\r\n        };\r\n    }\r\n\r\n    this.scanner.next();\r\n    return len;\r\n}\r\n\r\nfunction eatQuestionMarkSequence(max) {\r\n    var count = 0;\r\n\r\n    while (this.scanner.isDelim(QUESTIONMARK)) {\r\n        if (++count > max) {\r\n            this.error('Too many question marks');\r\n        }\r\n\r\n        this.scanner.next();\r\n    }\r\n}\r\n\r\nfunction startsWith(code) {\r\n    if (this.scanner.source.charCodeAt(this.scanner.tokenStart) !== code) {\r\n        this.error(NAME[code] + ' is expected');\r\n    }\r\n}\r\n\r\n// https://drafts.csswg.org/css-syntax/#urange\r\n// Informally, the <urange> production has three forms:\r\n// U+0001\r\n//      Defines a range consisting of a single code point, in this case the code point \"1\".\r\n// U+0001-00ff\r\n//      Defines a range of codepoints between the first and the second value, in this case\r\n//      the range between \"1\" and \"ff\" (255 in decimal) inclusive.\r\n// U+00??\r\n//      Defines a range of codepoints where the \"?\" characters range over all hex digits,\r\n//      in this case defining the same as the value U+0000-00ff.\r\n// In each form, a maximum of 6 digits is allowed for each hexadecimal number (if you treat \"?\" as a hexadecimal digit).\r\n//\r\n// <urange> =\r\n//   u '+' <ident-token> '?'* |\r\n//   u <dimension-token> '?'* |\r\n//   u <number-token> '?'* |\r\n//   u <number-token> <dimension-token> |\r\n//   u <number-token> <number-token> |\r\n//   u '+' '?'+\r\nfunction scanUnicodeRange() {\r\n    var hexLength = 0;\r\n\r\n    // u '+' <ident-token> '?'*\r\n    // u '+' '?'+\r\n    if (this.scanner.isDelim(PLUSSIGN)) {\r\n        this.scanner.next();\r\n\r\n        if (this.scanner.tokenType === IDENT) {\r\n            hexLength = eatHexSequence.call(this, 0, true);\r\n            if (hexLength > 0) {\r\n                eatQuestionMarkSequence.call(this, 6 - hexLength);\r\n            }\r\n            return;\r\n        }\r\n\r\n        if (this.scanner.isDelim(QUESTIONMARK)) {\r\n            this.scanner.next();\r\n            eatQuestionMarkSequence.call(this, 5);\r\n            return;\r\n        }\r\n\r\n        this.error('Hex digit or question mark is expected');\r\n        return;\r\n    }\r\n\r\n    // u <number-token> '?'*\r\n    // u <number-token> <dimension-token>\r\n    // u <number-token> <number-token>\r\n    if (this.scanner.tokenType === NUMBER) {\r\n        startsWith.call(this, PLUSSIGN);\r\n        hexLength = eatHexSequence.call(this, 1, true);\r\n\r\n        if (this.scanner.isDelim(QUESTIONMARK)) {\r\n            eatQuestionMarkSequence.call(this, 6 - hexLength);\r\n            return;\r\n        }\r\n\r\n        if (this.scanner.tokenType === DIMENSION ||\r\n            this.scanner.tokenType === NUMBER) {\r\n            startsWith.call(this, HYPHENMINUS);\r\n            eatHexSequence.call(this, 1, false);\r\n            return;\r\n        }\r\n\r\n        return;\r\n    }\r\n\r\n    // u <dimension-token> '?'*\r\n    if (this.scanner.tokenType === DIMENSION) {\r\n        startsWith.call(this, PLUSSIGN);\r\n        hexLength = eatHexSequence.call(this, 1, true);\r\n\r\n        if (hexLength > 0) {\r\n            eatQuestionMarkSequence.call(this, 6 - hexLength);\r\n        }\r\n\r\n        return;\r\n    }\r\n\r\n    this.error();\r\n}\r\n\r\nmodule.exports = {\r\n    name: 'UnicodeRange',\r\n    structure: {\r\n        value: String\r\n    },\r\n    parse: function() {\r\n        var start = this.scanner.tokenStart;\r\n\r\n        // U or u\r\n        if (!cmpChar(this.scanner.source, start, U)) {\r\n            this.error('U is expected');\r\n        }\r\n\r\n        if (!cmpChar(this.scanner.source, start + 1, PLUSSIGN)) {\r\n            this.error('Plus sign is expected');\r\n        }\r\n\r\n        this.scanner.next();\r\n        scanUnicodeRange.call(this);\r\n\r\n        return {\r\n            type: 'UnicodeRange',\r\n            loc: this.getLocation(start, this.scanner.tokenStart),\r\n            value: this.scanner.substrToCursor(start)\r\n        };\r\n    },\r\n    generate: function(node) {\r\n        this.chunk(node.value);\r\n    }\r\n};\r\n","var isWhiteSpace = require('../../tokenizer').isWhiteSpace;\r\nvar cmpStr = require('../../tokenizer').cmpStr;\r\nvar TYPE = require('../../tokenizer').TYPE;\r\n\r\nvar FUNCTION = TYPE.Function;\r\nvar URL = TYPE.Url;\r\nvar RIGHTPARENTHESIS = TYPE.RightParenthesis;\r\n\r\n// <url-token> | <function-token> <string> )\r\nmodule.exports = {\r\n    name: 'Url',\r\n    structure: {\r\n        value: ['String', 'Raw']\r\n    },\r\n    parse: function() {\r\n        var start = this.scanner.tokenStart;\r\n        var value;\r\n\r\n        switch (this.scanner.tokenType) {\r\n            case URL:\r\n                var rawStart = start + 4;\r\n                var rawEnd = this.scanner.tokenEnd - 1;\r\n\r\n                while (rawStart < rawEnd && isWhiteSpace(this.scanner.source.charCodeAt(rawStart))) {\r\n                    rawStart++;\r\n                }\r\n\r\n                while (rawStart < rawEnd && isWhiteSpace(this.scanner.source.charCodeAt(rawEnd - 1))) {\r\n                    rawEnd--;\r\n                }\r\n\r\n                value = {\r\n                    type: 'Raw',\r\n                    loc: this.getLocation(rawStart, rawEnd),\r\n                    value: this.scanner.source.substring(rawStart, rawEnd)\r\n                };\r\n\r\n                this.eat(URL);\r\n                break;\r\n\r\n            case FUNCTION:\r\n                if (!cmpStr(this.scanner.source, this.scanner.tokenStart, this.scanner.tokenEnd, 'url(')) {\r\n                    this.error('Function name must be `url`');\r\n                }\r\n\r\n                this.eat(FUNCTION);\r\n                this.scanner.skipSC();\r\n                value = this.String();\r\n                this.scanner.skipSC();\r\n                this.eat(RIGHTPARENTHESIS);\r\n                break;\r\n\r\n            default:\r\n                this.error('Url or Function is expected');\r\n        }\r\n\r\n        return {\r\n            type: 'Url',\r\n            loc: this.getLocation(start, this.scanner.tokenStart),\r\n            value: value\r\n        };\r\n    },\r\n    generate: function(node) {\r\n        this.chunk('url');\r\n        this.chunk('(');\r\n        this.node(node.value);\r\n        this.chunk(')');\r\n    }\r\n};\r\n","var WHITESPACE = require('../../tokenizer').TYPE.WhiteSpace;\r\nvar SPACE = Object.freeze({\r\n    type: 'WhiteSpace',\r\n    loc: null,\r\n    value: ' '\r\n});\r\n\r\nmodule.exports = {\r\n    name: 'WhiteSpace',\r\n    structure: {\r\n        value: String\r\n    },\r\n    parse: function() {\r\n        this.eat(WHITESPACE);\r\n        return SPACE;\r\n\r\n        // return {\r\n        //     type: 'WhiteSpace',\r\n        //     loc: this.getLocation(this.scanner.tokenStart, this.scanner.tokenEnd),\r\n        //     value: this.consume(WHITESPACE)\r\n        // };\r\n    },\r\n    generate: function(node) {\r\n        this.chunk(node.value);\r\n    }\r\n};\r\n","module.exports = {\r\n    AnPlusB: require('./AnPlusB'),\r\n    Atrule: require('./Atrule'),\r\n    AtrulePrelude: require('./AtrulePrelude'),\r\n    AttributeSelector: require('./AttributeSelector'),\r\n    Block: require('./Block'),\r\n    Brackets: require('./Brackets'),\r\n    CDC: require('./CDC'),\r\n    CDO: require('./CDO'),\r\n    ClassSelector: require('./ClassSelector'),\r\n    Combinator: require('./Combinator'),\r\n    Comment: require('./Comment'),\r\n    Declaration: require('./Declaration'),\r\n    DeclarationList: require('./DeclarationList'),\r\n    Dimension: require('./Dimension'),\r\n    Function: require('./Function'),\r\n    HexColor: require('./HexColor'),\r\n    Identifier: require('./Identifier'),\r\n    IdSelector: require('./IdSelector'),\r\n    MediaFeature: require('./MediaFeature'),\r\n    MediaQuery: require('./MediaQuery'),\r\n    MediaQueryList: require('./MediaQueryList'),\r\n    Nth: require('./Nth'),\r\n    Number: require('./Number'),\r\n    Operator: require('./Operator'),\r\n    Parentheses: require('./Parentheses'),\r\n    Percentage: require('./Percentage'),\r\n    PseudoClassSelector: require('./PseudoClassSelector'),\r\n    PseudoElementSelector: require('./PseudoElementSelector'),\r\n    Ratio: require('./Ratio'),\r\n    Raw: require('./Raw'),\r\n    Rule: require('./Rule'),\r\n    Selector: require('./Selector'),\r\n    SelectorList: require('./SelectorList'),\r\n    String: require('./String'),\r\n    StyleSheet: require('./StyleSheet'),\r\n    TypeSelector: require('./TypeSelector'),\r\n    UnicodeRange: require('./UnicodeRange'),\r\n    Url: require('./Url'),\r\n    Value: require('./Value'),\r\n    WhiteSpace: require('./WhiteSpace')\r\n};\r\n","module.exports = {\r\n    name: 'Nth',\r\n    structure: {\r\n        nth: ['AnPlusB', 'Identifier'],\r\n        selector: ['SelectorList', null]\r\n    },\r\n    parse: function(allowOfClause) {\r\n        this.scanner.skipSC();\r\n\r\n        var start = this.scanner.tokenStart;\r\n        var end = start;\r\n        var selector = null;\r\n        var query;\r\n\r\n        if (this.scanner.lookupValue(0, 'odd') || this.scanner.lookupValue(0, 'even')) {\r\n            query = this.Identifier();\r\n        } else {\r\n            query = this.AnPlusB();\r\n        }\r\n\r\n        this.scanner.skipSC();\r\n\r\n        if (allowOfClause && this.scanner.lookupValue(0, 'of')) {\r\n            this.scanner.next();\r\n\r\n            selector = this.SelectorList();\r\n\r\n            if (this.needPositions) {\r\n                end = this.getLastListNode(selector.children).loc.end.offset;\r\n            }\r\n        } else {\r\n            if (this.needPositions) {\r\n                end = query.loc.end.offset;\r\n            }\r\n        }\r\n\r\n        return {\r\n            type: 'Nth',\r\n            loc: this.getLocation(start, end),\r\n            nth: query,\r\n            selector: selector\r\n        };\r\n    },\r\n    generate: function(node) {\r\n        this.node(node.nth);\r\n        if (node.selector !== null) {\r\n            this.chunk(' of ');\r\n            this.node(node.selector);\r\n        }\r\n    }\r\n};\r\n","module.exports = {\r\n    name: 'Selector',\r\n    structure: {\r\n        children: [[\r\n            'TypeSelector',\r\n            'IdSelector',\r\n            'ClassSelector',\r\n            'AttributeSelector',\r\n            'PseudoClassSelector',\r\n            'PseudoElementSelector',\r\n            'Combinator',\r\n            'WhiteSpace'\r\n        ]]\r\n    },\r\n    parse: function() {\r\n        var children = this.readSequence(this.scope.Selector);\r\n\r\n        // nothing were consumed\r\n        if (this.getFirstListNode(children) === null) {\r\n            this.error('Selector is expected');\r\n        }\r\n\r\n        return {\r\n            type: 'Selector',\r\n            loc: this.getLocationFromList(children),\r\n            children: children\r\n        };\r\n    },\r\n    generate: function(node) {\r\n        this.children(node);\r\n    }\r\n};\r\n","module.exports = {\r\n    name: 'Value',\r\n    structure: {\r\n        children: [[]]\r\n    },\r\n    parse: function() {\r\n        var start = this.scanner.tokenStart;\r\n        var children = this.readSequence(this.scope.Value);\r\n\r\n        return {\r\n            type: 'Value',\r\n            loc: this.getLocation(start, this.scanner.tokenStart),\r\n            children: children\r\n        };\r\n    },\r\n    generate: function(node) {\r\n        this.children(node);\r\n    }\r\n};\r\n","var data = require('../../../data');\r\n\r\nmodule.exports = {\r\n    generic: true,\r\n    types: data.types,\r\n    atrules: data.atrules,\r\n    properties: data.properties,\r\n    node: require('../node')\r\n};\r\n","var cmpChar = require('../../tokenizer').cmpChar;\r\nvar cmpStr = require('../../tokenizer').cmpStr;\r\nvar TYPE = require('../../tokenizer').TYPE;\r\n\r\nvar IDENT = TYPE.Ident;\r\nvar STRING = TYPE.String;\r\nvar NUMBER = TYPE.Number;\r\nvar FUNCTION = TYPE.Function;\r\nvar URL = TYPE.Url;\r\nvar HASH = TYPE.Hash;\r\nvar DIMENSION = TYPE.Dimension;\r\nvar PERCENTAGE = TYPE.Percentage;\r\nvar LEFTPARENTHESIS = TYPE.LeftParenthesis;\r\nvar LEFTSQUAREBRACKET = TYPE.LeftSquareBracket;\r\nvar COMMA = TYPE.Comma;\r\nvar DELIM = TYPE.Delim;\r\nvar NUMBERSIGN = 0x0023;  // U+0023 NUMBER SIGN (#)\r\nvar ASTERISK = 0x002A;    // U+002A ASTERISK (*)\r\nvar PLUSSIGN = 0x002B;    // U+002B PLUS SIGN (+)\r\nvar HYPHENMINUS = 0x002D; // U+002D HYPHEN-MINUS (-)\r\nvar SOLIDUS = 0x002F;     // U+002F SOLIDUS (/)\r\nvar U = 0x0075;           // U+0075 LATIN SMALL LETTER U (u)\r\n\r\nmodule.exports = function defaultRecognizer(context) {\r\n    switch (this.scanner.tokenType) {\r\n        case HASH:\r\n            return this.HexColor();\r\n\r\n        case COMMA:\r\n            context.space = null;\r\n            context.ignoreWSAfter = true;\r\n            return this.Operator();\r\n\r\n        case LEFTPARENTHESIS:\r\n            return this.Parentheses(this.readSequence, context.recognizer);\r\n\r\n        case LEFTSQUAREBRACKET:\r\n            return this.Brackets(this.readSequence, context.recognizer);\r\n\r\n        case STRING:\r\n            return this.String();\r\n\r\n        case DIMENSION:\r\n            return this.Dimension();\r\n\r\n        case PERCENTAGE:\r\n            return this.Percentage();\r\n\r\n        case NUMBER:\r\n            return this.Number();\r\n\r\n        case FUNCTION:\r\n            return cmpStr(this.scanner.source, this.scanner.tokenStart, this.scanner.tokenEnd, 'url(')\r\n                ? this.Url()\r\n                : this.Function(this.readSequence, context.recognizer);\r\n\r\n        case URL:\r\n            return this.Url();\r\n\r\n        case IDENT:\r\n            // check for unicode range, it should start with u+ or U+\r\n            if (cmpChar(this.scanner.source, this.scanner.tokenStart, U) &&\r\n                cmpChar(this.scanner.source, this.scanner.tokenStart + 1, PLUSSIGN)) {\r\n                return this.UnicodeRange();\r\n            } else {\r\n                return this.Identifier();\r\n            }\r\n\r\n        case DELIM:\r\n            var code = this.scanner.source.charCodeAt(this.scanner.tokenStart);\r\n\r\n            if (code === SOLIDUS ||\r\n                code === ASTERISK ||\r\n                code === PLUSSIGN ||\r\n                code === HYPHENMINUS) {\r\n                return this.Operator(); // TODO: replace with Delim\r\n            }\r\n\r\n            // TODO: produce a node with Delim node type\r\n\r\n            if (code === NUMBERSIGN) {\r\n                this.error('Hex or identifier is expected', this.scanner.tokenStart + 1);\r\n            }\r\n\r\n            break;\r\n    }\r\n};\r\n","module.exports = {\r\n    getNode: require('./default')\r\n};\r\n","var TYPE = require('../../tokenizer').TYPE;\r\n\r\nvar DELIM = TYPE.Delim;\r\nvar IDENT = TYPE.Ident;\r\nvar DIMENSION = TYPE.Dimension;\r\nvar PERCENTAGE = TYPE.Percentage;\r\nvar NUMBER = TYPE.Number;\r\nvar HASH = TYPE.Hash;\r\nvar COLON = TYPE.Colon;\r\nvar LEFTSQUAREBRACKET = TYPE.LeftSquareBracket;\r\nvar NUMBERSIGN = 0x0023;      // U+0023 NUMBER SIGN (#)\r\nvar ASTERISK = 0x002A;        // U+002A ASTERISK (*)\r\nvar PLUSSIGN = 0x002B;        // U+002B PLUS SIGN (+)\r\nvar SOLIDUS = 0x002F;         // U+002F SOLIDUS (/)\r\nvar FULLSTOP = 0x002E;        // U+002E FULL STOP (.)\r\nvar GREATERTHANSIGN = 0x003E; // U+003E GREATER-THAN SIGN (>)\r\nvar VERTICALLINE = 0x007C;    // U+007C VERTICAL LINE (|)\r\nvar TILDE = 0x007E;           // U+007E TILDE (~)\r\n\r\nfunction getNode(context) {\r\n    switch (this.scanner.tokenType) {\r\n        case LEFTSQUAREBRACKET:\r\n            return this.AttributeSelector();\r\n\r\n        case HASH:\r\n            return this.IdSelector();\r\n\r\n        case COLON:\r\n            if (this.scanner.lookupType(1) === COLON) {\r\n                return this.PseudoElementSelector();\r\n            } else {\r\n                return this.PseudoClassSelector();\r\n            }\r\n\r\n        case IDENT:\r\n            return this.TypeSelector();\r\n\r\n        case NUMBER:\r\n        case PERCENTAGE:\r\n            return this.Percentage();\r\n\r\n        case DIMENSION:\r\n            // throws when .123ident\r\n            if (this.scanner.source.charCodeAt(this.scanner.tokenStart) === FULLSTOP) {\r\n                this.error('Identifier is expected', this.scanner.tokenStart + 1);\r\n            }\r\n            break;\r\n\r\n        case DELIM:\r\n            var code = this.scanner.source.charCodeAt(this.scanner.tokenStart);\r\n\r\n            switch (code) {\r\n                case PLUSSIGN:\r\n                case GREATERTHANSIGN:\r\n                case TILDE:\r\n                    context.space = null;\r\n                    context.ignoreWSAfter = true;\r\n                    return this.Combinator();\r\n\r\n                case SOLIDUS:  // /deep/\r\n                    return this.Combinator();\r\n\r\n                case FULLSTOP:\r\n                    return this.ClassSelector();\r\n\r\n                case ASTERISK:\r\n                case VERTICALLINE:\r\n                    return this.TypeSelector();\r\n\r\n                case NUMBERSIGN:\r\n                    return this.IdSelector();\r\n            }\r\n\r\n            break;\r\n    }\r\n};\r\n\r\nmodule.exports = {\r\n    getNode: getNode\r\n};\r\n","// https://drafts.csswg.org/css-images-4/#element-notation\r\n// https://developer.mozilla.org/en-US/docs/Web/CSS/element\r\nmodule.exports = function() {\r\n    this.scanner.skipSC();\r\n\r\n    var children = this.createSingleNodeList(\r\n        this.IdSelector()\r\n    );\r\n\r\n    this.scanner.skipSC();\r\n\r\n    return children;\r\n};\r\n","var TYPE = require('../../tokenizer').TYPE;\r\nvar rawMode = require('../node/Raw').mode;\r\n\r\nvar COMMA = TYPE.Comma;\r\n\r\n// var( <ident> , <value>? )\r\nmodule.exports = function() {\r\n    var children = this.createList();\r\n\r\n    this.scanner.skipSC();\r\n\r\n    // NOTE: Don't check more than a first argument is an ident, rest checks are for lexer\r\n    children.push(this.Identifier());\r\n\r\n    this.scanner.skipSC();\r\n\r\n    if (this.scanner.tokenType === COMMA) {\r\n        children.push(this.Operator());\r\n        children.push(this.parseCustomProperty\r\n            ? this.Value(null)\r\n            : this.Raw(this.scanner.tokenIndex, rawMode.exclamationMarkOrSemicolon, false)\r\n        );\r\n    }\r\n\r\n    return children;\r\n};\r\n","module.exports = {\r\n    AtrulePrelude: require('./atrulePrelude'),\r\n    Selector: require('./selector'),\r\n    Value: require('./value')\r\n};\r\n","module.exports = {\r\n    getNode: require('./default'),\r\n    '-moz-element': require('../function/element'),\r\n    'element': require('../function/element'),\r\n    'expression': require('../function/expression'),\r\n    'var': require('../function/var')\r\n};\r\n","// legacy IE function\r\n// expression( <any-value> )\r\nmodule.exports = function() {\r\n    return this.createSingleNodeList(\r\n        this.Raw(this.scanner.tokenIndex, null, false)\r\n    );\r\n};\r\n","var TYPE = require('../../tokenizer').TYPE;\r\n\r\nvar STRING = TYPE.String;\r\nvar IDENT = TYPE.Ident;\r\nvar URL = TYPE.Url;\r\nvar FUNCTION = TYPE.Function;\r\nvar LEFTPARENTHESIS = TYPE.LeftParenthesis;\r\n\r\nmodule.exports = {\r\n    parse: {\r\n        prelude: function() {\r\n            var children = this.createList();\r\n\r\n            this.scanner.skipSC();\r\n\r\n            switch (this.scanner.tokenType) {\r\n                case STRING:\r\n                    children.push(this.String());\r\n                    break;\r\n\r\n                case URL:\r\n                case FUNCTION:\r\n                    children.push(this.Url());\r\n                    break;\r\n\r\n                default:\r\n                    this.error('String or url() is expected');\r\n            }\r\n\r\n            if (this.lookupNonWSType(0) === IDENT ||\r\n                this.lookupNonWSType(0) === LEFTPARENTHESIS) {\r\n                children.push(this.WhiteSpace());\r\n                children.push(this.MediaQueryList());\r\n            }\r\n\r\n            return children;\r\n        },\r\n        block: null\r\n    }\r\n};\r\n","var TYPE = require('../../tokenizer').TYPE;\r\n\r\nvar WHITESPACE = TYPE.WhiteSpace;\r\nvar COMMENT = TYPE.Comment;\r\nvar IDENT = TYPE.Ident;\r\nvar FUNCTION = TYPE.Function;\r\nvar COLON = TYPE.Colon;\r\nvar LEFTPARENTHESIS = TYPE.LeftParenthesis;\r\n\r\nfunction consumeRaw() {\r\n    return this.createSingleNodeList(\r\n        this.Raw(this.scanner.tokenIndex, null, false)\r\n    );\r\n}\r\n\r\nfunction parentheses() {\r\n    this.scanner.skipSC();\r\n\r\n    if (this.scanner.tokenType === IDENT &&\r\n        this.lookupNonWSType(1) === COLON) {\r\n        return this.createSingleNodeList(\r\n            this.Declaration()\r\n        );\r\n    }\r\n\r\n    return readSequence.call(this);\r\n}\r\n\r\nfunction readSequence() {\r\n    var children = this.createList();\r\n    var space = null;\r\n    var child;\r\n\r\n    this.scanner.skipSC();\r\n\r\n    scan:\r\n    while (!this.scanner.eof) {\r\n        switch (this.scanner.tokenType) {\r\n            case WHITESPACE:\r\n                space = this.WhiteSpace();\r\n                continue;\r\n\r\n            case COMMENT:\r\n                this.scanner.next();\r\n                continue;\r\n\r\n            case FUNCTION:\r\n                child = this.Function(consumeRaw, this.scope.AtrulePrelude);\r\n                break;\r\n\r\n            case IDENT:\r\n                child = this.Identifier();\r\n                break;\r\n\r\n            case LEFTPARENTHESIS:\r\n                child = this.Parentheses(parentheses, this.scope.AtrulePrelude);\r\n                break;\r\n\r\n            default:\r\n                break scan;\r\n        }\r\n\r\n        if (space !== null) {\r\n            children.push(space);\r\n            space = null;\r\n        }\r\n\r\n        children.push(child);\r\n    }\r\n\r\n    return children;\r\n}\r\n\r\nmodule.exports = {\r\n    parse: {\r\n        prelude: function() {\r\n            var children = readSequence.call(this);\r\n\r\n            if (this.getFirstListNode(children) === null) {\r\n                this.error('Condition is expected');\r\n            }\r\n\r\n            return children;\r\n        },\r\n        block: function() {\r\n            return this.Block(false);\r\n        }\r\n    }\r\n};\r\n","module.exports = {\r\n    'font-face': require('./font-face'),\r\n    'import': require('./import'),\r\n    'media': require('./media'),\r\n    'page': require('./page'),\r\n    'supports': require('./supports')\r\n};\r\n","module.exports = {\r\n    parse: {\r\n        prelude: null,\r\n        block: function() {\r\n            return this.Block(true);\r\n        }\r\n    }\r\n};\r\n","module.exports = {\r\n    parse: {\r\n        prelude: function() {\r\n            return this.createSingleNodeList(\r\n                this.MediaQueryList()\r\n            );\r\n        },\r\n        block: function() {\r\n            return this.Block(false);\r\n        }\r\n    }\r\n};\r\n","module.exports = {\r\n    parse: {\r\n        prelude: function() {\r\n            return this.createSingleNodeList(\r\n                this.SelectorList()\r\n            );\r\n        },\r\n        block: function() {\r\n            return this.Block(true);\r\n        }\r\n    }\r\n};\r\n","module.exports = {\r\n    parse: function selectorList() {\r\n        return this.createSingleNodeList(\r\n            this.SelectorList()\r\n        );\r\n    }\r\n};\r\n","module.exports = require('./common/selectorList');\r\n","module.exports = require('./common/selectorList');\r\n","var ALLOW_OF_CLAUSE = true;\r\n\r\nmodule.exports = {\r\n    parse: function nthWithOfClause() {\r\n        return this.createSingleNodeList(\r\n            this.Nth(ALLOW_OF_CLAUSE)\r\n        );\r\n    }\r\n};\r\n","module.exports = require('./common/nthWithOfClause');\r\n","module.exports = require('./common/nthWithOfClause');\r\n","var DISALLOW_OF_CLAUSE = false;\r\n\r\nmodule.exports = {\r\n    parse: function nth() {\r\n        return this.createSingleNodeList(\r\n            this.Nth(DISALLOW_OF_CLAUSE)\r\n        );\r\n    }\r\n};\r\n","module.exports = require('./common/nth');\r\n","module.exports = require('./common/nth');\r\n","module.exports = {\r\n    parse: function compoundSelector() {\r\n        return this.createSingleNodeList(\r\n            this.Selector()\r\n        );\r\n    }\r\n};\r\n","module.exports = {\r\n    parseContext: {\r\n        default: 'StyleSheet',\r\n        stylesheet: 'StyleSheet',\r\n        atrule: 'Atrule',\r\n        atrulePrelude: function(options) {\r\n            return this.AtrulePrelude(options.atrule ? String(options.atrule) : null);\r\n        },\r\n        mediaQueryList: 'MediaQueryList',\r\n        mediaQuery: 'MediaQuery',\r\n        rule: 'Rule',\r\n        selectorList: 'SelectorList',\r\n        selector: 'Selector',\r\n        block: function() {\r\n            return this.Block(true);\r\n        },\r\n        declarationList: 'DeclarationList',\r\n        declaration: 'Declaration',\r\n        value: 'Value'\r\n    },\r\n    scope: require('../scope'),\r\n    atrule: require('../atrule'),\r\n    pseudo: require('../pseudo'),\r\n    node: require('../node')\r\n};\r\n","module.exports = {\r\n    'dir': require('./dir'),\r\n    'has': require('./has'),\r\n    'lang': require('./lang'),\r\n    'matches': require('./matches'),\r\n    'not': require('./not'),\r\n    'nth-child': require('./nth-child'),\r\n    'nth-last-child': require('./nth-last-child'),\r\n    'nth-last-of-type': require('./nth-last-of-type'),\r\n    'nth-of-type': require('./nth-of-type'),\r\n    'slotted': require('./slotted')\r\n};\r\n","module.exports = {\r\n    parse: function() {\r\n        return this.createSingleNodeList(\r\n            this.Identifier()\r\n        );\r\n    }\r\n};\r\n","module.exports = {\r\n    parse: function() {\r\n        return this.createSingleNodeList(\r\n            this.SelectorList()\r\n        );\r\n    }\r\n};\r\n","module.exports = {\r\n    parse: function() {\r\n        return this.createSingleNodeList(\r\n            this.Identifier()\r\n        );\r\n    }\r\n};\r\n","module.exports = {\r\n    node: require('../node')\r\n};\r\n","function merge() {\r\n    var dest = {};\r\n\r\n    for (var i = 0; i < arguments.length; i++) {\r\n        var src = arguments[i];\r\n        for (var key in src) {\r\n            dest[key] = src[key];\r\n        }\r\n    }\r\n\r\n    return dest;\r\n}\r\n\r\nmodule.exports = require('./create').create(\r\n    merge(\r\n        require('./config/lexer'),\r\n        require('./config/parser'),\r\n        require('./config/walker')\r\n    )\r\n);\r\n","module.exports = require('./syntax');\r\n","import isNumber from 'lodash.isnumber'\nimport isPlainObject from 'lodash.isplainobject'\nimport isString from 'lodash.isstring'\nimport { parse, walk, lexer } from 'css-tree-animatable'\nimport patch from 'css-tree-animatable/data/patch.json'\nimport mdnProperties from 'mdn-data-animatable/css/properties.json'\nimport mdnSyntaxes from 'mdn-data-animatable/css/syntaxes.json'\nimport nonAnimatable from 'mdn-data-animatable/css/non-animatable.json'\nimport popularIndex from './popularIndex.json'\n\nconst properties = []\nObject.keys(lexer.properties).forEach((key) => {\n  if (!nonAnimatable.includes(key)) {\n    properties.push(key)\n  }\n})\n\nconst isAnimatable = (value, returnCssProperty = false) => {\n  let property = value.toLowerCase().trim()\n  if (property === 'cssoffset') {\n    property = property.substr(3)\n  }\n  if (properties.includes(property)) {\n    return returnCssProperty ? property : true\n  }\n  if (property.includes('-')) {\n    return returnCssProperty ? '' : false\n  }\n  property = property.replace(/-/g, '')\n  for (const prop of properties) {\n    if (property === prop.replace(/-/g, '')) {\n      return returnCssProperty ? prop : true\n    }\n  }\n  return returnCssProperty ? '' : false\n}\n\nconst cssToJs = (value, webAnimationsAPI = true) => {\n  let property = isAnimatable(value, true)\n  if (!property) {\n    return ''\n  }\n  if (webAnimationsAPI) {\n    if (property === 'offset') {\n      property = 'css-' + property\n    }\n  }\n  return property.replace(/-([a-z])/g, (match, letter) => {\n    return letter.toUpperCase()\n  })\n}\n\nconst jsToCss = (value) => {\n  return isAnimatable(value, true)\n}\n\nconst popular = (start = 0, end = 10) => {\n  const popular = []\n  let notInPopular\n  if (end >= popularIndex.length) {\n    notInPopular = properties.filter((property) => !popularIndex.includes(properties.indexOf(property)))\n  }\n  for (let i = start; i < end; i++) {\n    if (popularIndex[i] || popularIndex[i] === 0) {\n      popular.push(properties[popularIndex[i]])\n    } else {\n      const property = notInPopular[i - popularIndex.length]\n      if (!property) {\n        break\n      }\n      popular.push(property)\n    }\n  }\n  return popular\n}\n\nconst syntaxes = { main: '', links: {}, order: [] }\n\nconst getSyntaxes = (syntax) => {\n  const propertyMatches = syntax.match(/<'[a-zA-Z0-9-()]+'>/g)\n  if (Array.isArray(propertyMatches)) {\n    propertyMatches.forEach((key) => {\n      const prop = key.slice(2, -2)\n      const propertySyntax = mdnProperties[prop]\n      syntaxes[key] = propertySyntax.syntax\n      syntaxes.order.push(key)\n      getSyntaxes(propertySyntax.syntax)\n    })\n  }\n  const syntaxMatches = syntax.match(/<[a-zA-Z0-9-()]+>/g)\n  if (Array.isArray(syntaxMatches)) {\n    syntaxMatches.forEach((key) => {\n      const prop = key.slice(1, -1)\n      if (!syntaxes[key]) {\n        const syntaxSyntax = mdnSyntaxes[prop]\n        const patchSyntax = patch.syntaxes[prop]\n        if (syntaxSyntax) {\n          syntaxes[key] = syntaxSyntax.syntax\n          syntaxes.order.push(key)\n          getSyntaxes(syntaxSyntax.syntax)\n        } else if (patchSyntax) {\n          syntaxes[key] = patchSyntax.syntax\n          syntaxes.order.push(key)\n          getSyntaxes(patchSyntax.syntax)\n        } else if (!['url-token', 'any-value', 'function-token', 'hex-color', 'declaration-value', 'hash-token', 'zero'].includes(prop)) {\n          syntaxes.links[key] = 'https://developer.mozilla.org/docs/Web/CSS/' + prop.replace(/flex/, 'flex_value')\n        }\n      }\n    })\n  }\n}\n\nconst syntax = (value) => {\n  for (const member in syntaxes) delete syntaxes[member]\n  syntaxes.main = ''\n  syntaxes.links = {}\n  syntaxes.order = []\n  const property = isAnimatable(value, true)\n  if (property) {\n    const syntax = mdnProperties[property].syntax\n    syntaxes.main = syntax\n    getSyntaxes(syntax)\n  } else {\n    syntaxes.main = `Error: ${value} is not an animatable CSS property.`\n  }\n  return syntaxes\n}\n\nconst validate = (obj, returnError = true) => {\n  const errors = []\n  if (!isPlainObject(obj)) {\n    errors.push({ name: 'TypeError', message: 'Argument is not a plain object.' })\n  } else {\n    for (let [key, value] of Object.entries(obj)) {\n      if (!isString(value) && !isNumber(value)) {\n        errors.push({ name: 'TypeError', message: 'Property value must be a string or a number. ' + typeof value + ' given.' })\n      } else {\n        const property = isAnimatable(key, true)\n        if (!property) {\n          errors.push({ name: 'MatchError', message: key + ' is not an animatable CSS property.' })\n        } else {\n          let ast\n          try {\n            ast = parse(`${property}: ${value}`, {\n              context: 'declaration',\n              onParseError: (error) => {\n                errors.push(error)\n              },\n            })\n            walk(ast, {\n              visit: 'Declaration',\n              enter: function (node) {\n                const error = lexer.matchDeclaration(node).error\n                if (error) {\n                  errors.push(error)\n                }\n              },\n            })\n          } catch (error) {\n            errors.push(error)\n          }\n        }\n      }\n    }\n  }\n  return !errors.length ? true : returnError ? errors[errors.length - 1] : false\n}\n\nconst propertyFormat = (property, format) => {\n  switch (format) {\n    case 'css':\n      property = jsToCss(property)\n      break\n    case 'js':\n      property = cssToJs(property, false)\n      break\n    default:\n      property = cssToJs(property)\n  }\n  return property\n}\n\nconst sanitize = (obj, format = 'waapi') => {\n  format = format.toString().toLowerCase()\n  let sanitized = {}\n  if (Array.isArray(obj)) {\n    sanitized = []\n    obj.forEach((key) => {\n      const property = isAnimatable(key, true)\n      if (property) {\n        sanitized.push(propertyFormat(property, format))\n      }\n    })\n  } else if (isPlainObject(obj)) {\n    for (let [key, value] of Object.entries(obj)) {\n      const object = {}\n      object[key] = value\n      if (validate(object, false)) {\n        sanitized[propertyFormat(key, format)] = value\n      }\n    }\n  } else if (isString(obj)) {\n    switch (format) {\n      case 'css':\n        return jsToCss(obj)\n      case 'js':\n        return cssToJs(obj, false)\n      default:\n        return cssToJs(obj)\n    }\n  }\n  return sanitized\n}\n\nexport default {\n  properties: properties,\n  cssToJs: cssToJs,\n  jsToCss: jsToCss,\n  isAnimatable: isAnimatable,\n  popular: popular,\n  syntax: syntax,\n  validate: validate,\n  sanitize: sanitize,\n}\n","import functions from './functions'\n\nexport default {\n  properties: functions.properties.map((val) => functions.cssToJs(val)),\n  propertiesCSS: functions.properties,\n  propertiesJS: functions.properties.map((val) => functions.cssToJs(val, false)),\n}\n","import arrays from './arrays'\nimport functions from './functions'\n\nexport const properties = arrays.properties\nexport const propertiesCSS = arrays.propertiesCSS\nexport const propertiesJS = arrays.propertiesJS\nexport const cssToJs = functions.cssToJs\nexport const jsToCss = functions.jsToCss\nexport const isAnimatable = functions.isAnimatable\nexport const popular = functions.popular\nexport const syntax = functions.syntax\nexport const validate = functions.validate\nexport const sanitize = functions.sanitize\n"],"names":["objectToString","Object","prototype","toString","lodash_isnumber","value","isObjectLike","call","funcProto","Function","objectProto","funcToString","hasOwnProperty","objectCtorString","getPrototype","func","transform","arg","overArg","getPrototypeOf","lodash_isplainobject","result","e","isHostObject","proto","Ctor","constructor","isArray","Array","lodash_isstring","createItem","data","prev","next","allocateCursor","node","cursor","cursors","releaseCursor","List","this","head","tail","updateCursors","prevOld","prevNew","nextOld","nextNew","getSize","size","fromArray","array","i","length","item","toArray","push","List$6","toJSON","isEmpty","first","last","each","fn","context","undefined","forEach","eachRight","forEachRight","nextUntil","start","prevUntil","some","map","appendData","filter","clear","copy","insert","prepend","prependData","append","before","Error","insertData","remove","pop","unshift","shift","prependList","list","insertList","appendList","replace","oldItem","newItemOrList","List_1","createCustomError","name","message","error","create","SyntaxError","errorStack","defineProperty","get","stack","require$$0","TAB_REPLACEMENT","sourceFragment","extraLines","processLines","end","lines","slice","line","idx","num","String","maxNumLength","join","source","split","column","startLine","Math","max","endLine","min","cutLeft","substr","match","OFFSET_CORRECTION","MAX_LINE_LENGTH","Boolean","_SyntaxError","offset","isNaN","parseError","TYPE","EOF","Ident","AtKeyword","Hash","BadString","Url","BadUrl","Delim","Number","Percentage","Dimension","WhiteSpace","CDO","CDC","Colon","Semicolon","Comma","LeftSquareBracket","RightSquareBracket","LeftParenthesis","RightParenthesis","LeftCurlyBracket","RightCurlyBracket","Comment","NAME","keys","reduce","key","_const","isDigit","code","isUppercaseLetter","isLowercaseLetter","isLetter","isNonAscii","isNameStart","isNonPrintable","isNewline","isWhiteSpace","isValidEscape","second","CATEGORY","charCodeCategory","Eof","Digit","NameStart","NonPrintable","charCodeDefinitions","isHexDigit","isName","isIdentifierStart","third","isNumberStart","isBOM","getCharCode","charCodeAt","getNewlineLength","cmpChar","testStr","referenceCode","findDecimalNumberEnd","consumeEscaped","maxOffset","utils","consumeName","consumeNumber","sign","consumeBadUrlRemnants","cmpStr","referenceStr","testCode","findWhiteSpaceStart","findWhiteSpaceEnd","require$$1","WHITESPACE","COMMENT","OFFSET_MASK","TYPE_SHIFT","TokenStream","offsetAndType","balance","reset","TokenStream$4","eof","tokenIndex","tokenType","tokenStart","firstCharOffset","tokenEnd","lookupType","tokenCount","lookupOffset","lookupValue","getTokenStart","getRawLength","startToken","mode","balanceEnd","loop","isBalanceEdge","pos","isDelim","getTokenValue","substring","getTokenLength","substrToCursor","skipWS","skipTokenCount","skip","skipSC","dump","type","chunk","TokenStream_1","noop","generate","decorate","forceBraces","compact","multiplier","combinator","terms","term","explicit","generateSequence","disallowEmpty","comma","opts","generateTypeOpts","generate_1","options","getLocation","point","loc","referenceName","reference","syntax","matchResult","details","tokens","longestMatch","mismatchOffset","entries","css","fromMatchResult","badNode","rawMessage","keywords","properties","isCustomProperty","str","getVendorPrefix","secondDashIndex","indexOf","names","keyword","toLowerCase","custom","vendor","freeze","basename","prefix","property","hack","vendorPrefix","SafeUint32Array","Uint32Array","adoptBuffer","buffer","constants","require$$2","require$$3","require$$4","tokenize","stream","sourceLength","consumeNumericToken","consumeIdentLikeToken","nameStartOffset","consumeUrlToken","consumeStringToken","endingCodePoint","nextCode","balanceCloseType","balanceStart","balancePrev","tokenizer","DELIM","IDENT","NUMBER","DIMENSION","HYPHENMINUS","DISALLOW_SIGN","token","getNextToken","checkInteger","valueOffset","disallowSign","consumeB","offset_","startsWith","hexSequence","allowDash","hexlen","withQuestionMarkSequence","consumed","anPlusB","urange","consumedHexLength","cssWideKeywords","calcFunctionNames","charCode","index","eqStr","actual","expected","eqStrAny","isPostfixIeHack","outOfRange","numEnd","consumeFunction","startIdx","calc","expectedTokenType","dimension","numberEnd","reverseSolidusOffset","unit","zero","generic","ident-token","function-token","at-keyword-token","hash-token","string-token","bad-string-token","url-token","bad-url-token","delim-token","number-token","percentage-token","dimension-token","whitespace-token","CDO-token","CDC-token","colon-token","semicolon-token","comma-token","[-token","]-token","(-token",")-token","{-token","}-token","string","ident","custom-ident","custom-property-name","hex-color","id-selector","an-plus-b","declaration-value","level","scan","any-value","angle","deg","grad","rad","turn","decibel","db","frequency","hz","khz","flex","fr","px","mm","cm","in","pt","pc","q","em","ex","ch","rem","vh","vw","vmin","vmax","vm","resolution","dpi","dpcm","dppx","x","semitones","st","time","s","ms","percentage","number","integer","-ms-legacy-expression","input","Tokenizer","Tokenizer$1","nextCharCode","nextNonWsCode","findWsEnd","substringToPos","eat","fromCharCode","peek","charAt","LEFTCURLYBRACKET","NAME_CHAR","createCharMap","test","COMBINATOR_PRECEDENCE"," ","&&","||","|","scanSpaces","scanWord","scanNumber","scanString","readMultiplierRange","maybeMultiplied","range","readMultiplier","maybeToken","readType","readTypeRange","regroupTerms","combinators","createGroup","sort","a","b","subgroupStart","splice","readImplicitGroup","prevToken","prevTokenPos","readKeywordOrFunction","readGroup","readProperty","parse","parse$2","parse_1","ensureFunction","walk","enter","leave","tokenStream","astToTokens","decorator","handlers","curNode","len","nodes","children","tmp","prepareTokens","nodesOffset","nodesIndex","currentNode","MATCH","MISMATCH","DISALLOW_EMPTY","createCondition","thenBranch","elseBranch","else","then","isFunctionType","isEnumCapatible","buildGroupMatchGraph","atLeastOneTermMatched","all","thenClause","newGroupTerm","buildMatchGraph","matchTerm","buildMultiplierMatchGraph","matchGraph","syntaxTree","ref","EXIT_REASON_MATCH","reverseList","areStringsEqualCaseInsensitive","isCommaContextStart","isCommaContextEnd","internalMatch","state","syntaxes","moveToNextToken","nextIndex","stateSnapshotFromSyntax","nextState","matchStack","syntaxStack","thenStack","pushThenStack","pushElseStack","elseStack","addTokenToMatch","syntaxStash","closeSyntax","iterationCount","exitReason","mask","matchFlag","lastTokenIndex","floor","syntaxDict","dictSyntax","keywordName","console","warn","reason","iterations","host","hostStack","getTrace","shouldPutToTrace","matched","hasMatch","matchNode","testNode","trace","isType","isProperty","isKeyword","getFirstMatchNode","getLastMatchNode","search","matchFragments","lexer","ast","fragments","findFragments","parent","isValidNumber","isFinite","isValidLocation","createNodeStructureChecker","fields","valid","fieldType","processStructure","nodeType","structure","docs","docsTypes","fieldTypes","check","SyntaxReferenceError","MatchError","require$$5","require$$7","matchAsTree","require$$8","require$$9","require$$10","getStructureFromConfig","config","cssWideKeywordsWithExpression","dumpMapSyntax","syntaxAsAst","buildMatchResult","matchSyntax","useCommon","valueHasVar","valueCommonSyntax","Lexer","atrules","types","addType_","addAtrule_","addProperty_","Lexer$1","checkStructure","collectWarning","warns","createDescriptor","descriptor","prelude","descriptors","res","matchAtrulePrelude","atruleName","atrule","atrulePreludeSyntax","getAtrulePrelude","matchAtruleDescriptor","descriptorName","atruleEntry","atruleDescriptorSyntax","matchDeclaration","matchProperty","propertyName","propertySyntax","getProperty","matchType","typeName","typeSyntax","getType","findValueFragments","findDeclarationValueFragments","declaration","findAllFragments","visit","apply","bind","getAtruleDescriptor","declarators","validate","broken","brokenMap","brokenTypes","brokenProperties","pretty","JSON","stringify","Lexer_1","definitionSyntax","OffsetToLocation","columns","linesAndColumnsComputed","OffsetToLocation$1","setSource","startOffset","startColumn","ensureLinesAndColumnsComputed","computeLinesAndColumns","filename","getLocationRange","OffsetToLocation_1","require$$6","sequence","recognizer","createList","child","space","ignoreWS","ignoreWSAfter","scanner","getNode","FUNCTION","URL","HASH","PERCENTAGE","createParseContext","processChildren","delimeter","invokeForType","getWalkersFromStructure","walkers","walker","nullable","walkContext","createTypeIterator","reverse","contextName","useContext","prevContextValue","field","createFastTraveralMap","iterators","Atrule","StyleSheet","Rule","Block","Declaration","DeclarationList","shape","parseContext","scope","pseudo","isObject","assign","extend","dest","src","mix","innerShape","k","createParser","parser","locationMap","needPositions","onParseError","onParseErrorThrow","parseAtrulePrelude","parseRulePrelude","parseValue","parseCustomProperty","readSequence","createSingleNodeList","getFirstListNode","getLastListNode","parseWithFallback","consumer","fallback","fallbackNode","lookupNonWSType","consume","consumeFunctionName","getLocationFromList","location","parserConfig","processConfig","positions","createGenerator","processNode","createConvertor","fromPlainObject","toPlainObject","createWalker","getTypesFromConfig","iteratorsNatural","iteratorsReverse","fastTraversalIteratorsNatural","fastTraversalIteratorsReverse","root","stylesheet","atrulePrelude","rule","selector","block","function","walkNode","find","found","findLast","findAll","clone","require$$11","createSyntax","convert","createLexer","fork","extension","base","mdnAtrules","mdnProperties","patch","buildDictionary","dict","patchDict","trim","preprocessAtrules","PLUSSIGN","N","checkTokenIsInteger","expectCharCode","msg","AnPlusB","getOffsetExcludeWS","Raw","excludeWhiteSpace","endOffset","default","leftCurlyBracket","leftCurlyBracketOrSemicolon","exclamationMarkOrSemicolon","semicolonIncluded","rawMode","ATKEYWORD","SEMICOLON","RIGHTCURLYBRACKET","consumeRaw","isDeclarationBlockAtrule","nameLowerCase","AtrulePrelude","STRING","COLON","LEFTSQUAREBRACKET","RIGHTSQUAREBRACKET","getAttributeName","expectIdent","checkColon","getOperator","AttributeSelector","matcher","flags","Identifier","flagsPrefix","consumeRule","consumeRawDeclaration","consumeDeclaration","isDeclaration","Brackets","CDC_1","CDO_1","ClassSelector","Combinator","consumeValueRaw","consumeCustomPropertyRaw","consumeValue","startValueToken","Value","important","customProperty","getImportant","RIGHTPARENTHESIS","_Function","HexColor","IdSelector","LEFTPARENTHESIS","MediaFeature","Ratio","MediaQuery","COMMA","MediaQueryList","relative","_Number","Operator","Parentheses","PseudoClassSelector","PseudoElementSelector","left","right","consumePrelude","SelectorList","Selector","_String","eatIdentifierOrAsterisk","TypeSelector","eatHexSequence","eatQuestionMarkSequence","count","scanUnicodeRange","hexLength","UnicodeRange","rawStart","rawEnd","SPACE","require$$12","require$$13","require$$14","require$$15","require$$16","require$$17","require$$18","require$$19","require$$20","Nth","nth","allowOfClause","query","require$$22","require$$23","require$$24","require$$25","require$$26","require$$27","require$$28","require$$29","require$$30","require$$32","require$$33","require$$34","require$$35","require$$36","require$$37","_default","element","-moz-element","expression","var","_import","parentheses","font-face","import","media","page","supports","selectorList","module","exports","nthWithOfClause","mediaQueryList","mediaQuery","declarationList","dir","has","lang","matches","not","nth-child","nth-last-child","nth-last-of-type","nth-of-type","slotted","arguments","merge","nonAnimatable","includes","isAnimatable","returnCssProperty","prop","cssToJs","webAnimationsAPI","letter","toUpperCase","jsToCss","main","links","order","getSyntaxes","propertyMatches","syntaxMatches","syntaxSyntax","mdnSyntaxes","patchSyntax","obj","returnError","errors","isPlainObject","isString","isNumber","propertyFormat","format","functions","popular","notInPopular","popularIndex","member","sanitize","sanitized","object","arrays","val","propertiesCSS","propertiesJS"],"mappings":"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"}