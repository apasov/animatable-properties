{"version":3,"file":"animatable.js","sources":["../node_modules/lodash.isnumber/index.js","../node_modules/lodash.isplainobject/index.js","../node_modules/lodash.isstring/index.js","../node_modules/css-tree-animatable/lib/common/List.js","../node_modules/css-tree-animatable/lib/utils/createCustomError.js","../node_modules/css-tree-animatable/lib/common/SyntaxError.js","../node_modules/css-tree-animatable/lib/tokenizer/const.js","../node_modules/css-tree-animatable/lib/tokenizer/char-code-definitions.js","../node_modules/css-tree-animatable/lib/tokenizer/utils.js","../node_modules/css-tree-animatable/lib/common/TokenStream.js","../node_modules/css-tree-animatable/lib/definition-syntax/generate.js","../node_modules/css-tree-animatable/lib/lexer/error.js","../node_modules/css-tree-animatable/lib/utils/names.js","../node_modules/css-tree-animatable/lib/common/adopt-buffer.js","../node_modules/css-tree-animatable/lib/tokenizer/index.js","../node_modules/css-tree-animatable/lib/lexer/generic-an-plus-b.js","../node_modules/css-tree-animatable/lib/lexer/generic-urange.js","../node_modules/css-tree-animatable/lib/lexer/generic.js","../node_modules/css-tree-animatable/lib/definition-syntax/SyntaxError.js","../node_modules/css-tree-animatable/lib/definition-syntax/tokenizer.js","../node_modules/css-tree-animatable/lib/definition-syntax/parse.js","../node_modules/css-tree-animatable/lib/definition-syntax/walk.js","../node_modules/css-tree-animatable/lib/lexer/prepare-tokens.js","../node_modules/css-tree-animatable/lib/lexer/match-graph.js","../node_modules/css-tree-animatable/lib/lexer/match.js","../node_modules/css-tree-animatable/lib/lexer/trace.js","../node_modules/css-tree-animatable/lib/lexer/search.js","../node_modules/css-tree-animatable/lib/lexer/structure.js","../node_modules/css-tree-animatable/lib/lexer/Lexer.js","../node_modules/css-tree-animatable/lib/definition-syntax/index.js","../node_modules/css-tree-animatable/lib/common/OffsetToLocation.js","../node_modules/css-tree-animatable/lib/parser/sequence.js","../node_modules/css-tree-animatable/lib/parser/create.js","../node_modules/css-tree-animatable/lib/generator/create.js","../node_modules/css-tree-animatable/lib/walker/create.js","../node_modules/css-tree-animatable/lib/utils/clone.js","../node_modules/css-tree-animatable/lib/syntax/config/mix.js","../node_modules/css-tree-animatable/lib/syntax/create.js","../node_modules/css-tree-animatable/lib/convertor/create.js","../node_modules/css-tree-animatable/data/index.js","../node_modules/css-tree-animatable/lib/syntax/node/AnPlusB.js","../node_modules/css-tree-animatable/lib/syntax/node/Raw.js","../node_modules/css-tree-animatable/lib/syntax/node/Atrule.js","../node_modules/css-tree-animatable/lib/syntax/node/AtrulePrelude.js","../node_modules/css-tree-animatable/lib/syntax/node/AttributeSelector.js","../node_modules/css-tree-animatable/lib/syntax/node/Block.js","../node_modules/css-tree-animatable/lib/syntax/node/Brackets.js","../node_modules/css-tree-animatable/lib/syntax/node/CDC.js","../node_modules/css-tree-animatable/lib/syntax/node/CDO.js","../node_modules/css-tree-animatable/lib/syntax/node/ClassSelector.js","../node_modules/css-tree-animatable/lib/syntax/node/Combinator.js","../node_modules/css-tree-animatable/lib/syntax/node/Comment.js","../node_modules/css-tree-animatable/lib/syntax/node/Declaration.js","../node_modules/css-tree-animatable/lib/syntax/node/DeclarationList.js","../node_modules/css-tree-animatable/lib/syntax/node/Dimension.js","../node_modules/css-tree-animatable/lib/syntax/node/Function.js","../node_modules/css-tree-animatable/lib/syntax/node/HexColor.js","../node_modules/css-tree-animatable/lib/syntax/node/Identifier.js","../node_modules/css-tree-animatable/lib/syntax/node/IdSelector.js","../node_modules/css-tree-animatable/lib/syntax/node/MediaFeature.js","../node_modules/css-tree-animatable/lib/syntax/node/MediaQuery.js","../node_modules/css-tree-animatable/lib/syntax/node/MediaQueryList.js","../node_modules/css-tree-animatable/lib/syntax/node/Number.js","../node_modules/css-tree-animatable/lib/syntax/node/Operator.js","../node_modules/css-tree-animatable/lib/syntax/node/Parentheses.js","../node_modules/css-tree-animatable/lib/syntax/node/Percentage.js","../node_modules/css-tree-animatable/lib/syntax/node/PseudoClassSelector.js","../node_modules/css-tree-animatable/lib/syntax/node/PseudoElementSelector.js","../node_modules/css-tree-animatable/lib/syntax/node/Ratio.js","../node_modules/css-tree-animatable/lib/syntax/node/Rule.js","../node_modules/css-tree-animatable/lib/syntax/node/SelectorList.js","../node_modules/css-tree-animatable/lib/syntax/node/String.js","../node_modules/css-tree-animatable/lib/syntax/node/StyleSheet.js","../node_modules/css-tree-animatable/lib/syntax/node/TypeSelector.js","../node_modules/css-tree-animatable/lib/syntax/node/UnicodeRange.js","../node_modules/css-tree-animatable/lib/syntax/node/Url.js","../node_modules/css-tree-animatable/lib/syntax/node/WhiteSpace.js","../node_modules/css-tree-animatable/lib/syntax/node/index.js","../node_modules/css-tree-animatable/lib/syntax/node/Nth.js","../node_modules/css-tree-animatable/lib/syntax/node/Selector.js","../node_modules/css-tree-animatable/lib/syntax/node/Value.js","../node_modules/css-tree-animatable/lib/syntax/config/lexer.js","../node_modules/css-tree-animatable/lib/syntax/scope/default.js","../node_modules/css-tree-animatable/lib/syntax/scope/atrulePrelude.js","../node_modules/css-tree-animatable/lib/syntax/scope/selector.js","../node_modules/css-tree-animatable/lib/syntax/function/element.js","../node_modules/css-tree-animatable/lib/syntax/function/var.js","../node_modules/css-tree-animatable/lib/syntax/scope/index.js","../node_modules/css-tree-animatable/lib/syntax/scope/value.js","../node_modules/css-tree-animatable/lib/syntax/function/expression.js","../node_modules/css-tree-animatable/lib/syntax/atrule/import.js","../node_modules/css-tree-animatable/lib/syntax/atrule/supports.js","../node_modules/css-tree-animatable/lib/syntax/pseudo/common/selectorList.js","../node_modules/css-tree-animatable/lib/syntax/pseudo/common/nthWithOfClause.js","../node_modules/css-tree-animatable/lib/syntax/pseudo/common/nth.js","../node_modules/css-tree-animatable/lib/syntax/index.js","../node_modules/css-tree-animatable/lib/syntax/config/parser.js","../node_modules/css-tree-animatable/lib/syntax/atrule/index.js","../node_modules/css-tree-animatable/lib/syntax/atrule/font-face.js","../node_modules/css-tree-animatable/lib/syntax/atrule/media.js","../node_modules/css-tree-animatable/lib/syntax/atrule/page.js","../node_modules/css-tree-animatable/lib/syntax/pseudo/index.js","../node_modules/css-tree-animatable/lib/syntax/pseudo/dir.js","../node_modules/css-tree-animatable/lib/syntax/pseudo/has.js","../node_modules/css-tree-animatable/lib/syntax/pseudo/lang.js","../node_modules/css-tree-animatable/lib/syntax/pseudo/matches.js","../node_modules/css-tree-animatable/lib/syntax/pseudo/not.js","../node_modules/css-tree-animatable/lib/syntax/pseudo/nth-child.js","../node_modules/css-tree-animatable/lib/syntax/pseudo/nth-last-child.js","../node_modules/css-tree-animatable/lib/syntax/pseudo/nth-last-of-type.js","../node_modules/css-tree-animatable/lib/syntax/pseudo/nth-of-type.js","../node_modules/css-tree-animatable/lib/syntax/pseudo/slotted.js","../node_modules/css-tree-animatable/lib/syntax/config/walker.js","../src/functions.js","../src/arrays.js","../src/index.js"],"sourcesContent":["/**\n * lodash 3.0.3 (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright 2012-2016 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2016 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/** `Object#toString` result references. */\nvar numberTag = '[object Number]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Number` primitive or object.\n *\n * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are classified\n * as numbers, use the `_.isFinite` method.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isNumber(3);\n * // => true\n *\n * _.isNumber(Number.MIN_VALUE);\n * // => true\n *\n * _.isNumber(Infinity);\n * // => true\n *\n * _.isNumber('3');\n * // => false\n */\nfunction isNumber(value) {\n  return typeof value == 'number' ||\n    (isObjectLike(value) && objectToString.call(value) == numberTag);\n}\n\nmodule.exports = isNumber;\n","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** `Object#toString` result references. */\nvar objectTag = '[object Object]';\n\n/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  var result = false;\n  if (value != null && typeof value.toString != 'function') {\n    try {\n      result = !!(value + '');\n    } catch (e) {}\n  }\n  return result;\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar getPrototype = overArg(Object.getPrototypeOf, Object);\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!isObjectLike(value) ||\n      objectToString.call(value) != objectTag || isHostObject(value)) {\n    return false;\n  }\n  var proto = getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return (typeof Ctor == 'function' &&\n    Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString);\n}\n\nmodule.exports = isPlainObject;\n","/**\n * lodash 4.0.1 (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright 2012-2016 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2016 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/** `Object#toString` result references. */\nvar stringTag = '[object String]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @type Function\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `String` primitive or object.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isString('abc');\n * // => true\n *\n * _.isString(1);\n * // => false\n */\nfunction isString(value) {\n  return typeof value == 'string' ||\n    (!isArray(value) && isObjectLike(value) && objectToString.call(value) == stringTag);\n}\n\nmodule.exports = isString;\n","//\r\n//                              list\r\n//                            ┌──────┐\r\n//             ┌──────────────┼─head │\r\n//             │              │ tail─┼──────────────┐\r\n//             │              └──────┘              │\r\n//             ▼                                    ▼\r\n//            item        item        item        item\r\n//          ┌──────┐    ┌──────┐    ┌──────┐    ┌──────┐\r\n//  null ◀──┼─prev │◀───┼─prev │◀───┼─prev │◀───┼─prev │\r\n//          │ next─┼───▶│ next─┼───▶│ next─┼───▶│ next─┼──▶ null\r\n//          ├──────┤    ├──────┤    ├──────┤    ├──────┤\r\n//          │ data │    │ data │    │ data │    │ data │\r\n//          └──────┘    └──────┘    └──────┘    └──────┘\r\n//\r\n\r\nfunction createItem(data) {\r\n    return {\r\n        prev: null,\r\n        next: null,\r\n        data: data\r\n    };\r\n}\r\n\r\nfunction allocateCursor(node, prev, next) {\r\n    var cursor;\r\n\r\n    if (cursors !== null) {\r\n        cursor = cursors;\r\n        cursors = cursors.cursor;\r\n        cursor.prev = prev;\r\n        cursor.next = next;\r\n        cursor.cursor = node.cursor;\r\n    } else {\r\n        cursor = {\r\n            prev: prev,\r\n            next: next,\r\n            cursor: node.cursor\r\n        };\r\n    }\r\n\r\n    node.cursor = cursor;\r\n\r\n    return cursor;\r\n}\r\n\r\nfunction releaseCursor(node) {\r\n    var cursor = node.cursor;\r\n\r\n    node.cursor = cursor.cursor;\r\n    cursor.prev = null;\r\n    cursor.next = null;\r\n    cursor.cursor = cursors;\r\n    cursors = cursor;\r\n}\r\n\r\nvar cursors = null;\r\nvar List = function() {\r\n    this.cursor = null;\r\n    this.head = null;\r\n    this.tail = null;\r\n};\r\n\r\nList.createItem = createItem;\r\nList.prototype.createItem = createItem;\r\n\r\nList.prototype.updateCursors = function(prevOld, prevNew, nextOld, nextNew) {\r\n    var cursor = this.cursor;\r\n\r\n    while (cursor !== null) {\r\n        if (cursor.prev === prevOld) {\r\n            cursor.prev = prevNew;\r\n        }\r\n\r\n        if (cursor.next === nextOld) {\r\n            cursor.next = nextNew;\r\n        }\r\n\r\n        cursor = cursor.cursor;\r\n    }\r\n};\r\n\r\nList.prototype.getSize = function() {\r\n    var size = 0;\r\n    var cursor = this.head;\r\n\r\n    while (cursor) {\r\n        size++;\r\n        cursor = cursor.next;\r\n    }\r\n\r\n    return size;\r\n};\r\n\r\nList.prototype.fromArray = function(array) {\r\n    var cursor = null;\r\n\r\n    this.head = null;\r\n\r\n    for (var i = 0; i < array.length; i++) {\r\n        var item = createItem(array[i]);\r\n\r\n        if (cursor !== null) {\r\n            cursor.next = item;\r\n        } else {\r\n            this.head = item;\r\n        }\r\n\r\n        item.prev = cursor;\r\n        cursor = item;\r\n    }\r\n\r\n    this.tail = cursor;\r\n\r\n    return this;\r\n};\r\n\r\nList.prototype.toArray = function() {\r\n    var cursor = this.head;\r\n    var result = [];\r\n\r\n    while (cursor) {\r\n        result.push(cursor.data);\r\n        cursor = cursor.next;\r\n    }\r\n\r\n    return result;\r\n};\r\n\r\nList.prototype.toJSON = List.prototype.toArray;\r\n\r\nList.prototype.isEmpty = function() {\r\n    return this.head === null;\r\n};\r\n\r\nList.prototype.first = function() {\r\n    return this.head && this.head.data;\r\n};\r\n\r\nList.prototype.last = function() {\r\n    return this.tail && this.tail.data;\r\n};\r\n\r\nList.prototype.each = function(fn, context) {\r\n    var item;\r\n\r\n    if (context === undefined) {\r\n        context = this;\r\n    }\r\n\r\n    // push cursor\r\n    var cursor = allocateCursor(this, null, this.head);\r\n\r\n    while (cursor.next !== null) {\r\n        item = cursor.next;\r\n        cursor.next = item.next;\r\n\r\n        fn.call(context, item.data, item, this);\r\n    }\r\n\r\n    // pop cursor\r\n    releaseCursor(this);\r\n};\r\n\r\nList.prototype.forEach = List.prototype.each;\r\n\r\nList.prototype.eachRight = function(fn, context) {\r\n    var item;\r\n\r\n    if (context === undefined) {\r\n        context = this;\r\n    }\r\n\r\n    // push cursor\r\n    var cursor = allocateCursor(this, this.tail, null);\r\n\r\n    while (cursor.prev !== null) {\r\n        item = cursor.prev;\r\n        cursor.prev = item.prev;\r\n\r\n        fn.call(context, item.data, item, this);\r\n    }\r\n\r\n    // pop cursor\r\n    releaseCursor(this);\r\n};\r\n\r\nList.prototype.forEachRight = List.prototype.eachRight;\r\n\r\nList.prototype.nextUntil = function(start, fn, context) {\r\n    if (start === null) {\r\n        return;\r\n    }\r\n\r\n    var item;\r\n\r\n    if (context === undefined) {\r\n        context = this;\r\n    }\r\n\r\n    // push cursor\r\n    var cursor = allocateCursor(this, null, start);\r\n\r\n    while (cursor.next !== null) {\r\n        item = cursor.next;\r\n        cursor.next = item.next;\r\n\r\n        if (fn.call(context, item.data, item, this)) {\r\n            break;\r\n        }\r\n    }\r\n\r\n    // pop cursor\r\n    releaseCursor(this);\r\n};\r\n\r\nList.prototype.prevUntil = function(start, fn, context) {\r\n    if (start === null) {\r\n        return;\r\n    }\r\n\r\n    var item;\r\n\r\n    if (context === undefined) {\r\n        context = this;\r\n    }\r\n\r\n    // push cursor\r\n    var cursor = allocateCursor(this, start, null);\r\n\r\n    while (cursor.prev !== null) {\r\n        item = cursor.prev;\r\n        cursor.prev = item.prev;\r\n\r\n        if (fn.call(context, item.data, item, this)) {\r\n            break;\r\n        }\r\n    }\r\n\r\n    // pop cursor\r\n    releaseCursor(this);\r\n};\r\n\r\nList.prototype.some = function(fn, context) {\r\n    var cursor = this.head;\r\n\r\n    if (context === undefined) {\r\n        context = this;\r\n    }\r\n\r\n    while (cursor !== null) {\r\n        if (fn.call(context, cursor.data, cursor, this)) {\r\n            return true;\r\n        }\r\n\r\n        cursor = cursor.next;\r\n    }\r\n\r\n    return false;\r\n};\r\n\r\nList.prototype.map = function(fn, context) {\r\n    var result = new List();\r\n    var cursor = this.head;\r\n\r\n    if (context === undefined) {\r\n        context = this;\r\n    }\r\n\r\n    while (cursor !== null) {\r\n        result.appendData(fn.call(context, cursor.data, cursor, this));\r\n        cursor = cursor.next;\r\n    }\r\n\r\n    return result;\r\n};\r\n\r\nList.prototype.filter = function(fn, context) {\r\n    var result = new List();\r\n    var cursor = this.head;\r\n\r\n    if (context === undefined) {\r\n        context = this;\r\n    }\r\n\r\n    while (cursor !== null) {\r\n        if (fn.call(context, cursor.data, cursor, this)) {\r\n            result.appendData(cursor.data);\r\n        }\r\n        cursor = cursor.next;\r\n    }\r\n\r\n    return result;\r\n};\r\n\r\nList.prototype.clear = function() {\r\n    this.head = null;\r\n    this.tail = null;\r\n};\r\n\r\nList.prototype.copy = function() {\r\n    var result = new List();\r\n    var cursor = this.head;\r\n\r\n    while (cursor !== null) {\r\n        result.insert(createItem(cursor.data));\r\n        cursor = cursor.next;\r\n    }\r\n\r\n    return result;\r\n};\r\n\r\nList.prototype.prepend = function(item) {\r\n    //      head\r\n    //    ^\r\n    // item\r\n    this.updateCursors(null, item, this.head, item);\r\n\r\n    // insert to the beginning of the list\r\n    if (this.head !== null) {\r\n        // new item <- first item\r\n        this.head.prev = item;\r\n\r\n        // new item -> first item\r\n        item.next = this.head;\r\n    } else {\r\n        // if list has no head, then it also has no tail\r\n        // in this case tail points to the new item\r\n        this.tail = item;\r\n    }\r\n\r\n    // head always points to new item\r\n    this.head = item;\r\n\r\n    return this;\r\n};\r\n\r\nList.prototype.prependData = function(data) {\r\n    return this.prepend(createItem(data));\r\n};\r\n\r\nList.prototype.append = function(item) {\r\n    return this.insert(item);\r\n};\r\n\r\nList.prototype.appendData = function(data) {\r\n    return this.insert(createItem(data));\r\n};\r\n\r\nList.prototype.insert = function(item, before) {\r\n    if (before !== undefined && before !== null) {\r\n        // prev   before\r\n        //      ^\r\n        //     item\r\n        this.updateCursors(before.prev, item, before, item);\r\n\r\n        if (before.prev === null) {\r\n            // insert to the beginning of list\r\n            if (this.head !== before) {\r\n                throw new Error('before doesn\\'t belong to list');\r\n            }\r\n\r\n            // since head points to before therefore list doesn't empty\r\n            // no need to check tail\r\n            this.head = item;\r\n            before.prev = item;\r\n            item.next = before;\r\n\r\n            this.updateCursors(null, item);\r\n        } else {\r\n\r\n            // insert between two items\r\n            before.prev.next = item;\r\n            item.prev = before.prev;\r\n\r\n            before.prev = item;\r\n            item.next = before;\r\n        }\r\n    } else {\r\n        // tail\r\n        //      ^\r\n        //      item\r\n        this.updateCursors(this.tail, item, null, item);\r\n\r\n        // insert to the ending of the list\r\n        if (this.tail !== null) {\r\n            // last item -> new item\r\n            this.tail.next = item;\r\n\r\n            // last item <- new item\r\n            item.prev = this.tail;\r\n        } else {\r\n            // if list has no tail, then it also has no head\r\n            // in this case head points to new item\r\n            this.head = item;\r\n        }\r\n\r\n        // tail always points to new item\r\n        this.tail = item;\r\n    }\r\n\r\n    return this;\r\n};\r\n\r\nList.prototype.insertData = function(data, before) {\r\n    return this.insert(createItem(data), before);\r\n};\r\n\r\nList.prototype.remove = function(item) {\r\n    //      item\r\n    //       ^\r\n    // prev     next\r\n    this.updateCursors(item, item.prev, item, item.next);\r\n\r\n    if (item.prev !== null) {\r\n        item.prev.next = item.next;\r\n    } else {\r\n        if (this.head !== item) {\r\n            throw new Error('item doesn\\'t belong to list');\r\n        }\r\n\r\n        this.head = item.next;\r\n    }\r\n\r\n    if (item.next !== null) {\r\n        item.next.prev = item.prev;\r\n    } else {\r\n        if (this.tail !== item) {\r\n            throw new Error('item doesn\\'t belong to list');\r\n        }\r\n\r\n        this.tail = item.prev;\r\n    }\r\n\r\n    item.prev = null;\r\n    item.next = null;\r\n\r\n    return item;\r\n};\r\n\r\nList.prototype.push = function(data) {\r\n    this.insert(createItem(data));\r\n};\r\n\r\nList.prototype.pop = function() {\r\n    if (this.tail !== null) {\r\n        return this.remove(this.tail);\r\n    }\r\n};\r\n\r\nList.prototype.unshift = function(data) {\r\n    this.prepend(createItem(data));\r\n};\r\n\r\nList.prototype.shift = function() {\r\n    if (this.head !== null) {\r\n        return this.remove(this.head);\r\n    }\r\n};\r\n\r\nList.prototype.prependList = function(list) {\r\n    return this.insertList(list, this.head);\r\n};\r\n\r\nList.prototype.appendList = function(list) {\r\n    return this.insertList(list);\r\n};\r\n\r\nList.prototype.insertList = function(list, before) {\r\n    // ignore empty lists\r\n    if (list.head === null) {\r\n        return this;\r\n    }\r\n\r\n    if (before !== undefined && before !== null) {\r\n        this.updateCursors(before.prev, list.tail, before, list.head);\r\n\r\n        // insert in the middle of dist list\r\n        if (before.prev !== null) {\r\n            // before.prev <-> list.head\r\n            before.prev.next = list.head;\r\n            list.head.prev = before.prev;\r\n        } else {\r\n            this.head = list.head;\r\n        }\r\n\r\n        before.prev = list.tail;\r\n        list.tail.next = before;\r\n    } else {\r\n        this.updateCursors(this.tail, list.tail, null, list.head);\r\n\r\n        // insert to end of the list\r\n        if (this.tail !== null) {\r\n            // if destination list has a tail, then it also has a head,\r\n            // but head doesn't change\r\n\r\n            // dest tail -> source head\r\n            this.tail.next = list.head;\r\n\r\n            // dest tail <- source head\r\n            list.head.prev = this.tail;\r\n        } else {\r\n            // if list has no a tail, then it also has no a head\r\n            // in this case points head to new item\r\n            this.head = list.head;\r\n        }\r\n\r\n        // tail always start point to new item\r\n        this.tail = list.tail;\r\n    }\r\n\r\n    list.head = null;\r\n    list.tail = null;\r\n\r\n    return this;\r\n};\r\n\r\nList.prototype.replace = function(oldItem, newItemOrList) {\r\n    if ('head' in newItemOrList) {\r\n        this.insertList(newItemOrList, oldItem);\r\n    } else {\r\n        this.insert(newItemOrList, oldItem);\r\n    }\r\n\r\n    this.remove(oldItem);\r\n};\r\n\r\nmodule.exports = List;\r\n","module.exports = function createCustomError(name, message) {\r\n    // use Object.create(), because some VMs prevent setting line/column otherwise\r\n    // (iOS Safari 10 even throws an exception)\r\n    var error = Object.create(SyntaxError.prototype);\r\n    var errorStack = new Error();\r\n\r\n    error.name = name;\r\n    error.message = message;\r\n\r\n    Object.defineProperty(error, 'stack', {\r\n        get: function() {\r\n            return (errorStack.stack || '').replace(/^(.+\\n){1,3}/, name + ': ' + message + '\\n');\r\n        }\r\n    });\r\n\r\n    return error;\r\n};\r\n","var createCustomError = require('../utils/createCustomError');\r\nvar MAX_LINE_LENGTH = 100;\r\nvar OFFSET_CORRECTION = 60;\r\nvar TAB_REPLACEMENT = '    ';\r\n\r\nfunction sourceFragment(error, extraLines) {\r\n    function processLines(start, end) {\r\n        return lines.slice(start, end).map(function(line, idx) {\r\n            var num = String(start + idx + 1);\r\n\r\n            while (num.length < maxNumLength) {\r\n                num = ' ' + num;\r\n            }\r\n\r\n            return num + ' |' + line;\r\n        }).join('\\n');\r\n    }\r\n\r\n    var lines = error.source.split(/\\r\\n?|\\n|\\f/);\r\n    var line = error.line;\r\n    var column = error.column;\r\n    var startLine = Math.max(1, line - extraLines) - 1;\r\n    var endLine = Math.min(line + extraLines, lines.length + 1);\r\n    var maxNumLength = Math.max(4, String(endLine).length) + 1;\r\n    var cutLeft = 0;\r\n\r\n    // column correction according to replaced tab before column\r\n    column += (TAB_REPLACEMENT.length - 1) * (lines[line - 1].substr(0, column - 1).match(/\\t/g) || []).length;\r\n\r\n    if (column > MAX_LINE_LENGTH) {\r\n        cutLeft = column - OFFSET_CORRECTION + 3;\r\n        column = OFFSET_CORRECTION - 2;\r\n    }\r\n\r\n    for (var i = startLine; i <= endLine; i++) {\r\n        if (i >= 0 && i < lines.length) {\r\n            lines[i] = lines[i].replace(/\\t/g, TAB_REPLACEMENT);\r\n            lines[i] =\r\n                (cutLeft > 0 && lines[i].length > cutLeft ? '\\u2026' : '') +\r\n                lines[i].substr(cutLeft, MAX_LINE_LENGTH - 2) +\r\n                (lines[i].length > cutLeft + MAX_LINE_LENGTH - 1 ? '\\u2026' : '');\r\n        }\r\n    }\r\n\r\n    return [\r\n        processLines(startLine, line),\r\n        new Array(column + maxNumLength + 2).join('-') + '^',\r\n        processLines(line, endLine)\r\n    ].filter(Boolean).join('\\n');\r\n}\r\n\r\nvar SyntaxError = function(message, source, offset, line, column) {\r\n    var error = createCustomError('SyntaxError', message);\r\n\r\n    error.source = source;\r\n    error.offset = offset;\r\n    error.line = line;\r\n    error.column = column;\r\n\r\n    error.sourceFragment = function(extraLines) {\r\n        return sourceFragment(error, isNaN(extraLines) ? 0 : extraLines);\r\n    };\r\n    Object.defineProperty(error, 'formattedMessage', {\r\n        get: function() {\r\n            return (\r\n                'Parse error: ' + error.message + '\\n' +\r\n                sourceFragment(error, 2)\r\n            );\r\n        }\r\n    });\r\n\r\n    // for backward capability\r\n    error.parseError = {\r\n        offset: offset,\r\n        line: line,\r\n        column: column\r\n    };\r\n\r\n    return error;\r\n};\r\n\r\nmodule.exports = SyntaxError;\r\n","// CSS Syntax Module Level 3\r\n// https://www.w3.org/TR/css-syntax-3/\r\nvar TYPE = {\r\n    EOF: 0,                 // <EOF-token>\r\n    Ident: 1,               // <ident-token>\r\n    Function: 2,            // <function-token>\r\n    AtKeyword: 3,           // <at-keyword-token>\r\n    Hash: 4,                // <hash-token>\r\n    String: 5,              // <string-token>\r\n    BadString: 6,           // <bad-string-token>\r\n    Url: 7,                 // <url-token>\r\n    BadUrl: 8,              // <bad-url-token>\r\n    Delim: 9,               // <delim-token>\r\n    Number: 10,             // <number-token>\r\n    Percentage: 11,         // <percentage-token>\r\n    Dimension: 12,          // <dimension-token>\r\n    WhiteSpace: 13,         // <whitespace-token>\r\n    CDO: 14,                // <CDO-token>\r\n    CDC: 15,                // <CDC-token>\r\n    Colon: 16,              // <colon-token>     :\r\n    Semicolon: 17,          // <semicolon-token> ;\r\n    Comma: 18,              // <comma-token>     ,\r\n    LeftSquareBracket: 19,  // <[-token>\r\n    RightSquareBracket: 20, // <]-token>\r\n    LeftParenthesis: 21,    // <(-token>\r\n    RightParenthesis: 22,   // <)-token>\r\n    LeftCurlyBracket: 23,   // <{-token>\r\n    RightCurlyBracket: 24,  // <}-token>\r\n    Comment: 25\r\n};\r\n\r\nvar NAME = Object.keys(TYPE).reduce(function(result, key) {\r\n    result[TYPE[key]] = key;\r\n    return result;\r\n}, {});\r\n\r\nmodule.exports = {\r\n    TYPE: TYPE,\r\n    NAME: NAME\r\n};\r\n","var EOF = 0;\r\n\r\n// https://drafts.csswg.org/css-syntax-3/\r\n// § 4.2. Definitions\r\n\r\n// digit\r\n// A code point between U+0030 DIGIT ZERO (0) and U+0039 DIGIT NINE (9).\r\nfunction isDigit(code) {\r\n    return code >= 0x0030 && code <= 0x0039;\r\n}\r\n\r\n// hex digit\r\n// A digit, or a code point between U+0041 LATIN CAPITAL LETTER A (A) and U+0046 LATIN CAPITAL LETTER F (F),\r\n// or a code point between U+0061 LATIN SMALL LETTER A (a) and U+0066 LATIN SMALL LETTER F (f).\r\nfunction isHexDigit(code) {\r\n    return (\r\n        isDigit(code) || // 0 .. 9\r\n        (code >= 0x0041 && code <= 0x0046) || // A .. F\r\n        (code >= 0x0061 && code <= 0x0066)    // a .. f\r\n    );\r\n}\r\n\r\n// uppercase letter\r\n// A code point between U+0041 LATIN CAPITAL LETTER A (A) and U+005A LATIN CAPITAL LETTER Z (Z).\r\nfunction isUppercaseLetter(code) {\r\n    return code >= 0x0041 && code <= 0x005A;\r\n}\r\n\r\n// lowercase letter\r\n// A code point between U+0061 LATIN SMALL LETTER A (a) and U+007A LATIN SMALL LETTER Z (z).\r\nfunction isLowercaseLetter(code) {\r\n    return code >= 0x0061 && code <= 0x007A;\r\n}\r\n\r\n// letter\r\n// An uppercase letter or a lowercase letter.\r\nfunction isLetter(code) {\r\n    return isUppercaseLetter(code) || isLowercaseLetter(code);\r\n}\r\n\r\n// non-ASCII code point\r\n// A code point with a value equal to or greater than U+0080 <control>.\r\nfunction isNonAscii(code) {\r\n    return code >= 0x0080;\r\n}\r\n\r\n// name-start code point\r\n// A letter, a non-ASCII code point, or U+005F LOW LINE (_).\r\nfunction isNameStart(code) {\r\n    return isLetter(code) || isNonAscii(code) || code === 0x005F;\r\n}\r\n\r\n// name code point\r\n// A name-start code point, a digit, or U+002D HYPHEN-MINUS (-).\r\nfunction isName(code) {\r\n    return isNameStart(code) || isDigit(code) || code === 0x002D;\r\n}\r\n\r\n// non-printable code point\r\n// A code point between U+0000 NULL and U+0008 BACKSPACE, or U+000B LINE TABULATION,\r\n// or a code point between U+000E SHIFT OUT and U+001F INFORMATION SEPARATOR ONE, or U+007F DELETE.\r\nfunction isNonPrintable(code) {\r\n    return (\r\n        (code >= 0x0000 && code <= 0x0008) ||\r\n        (code === 0x000B) ||\r\n        (code >= 0x000E && code <= 0x001F) ||\r\n        (code === 0x007F)\r\n    );\r\n}\r\n\r\n// newline\r\n// U+000A LINE FEED. Note that U+000D CARRIAGE RETURN and U+000C FORM FEED are not included in this definition,\r\n// as they are converted to U+000A LINE FEED during preprocessing.\r\n// TODO: we doesn't do a preprocessing, so check a code point for U+000D CARRIAGE RETURN and U+000C FORM FEED\r\nfunction isNewline(code) {\r\n    return code === 0x000A || code === 0x000D || code === 0x000C;\r\n}\r\n\r\n// whitespace\r\n// A newline, U+0009 CHARACTER TABULATION, or U+0020 SPACE.\r\nfunction isWhiteSpace(code) {\r\n    return isNewline(code) || code === 0x0020 || code === 0x0009;\r\n}\r\n\r\n// § 4.3.8. Check if two code points are a valid escape\r\nfunction isValidEscape(first, second) {\r\n    // If the first code point is not U+005C REVERSE SOLIDUS (\\), return false.\r\n    if (first !== 0x005C) {\r\n        return false;\r\n    }\r\n\r\n    // Otherwise, if the second code point is a newline or EOF, return false.\r\n    if (isNewline(second) || second === EOF) {\r\n        return false;\r\n    }\r\n\r\n    // Otherwise, return true.\r\n    return true;\r\n}\r\n\r\n// § 4.3.9. Check if three code points would start an identifier\r\nfunction isIdentifierStart(first, second, third) {\r\n    // Look at the first code point:\r\n\r\n    // U+002D HYPHEN-MINUS\r\n    if (first === 0x002D) {\r\n        // If the second code point is a name-start code point or a U+002D HYPHEN-MINUS,\r\n        // or the second and third code points are a valid escape, return true. Otherwise, return false.\r\n        return (\r\n            isNameStart(second) ||\r\n            second === 0x002D ||\r\n            isValidEscape(second, third)\r\n        );\r\n    }\r\n\r\n    // name-start code point\r\n    if (isNameStart(first)) {\r\n        // Return true.\r\n        return true;\r\n    }\r\n\r\n    // U+005C REVERSE SOLIDUS (\\)\r\n    if (first === 0x005C) {\r\n        // If the first and second code points are a valid escape, return true. Otherwise, return false.\r\n        return isValidEscape(first, second);\r\n    }\r\n\r\n    // anything else\r\n    // Return false.\r\n    return false;\r\n}\r\n\r\n// § 4.3.10. Check if three code points would start a number\r\nfunction isNumberStart(first, second, third) {\r\n    // Look at the first code point:\r\n\r\n    // U+002B PLUS SIGN (+)\r\n    // U+002D HYPHEN-MINUS (-)\r\n    if (first === 0x002B || first === 0x002D) {\r\n        // If the second code point is a digit, return true.\r\n        if (isDigit(second)) {\r\n            return 2;\r\n        }\r\n\r\n        // Otherwise, if the second code point is a U+002E FULL STOP (.)\r\n        // and the third code point is a digit, return true.\r\n        // Otherwise, return false.\r\n        return second === 0x002E && isDigit(third) ? 3 : 0;\r\n    }\r\n\r\n    // U+002E FULL STOP (.)\r\n    if (first === 0x002E) {\r\n        // If the second code point is a digit, return true. Otherwise, return false.\r\n        return isDigit(second) ? 2 : 0;\r\n    }\r\n\r\n    // digit\r\n    if (isDigit(first)) {\r\n        // Return true.\r\n        return 1;\r\n    }\r\n\r\n    // anything else\r\n    // Return false.\r\n    return 0;\r\n}\r\n\r\n//\r\n// Misc\r\n//\r\n\r\n// detect BOM (https://en.wikipedia.org/wiki/Byte_order_mark)\r\nfunction isBOM(code) {\r\n    // UTF-16BE\r\n    if (code === 0xFEFF) {\r\n        return 1;\r\n    }\r\n\r\n    // UTF-16LE\r\n    if (code === 0xFFFE) {\r\n        return 1;\r\n    }\r\n\r\n    return 0;\r\n}\r\n\r\n// Fast code category\r\n//\r\n// https://drafts.csswg.org/css-syntax/#tokenizer-definitions\r\n// > non-ASCII code point\r\n// >   A code point with a value equal to or greater than U+0080 <control>\r\n// > name-start code point\r\n// >   A letter, a non-ASCII code point, or U+005F LOW LINE (_).\r\n// > name code point\r\n// >   A name-start code point, a digit, or U+002D HYPHEN-MINUS (-)\r\n// That means only ASCII code points has a special meaning and we define a maps for 0..127 codes only\r\nvar CATEGORY = new Array(0x80);\r\ncharCodeCategory.Eof = 0x80;\r\ncharCodeCategory.WhiteSpace = 0x82;\r\ncharCodeCategory.Digit = 0x83;\r\ncharCodeCategory.NameStart = 0x84;\r\ncharCodeCategory.NonPrintable = 0x85;\r\n\r\nfor (var i = 0; i < CATEGORY.length; i++) {\r\n    switch (true) {\r\n        case isWhiteSpace(i):\r\n            CATEGORY[i] = charCodeCategory.WhiteSpace;\r\n            break;\r\n\r\n        case isDigit(i):\r\n            CATEGORY[i] = charCodeCategory.Digit;\r\n            break;\r\n\r\n        case isNameStart(i):\r\n            CATEGORY[i] = charCodeCategory.NameStart;\r\n            break;\r\n\r\n        case isNonPrintable(i):\r\n            CATEGORY[i] = charCodeCategory.NonPrintable;\r\n            break;\r\n\r\n        default:\r\n            CATEGORY[i] = i || charCodeCategory.Eof;\r\n    }\r\n}\r\n\r\nfunction charCodeCategory(code) {\r\n    return code < 0x80 ? CATEGORY[code] : charCodeCategory.NameStart;\r\n};\r\n\r\nmodule.exports = {\r\n    isDigit: isDigit,\r\n    isHexDigit: isHexDigit,\r\n    isUppercaseLetter: isUppercaseLetter,\r\n    isLowercaseLetter: isLowercaseLetter,\r\n    isLetter: isLetter,\r\n    isNonAscii: isNonAscii,\r\n    isNameStart: isNameStart,\r\n    isName: isName,\r\n    isNonPrintable: isNonPrintable,\r\n    isNewline: isNewline,\r\n    isWhiteSpace: isWhiteSpace,\r\n    isValidEscape: isValidEscape,\r\n    isIdentifierStart: isIdentifierStart,\r\n    isNumberStart: isNumberStart,\r\n\r\n    isBOM: isBOM,\r\n    charCodeCategory: charCodeCategory\r\n};\r\n","var charCodeDef = require('./char-code-definitions');\r\nvar isDigit = charCodeDef.isDigit;\r\nvar isHexDigit = charCodeDef.isHexDigit;\r\nvar isUppercaseLetter = charCodeDef.isUppercaseLetter;\r\nvar isName = charCodeDef.isName;\r\nvar isWhiteSpace = charCodeDef.isWhiteSpace;\r\nvar isValidEscape = charCodeDef.isValidEscape;\r\n\r\nfunction getCharCode(source, offset) {\r\n    return offset < source.length ? source.charCodeAt(offset) : 0;\r\n}\r\n\r\nfunction getNewlineLength(source, offset, code) {\r\n    if (code === 13 /* \\r */ && getCharCode(source, offset + 1) === 10 /* \\n */) {\r\n        return 2;\r\n    }\r\n\r\n    return 1;\r\n}\r\n\r\nfunction cmpChar(testStr, offset, referenceCode) {\r\n    var code = testStr.charCodeAt(offset);\r\n\r\n    // code.toLowerCase() for A..Z\r\n    if (isUppercaseLetter(code)) {\r\n        code = code | 32;\r\n    }\r\n\r\n    return code === referenceCode;\r\n}\r\n\r\nfunction cmpStr(testStr, start, end, referenceStr) {\r\n    if (end - start !== referenceStr.length) {\r\n        return false;\r\n    }\r\n\r\n    if (start < 0 || end > testStr.length) {\r\n        return false;\r\n    }\r\n\r\n    for (var i = start; i < end; i++) {\r\n        var testCode = testStr.charCodeAt(i);\r\n        var referenceCode = referenceStr.charCodeAt(i - start);\r\n\r\n        // testCode.toLowerCase() for A..Z\r\n        if (isUppercaseLetter(testCode)) {\r\n            testCode = testCode | 32;\r\n        }\r\n\r\n        if (testCode !== referenceCode) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nfunction findWhiteSpaceStart(source, offset) {\r\n    for (; offset >= 0; offset--) {\r\n        if (!isWhiteSpace(source.charCodeAt(offset))) {\r\n            break;\r\n        }\r\n    }\r\n\r\n    return offset + 1;\r\n}\r\n\r\nfunction findWhiteSpaceEnd(source, offset) {\r\n    for (; offset < source.length; offset++) {\r\n        if (!isWhiteSpace(source.charCodeAt(offset))) {\r\n            break;\r\n        }\r\n    }\r\n\r\n    return offset;\r\n}\r\n\r\nfunction findDecimalNumberEnd(source, offset) {\r\n    for (; offset < source.length; offset++) {\r\n        if (!isDigit(source.charCodeAt(offset))) {\r\n            break;\r\n        }\r\n    }\r\n\r\n    return offset;\r\n}\r\n\r\n// § 4.3.7. Consume an escaped code point\r\nfunction consumeEscaped(source, offset) {\r\n    // It assumes that the U+005C REVERSE SOLIDUS (\\) has already been consumed and\r\n    // that the next input code point has already been verified to be part of a valid escape.\r\n    offset += 2;\r\n\r\n    // hex digit\r\n    if (isHexDigit(getCharCode(source, offset - 1))) {\r\n        // Consume as many hex digits as possible, but no more than 5.\r\n        // Note that this means 1-6 hex digits have been consumed in total.\r\n        for (var maxOffset = Math.min(source.length, offset + 5); offset < maxOffset; offset++) {\r\n            if (!isHexDigit(getCharCode(source, offset))) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        // If the next input code point is whitespace, consume it as well.\r\n        var code = getCharCode(source, offset);\r\n        if (isWhiteSpace(code)) {\r\n            offset += getNewlineLength(source, offset, code);\r\n        }\r\n    }\r\n\r\n    return offset;\r\n}\r\n\r\n// §4.3.11. Consume a name\r\n// Note: This algorithm does not do the verification of the first few code points that are necessary\r\n// to ensure the returned code points would constitute an <ident-token>. If that is the intended use,\r\n// ensure that the stream starts with an identifier before calling this algorithm.\r\nfunction consumeName(source, offset) {\r\n    // Let result initially be an empty string.\r\n    // Repeatedly consume the next input code point from the stream:\r\n    for (; offset < source.length; offset++) {\r\n        var code = source.charCodeAt(offset);\r\n\r\n        // name code point\r\n        if (isName(code)) {\r\n            // Append the code point to result.\r\n            continue;\r\n        }\r\n\r\n        // the stream starts with a valid escape\r\n        if (isValidEscape(code, getCharCode(source, offset + 1))) {\r\n            // Consume an escaped code point. Append the returned code point to result.\r\n            offset = consumeEscaped(source, offset) - 1;\r\n            continue;\r\n        }\r\n\r\n        // anything else\r\n        // Reconsume the current input code point. Return result.\r\n        break;\r\n    }\r\n\r\n    return offset;\r\n}\r\n\r\n// §4.3.12. Consume a number\r\nfunction consumeNumber(source, offset) {\r\n    var code = source.charCodeAt(offset);\r\n\r\n    // 2. If the next input code point is U+002B PLUS SIGN (+) or U+002D HYPHEN-MINUS (-),\r\n    // consume it and append it to repr.\r\n    if (code === 0x002B || code === 0x002D) {\r\n        code = source.charCodeAt(offset += 1);\r\n    }\r\n\r\n    // 3. While the next input code point is a digit, consume it and append it to repr.\r\n    if (isDigit(code)) {\r\n        offset = findDecimalNumberEnd(source, offset + 1);\r\n        code = source.charCodeAt(offset);\r\n    }\r\n\r\n    // 4. If the next 2 input code points are U+002E FULL STOP (.) followed by a digit, then:\r\n    if (code === 0x002E && isDigit(source.charCodeAt(offset + 1))) {\r\n        // 4.1 Consume them.\r\n        // 4.2 Append them to repr.\r\n        code = source.charCodeAt(offset += 2);\r\n\r\n        // 4.3 Set type to \"number\".\r\n        // TODO\r\n\r\n        // 4.4 While the next input code point is a digit, consume it and append it to repr.\r\n\r\n        offset = findDecimalNumberEnd(source, offset);\r\n    }\r\n\r\n    // 5. If the next 2 or 3 input code points are U+0045 LATIN CAPITAL LETTER E (E)\r\n    // or U+0065 LATIN SMALL LETTER E (e), ... , followed by a digit, then:\r\n    if (cmpChar(source, offset, 101 /* e */)) {\r\n        var sign = 0;\r\n        code = source.charCodeAt(offset + 1);\r\n\r\n        // ... optionally followed by U+002D HYPHEN-MINUS (-) or U+002B PLUS SIGN (+) ...\r\n        if (code === 0x002D || code === 0x002B) {\r\n            sign = 1;\r\n            code = source.charCodeAt(offset + 2);\r\n        }\r\n\r\n        // ... followed by a digit\r\n        if (isDigit(code)) {\r\n            // 5.1 Consume them.\r\n            // 5.2 Append them to repr.\r\n\r\n            // 5.3 Set type to \"number\".\r\n            // TODO\r\n\r\n            // 5.4 While the next input code point is a digit, consume it and append it to repr.\r\n            offset = findDecimalNumberEnd(source, offset + 1 + sign + 1);\r\n        }\r\n    }\r\n\r\n    return offset;\r\n}\r\n\r\n// § 4.3.14. Consume the remnants of a bad url\r\n// ... its sole use is to consume enough of the input stream to reach a recovery point\r\n// where normal tokenizing can resume.\r\nfunction consumeBadUrlRemnants(source, offset) {\r\n    // Repeatedly consume the next input code point from the stream:\r\n    for (; offset < source.length; offset++) {\r\n        var code = source.charCodeAt(offset);\r\n\r\n        // U+0029 RIGHT PARENTHESIS ())\r\n        // EOF\r\n        if (code === 0x0029) {\r\n            // Return.\r\n            offset++;\r\n            break;\r\n        }\r\n\r\n        if (isValidEscape(code, getCharCode(source, offset + 1))) {\r\n            // Consume an escaped code point.\r\n            // Note: This allows an escaped right parenthesis (\"\\)\") to be encountered\r\n            // without ending the <bad-url-token>. This is otherwise identical to\r\n            // the \"anything else\" clause.\r\n            offset = consumeEscaped(source, offset);\r\n        }\r\n    }\r\n\r\n    return offset;\r\n}\r\n\r\nmodule.exports = {\r\n    consumeEscaped: consumeEscaped,\r\n    consumeName: consumeName,\r\n    consumeNumber: consumeNumber,\r\n    consumeBadUrlRemnants: consumeBadUrlRemnants,\r\n\r\n    cmpChar: cmpChar,\r\n    cmpStr: cmpStr,\r\n\r\n    getNewlineLength: getNewlineLength,\r\n    findWhiteSpaceStart: findWhiteSpaceStart,\r\n    findWhiteSpaceEnd: findWhiteSpaceEnd\r\n};\r\n","var constants = require('../tokenizer/const');\r\nvar TYPE = constants.TYPE;\r\nvar NAME = constants.NAME;\r\n\r\nvar utils = require('../tokenizer/utils');\r\nvar cmpStr = utils.cmpStr;\r\n\r\nvar EOF = TYPE.EOF;\r\nvar WHITESPACE = TYPE.WhiteSpace;\r\nvar COMMENT = TYPE.Comment;\r\n\r\nvar OFFSET_MASK = 0x00FFFFFF;\r\nvar TYPE_SHIFT = 24;\r\n\r\nvar TokenStream = function() {\r\n    this.offsetAndType = null;\r\n    this.balance = null;\r\n\r\n    this.reset();\r\n};\r\n\r\nTokenStream.prototype = {\r\n    reset: function() {\r\n        this.eof = false;\r\n        this.tokenIndex = -1;\r\n        this.tokenType = 0;\r\n        this.tokenStart = this.firstCharOffset;\r\n        this.tokenEnd = this.firstCharOffset;\r\n    },\r\n\r\n    lookupType: function(offset) {\r\n        offset += this.tokenIndex;\r\n\r\n        if (offset < this.tokenCount) {\r\n            return this.offsetAndType[offset] >> TYPE_SHIFT;\r\n        }\r\n\r\n        return EOF;\r\n    },\r\n    lookupOffset: function(offset) {\r\n        offset += this.tokenIndex;\r\n\r\n        if (offset < this.tokenCount) {\r\n            return this.offsetAndType[offset - 1] & OFFSET_MASK;\r\n        }\r\n\r\n        return this.source.length;\r\n    },\r\n    lookupValue: function(offset, referenceStr) {\r\n        offset += this.tokenIndex;\r\n\r\n        if (offset < this.tokenCount) {\r\n            return cmpStr(\r\n                this.source,\r\n                this.offsetAndType[offset - 1] & OFFSET_MASK,\r\n                this.offsetAndType[offset] & OFFSET_MASK,\r\n                referenceStr\r\n            );\r\n        }\r\n\r\n        return false;\r\n    },\r\n    getTokenStart: function(tokenIndex) {\r\n        if (tokenIndex === this.tokenIndex) {\r\n            return this.tokenStart;\r\n        }\r\n\r\n        if (tokenIndex > 0) {\r\n            return tokenIndex < this.tokenCount\r\n                ? this.offsetAndType[tokenIndex - 1] & OFFSET_MASK\r\n                : this.offsetAndType[this.tokenCount] & OFFSET_MASK;\r\n        }\r\n\r\n        return this.firstCharOffset;\r\n    },\r\n\r\n    // TODO: -> skipUntilBalanced\r\n    getRawLength: function(startToken, mode) {\r\n        var cursor = startToken;\r\n        var balanceEnd;\r\n        var offset = this.offsetAndType[Math.max(cursor - 1, 0)] & OFFSET_MASK;\r\n        var type;\r\n\r\n        loop:\r\n        for (; cursor < this.tokenCount; cursor++) {\r\n            balanceEnd = this.balance[cursor];\r\n\r\n            // stop scanning on balance edge that points to offset before start token\r\n            if (balanceEnd < startToken) {\r\n                break loop;\r\n            }\r\n\r\n            type = this.offsetAndType[cursor] >> TYPE_SHIFT;\r\n\r\n            // check token is stop type\r\n            switch (mode(type, this.source, offset)) {\r\n                case 1:\r\n                    break loop;\r\n\r\n                case 2:\r\n                    cursor++;\r\n                    break loop;\r\n\r\n                default:\r\n                    offset = this.offsetAndType[cursor] & OFFSET_MASK;\r\n\r\n                    // fast forward to the end of balanced block\r\n                    if (this.balance[balanceEnd] === cursor) {\r\n                        cursor = balanceEnd;\r\n                    }\r\n            }\r\n        }\r\n\r\n        return cursor - this.tokenIndex;\r\n    },\r\n    isBalanceEdge: function(pos) {\r\n        return this.balance[this.tokenIndex] < pos;\r\n    },\r\n    isDelim: function(code, offset) {\r\n        if (offset) {\r\n            return (\r\n                this.lookupType(offset) === TYPE.Delim &&\r\n                this.source.charCodeAt(this.lookupOffset(offset)) === code\r\n            );\r\n        }\r\n\r\n        return (\r\n            this.tokenType === TYPE.Delim &&\r\n            this.source.charCodeAt(this.tokenStart) === code\r\n        );\r\n    },\r\n\r\n    getTokenValue: function() {\r\n        return this.source.substring(this.tokenStart, this.tokenEnd);\r\n    },\r\n    getTokenLength: function() {\r\n        return this.tokenEnd - this.tokenStart;\r\n    },\r\n    substrToCursor: function(start) {\r\n        return this.source.substring(start, this.tokenStart);\r\n    },\r\n\r\n    skipWS: function() {\r\n        for (var i = this.tokenIndex, skipTokenCount = 0; i < this.tokenCount; i++, skipTokenCount++) {\r\n            if ((this.offsetAndType[i] >> TYPE_SHIFT) !== WHITESPACE) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (skipTokenCount > 0) {\r\n            this.skip(skipTokenCount);\r\n        }\r\n    },\r\n    skipSC: function() {\r\n        while (this.tokenType === WHITESPACE || this.tokenType === COMMENT) {\r\n            this.next();\r\n        }\r\n    },\r\n    skip: function(tokenCount) {\r\n        var next = this.tokenIndex + tokenCount;\r\n\r\n        if (next < this.tokenCount) {\r\n            this.tokenIndex = next;\r\n            this.tokenStart = this.offsetAndType[next - 1] & OFFSET_MASK;\r\n            next = this.offsetAndType[next];\r\n            this.tokenType = next >> TYPE_SHIFT;\r\n            this.tokenEnd = next & OFFSET_MASK;\r\n        } else {\r\n            this.tokenIndex = this.tokenCount;\r\n            this.next();\r\n        }\r\n    },\r\n    next: function() {\r\n        var next = this.tokenIndex + 1;\r\n\r\n        if (next < this.tokenCount) {\r\n            this.tokenIndex = next;\r\n            this.tokenStart = this.tokenEnd;\r\n            next = this.offsetAndType[next];\r\n            this.tokenType = next >> TYPE_SHIFT;\r\n            this.tokenEnd = next & OFFSET_MASK;\r\n        } else {\r\n            this.tokenIndex = this.tokenCount;\r\n            this.eof = true;\r\n            this.tokenType = EOF;\r\n            this.tokenStart = this.tokenEnd = this.source.length;\r\n        }\r\n    },\r\n\r\n    dump: function() {\r\n        var offset = this.firstCharOffset;\r\n\r\n        return Array.prototype.slice.call(this.offsetAndType, 0, this.tokenCount).map(function(item, idx) {\r\n            var start = offset;\r\n            var end = item & OFFSET_MASK;\r\n\r\n            offset = end;\r\n\r\n            return {\r\n                idx: idx,\r\n                type: NAME[item >> TYPE_SHIFT],\r\n                chunk: this.source.substring(start, end),\r\n                balance: this.balance[idx]\r\n            };\r\n        }, this);\r\n    }\r\n};\r\n\r\nmodule.exports = TokenStream;\r\n","function noop(value) {\n  return value\n}\n\nfunction generateMultiplier(multiplier) {\n  if (multiplier.min === 0 && multiplier.max === 0) {\n    return '*'\n  }\n\n  if (multiplier.min === 0 && multiplier.max === 1) {\n    return '?'\n  }\n\n  if (multiplier.min === 1 && multiplier.max === 0) {\n    return multiplier.comma ? '#' : '+'\n  }\n\n  if (multiplier.min === 1 && multiplier.max === 1) {\n    return ''\n  }\n\n  return (multiplier.comma ? '#' : '') + (multiplier.min === multiplier.max ? '{' + multiplier.min + '}' : '{' + multiplier.min + ',' + (multiplier.max !== 0 ? multiplier.max : '') + '}')\n}\n\nfunction generateTypeOpts(node) {\n  switch (node.type) {\n    case 'Range':\n      return ' [' + (node.min === null ? '-∞' : node.min) + ',' + (node.max === null ? '∞' : node.max) + ']'\n\n    default:\n      throw new Error('Unknown node type `' + node.type + '`')\n  }\n}\n\nfunction generateSequence(node, decorate, forceBraces, compact) {\n  var combinator = node.combinator === ' ' || compact ? node.combinator : ' ' + node.combinator + ' '\n  var result = node.terms\n    .map(function (term) {\n      return generate(term, decorate, forceBraces, compact)\n    })\n    .join(combinator)\n\n  if (node.explicit || forceBraces) {\n    result = (compact || result[0] === ',' ? '[' : '[ ') + result + (compact ? ']' : ' ]')\n  }\n\n  return result\n}\n\nfunction generate(node, decorate, forceBraces, compact) {\n  var result\n\n  switch (node.type) {\n    case 'Group':\n      result = generateSequence(node, decorate, forceBraces, compact) + (node.disallowEmpty ? '!' : '')\n      break\n\n    case 'Multiplier':\n      // return since node is a composition\n      return generate(node.term, decorate, forceBraces, compact) + decorate(generateMultiplier(node), node)\n\n    case 'Type':\n      result = '<' + node.name + (node.opts ? decorate(generateTypeOpts(node.opts), node.opts) : '') + '>'\n      break\n\n    case 'Property':\n      result = \"<'\" + node.name + \"'>\"\n      break\n\n    case 'Keyword':\n      result = node.name\n      break\n\n    case 'AtKeyword':\n      result = '@' + node.name\n      break\n\n    case 'Function':\n      result = node.name + '('\n      break\n\n    case 'String':\n    case 'Token':\n      result = node.value\n      break\n\n    case 'Comma':\n      result = ','\n      break\n\n    default:\n      throw new Error('Unknown node type `' + node.type + '`')\n  }\n\n  return decorate(result, node)\n}\n\nmodule.exports = function (node, options) {\n  var decorate = noop\n  var forceBraces = false\n  var compact = false\n\n  if (typeof options === 'function') {\n    decorate = options\n  } else if (options) {\n    forceBraces = Boolean(options.forceBraces)\n    compact = Boolean(options.compact)\n    if (typeof options.decorate === 'function') {\n      decorate = options.decorate\n    }\n  }\n\n  return generate(node, decorate, forceBraces, compact)\n}\n","var createCustomError = require('../utils/createCustomError');\r\nvar generate = require('../definition-syntax/generate');\r\n\r\nfunction fromMatchResult(matchResult) {\r\n    var tokens = matchResult.tokens;\r\n    var longestMatch = matchResult.longestMatch;\r\n    var node = longestMatch < tokens.length ? tokens[longestMatch].node : null;\r\n    var mismatchOffset = -1;\r\n    var entries = 0;\r\n    var css = '';\r\n\r\n    for (var i = 0; i < tokens.length; i++) {\r\n        if (i === longestMatch) {\r\n            mismatchOffset = css.length;\r\n        }\r\n\r\n        if (node !== null && tokens[i].node === node) {\r\n            if (i <= longestMatch) {\r\n                entries++;\r\n            } else {\r\n                entries = 0;\r\n            }\r\n        }\r\n\r\n        css += tokens[i].value;\r\n    }\r\n\r\n    return {\r\n        node: node,\r\n        css: css,\r\n        mismatchOffset: mismatchOffset === -1 ? css.length : mismatchOffset,\r\n        last: node === null || entries > 1\r\n    };\r\n}\r\n\r\nfunction getLocation(node, point) {\r\n    var loc = node && node.loc && node.loc[point];\r\n\r\n    if (loc) {\r\n        return {\r\n            offset: loc.offset,\r\n            line: loc.line,\r\n            column: loc.column\r\n        };\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nvar SyntaxReferenceError = function(type, referenceName) {\r\n    var error = createCustomError(\r\n        'SyntaxReferenceError',\r\n        type + (referenceName ? ' `' + referenceName + '`' : '')\r\n    );\r\n\r\n    error.reference = referenceName;\r\n\r\n    return error;\r\n};\r\n\r\nvar MatchError = function(message, syntax, node, matchResult) {\r\n    var error = createCustomError('SyntaxMatchError', message);\r\n    var details = fromMatchResult(matchResult);\r\n    var mismatchOffset = details.mismatchOffset || 0;\r\n    var badNode = details.node || node;\r\n    var end = getLocation(badNode, 'end');\r\n    var start = details.last ? end : getLocation(badNode, 'start');\r\n    var css = details.css;\r\n\r\n    error.rawMessage = message;\r\n    error.syntax = syntax ? generate(syntax) : '<generic>';\r\n    error.css = css;\r\n    error.mismatchOffset = mismatchOffset;\r\n    error.loc = {\r\n        source: (badNode && badNode.loc && badNode.loc.source) || '<unknown>',\r\n        start: start,\r\n        end: end\r\n    };\r\n    error.line = start ? start.line : undefined;\r\n    error.column = start ? start.column : undefined;\r\n    error.offset = start ? start.offset : undefined;\r\n    error.message = message + '\\n' +\r\n        '  syntax: ' + error.syntax + '\\n' +\r\n        '   value: ' + (error.css || '<empty string>') + '\\n' +\r\n        '  --------' + new Array(error.mismatchOffset + 1).join('-') + '^';\r\n\r\n    return error;\r\n};\r\n\r\nmodule.exports = {\r\n    SyntaxReferenceError: SyntaxReferenceError,\r\n    MatchError: MatchError\r\n};\r\n","var hasOwnProperty = Object.prototype.hasOwnProperty;\r\nvar keywords = Object.create(null);\r\nvar properties = Object.create(null);\r\nvar HYPHENMINUS = 45; // '-'.charCodeAt()\r\n\r\nfunction isCustomProperty(str, offset) {\r\n    offset = offset || 0;\r\n\r\n    return str.length - offset >= 2 &&\r\n           str.charCodeAt(offset) === HYPHENMINUS &&\r\n           str.charCodeAt(offset + 1) === HYPHENMINUS;\r\n}\r\n\r\nfunction getVendorPrefix(str, offset) {\r\n    offset = offset || 0;\r\n\r\n    // verdor prefix should be at least 3 chars length\r\n    if (str.length - offset >= 3) {\r\n        // vendor prefix starts with hyper minus following non-hyper minus\r\n        if (str.charCodeAt(offset) === HYPHENMINUS &&\r\n            str.charCodeAt(offset + 1) !== HYPHENMINUS) {\r\n            // vendor prefix should contain a hyper minus at the ending\r\n            var secondDashIndex = str.indexOf('-', offset + 2);\r\n\r\n            if (secondDashIndex !== -1) {\r\n                return str.substring(offset, secondDashIndex + 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    return '';\r\n}\r\n\r\nfunction getKeywordDescriptor(keyword) {\r\n    if (hasOwnProperty.call(keywords, keyword)) {\r\n        return keywords[keyword];\r\n    }\r\n\r\n    var name = keyword.toLowerCase();\r\n\r\n    if (hasOwnProperty.call(keywords, name)) {\r\n        return keywords[keyword] = keywords[name];\r\n    }\r\n\r\n    var custom = isCustomProperty(name, 0);\r\n    var vendor = !custom ? getVendorPrefix(name, 0) : '';\r\n\r\n    return keywords[keyword] = Object.freeze({\r\n        basename: name.substr(vendor.length),\r\n        name: name,\r\n        vendor: vendor,\r\n        prefix: vendor,\r\n        custom: custom\r\n    });\r\n}\r\n\r\nfunction getPropertyDescriptor(property) {\r\n    if (hasOwnProperty.call(properties, property)) {\r\n        return properties[property];\r\n    }\r\n\r\n    var name = property;\r\n    var hack = property[0];\r\n\r\n    if (hack === '/') {\r\n        hack = property[1] === '/' ? '//' : '/';\r\n    } else if (hack !== '_' &&\r\n               hack !== '*' &&\r\n               hack !== '$' &&\r\n               hack !== '#' &&\r\n               hack !== '+' &&\r\n               hack !== '&') {\r\n        hack = '';\r\n    }\r\n\r\n    var custom = isCustomProperty(name, hack.length);\r\n\r\n    // re-use result when possible (the same as for lower case)\r\n    if (!custom) {\r\n        name = name.toLowerCase();\r\n        if (hasOwnProperty.call(properties, name)) {\r\n            return properties[property] = properties[name];\r\n        }\r\n    }\r\n\r\n    var vendor = !custom ? getVendorPrefix(name, hack.length) : '';\r\n    var prefix = name.substr(0, hack.length + vendor.length);\r\n\r\n    return properties[property] = Object.freeze({\r\n        basename: name.substr(prefix.length),\r\n        name: name.substr(hack.length),\r\n        hack: hack,\r\n        vendor: vendor,\r\n        prefix: prefix,\r\n        custom: custom\r\n    });\r\n}\r\n\r\nmodule.exports = {\r\n    keyword: getKeywordDescriptor,\r\n    property: getPropertyDescriptor,\r\n    isCustomProperty: isCustomProperty,\r\n    vendorPrefix: getVendorPrefix\r\n};\r\n","var MIN_SIZE = 16 * 1024;\r\nvar SafeUint32Array = typeof Uint32Array !== 'undefined' ? Uint32Array : Array; // fallback on Array when TypedArray is not supported\r\n\r\nmodule.exports = function adoptBuffer(buffer, size) {\r\n    if (buffer === null || buffer.length < size) {\r\n        return new SafeUint32Array(Math.max(size + 1024, MIN_SIZE));\r\n    }\r\n\r\n    return buffer;\r\n};\r\n","var TokenStream = require('../common/TokenStream');\r\nvar adoptBuffer = require('../common/adopt-buffer');\r\n\r\nvar constants = require('./const');\r\nvar TYPE = constants.TYPE;\r\n\r\nvar charCodeDefinitions = require('./char-code-definitions');\r\nvar isNewline = charCodeDefinitions.isNewline;\r\nvar isName = charCodeDefinitions.isName;\r\nvar isValidEscape = charCodeDefinitions.isValidEscape;\r\nvar isNumberStart = charCodeDefinitions.isNumberStart;\r\nvar isIdentifierStart = charCodeDefinitions.isIdentifierStart;\r\nvar charCodeCategory = charCodeDefinitions.charCodeCategory;\r\nvar isBOM = charCodeDefinitions.isBOM;\r\n\r\nvar utils = require('./utils');\r\nvar cmpStr = utils.cmpStr;\r\nvar getNewlineLength = utils.getNewlineLength;\r\nvar findWhiteSpaceEnd = utils.findWhiteSpaceEnd;\r\nvar consumeEscaped = utils.consumeEscaped;\r\nvar consumeName = utils.consumeName;\r\nvar consumeNumber = utils.consumeNumber;\r\nvar consumeBadUrlRemnants = utils.consumeBadUrlRemnants;\r\n\r\nvar OFFSET_MASK = 0x00FFFFFF;\r\nvar TYPE_SHIFT = 24;\r\n\r\nfunction tokenize(source, stream) {\r\n    function getCharCode(offset) {\r\n        return offset < sourceLength ? source.charCodeAt(offset) : 0;\r\n    }\r\n\r\n    // § 4.3.3. Consume a numeric token\r\n    function consumeNumericToken() {\r\n        // Consume a number and let number be the result.\r\n        offset = consumeNumber(source, offset);\r\n\r\n        // If the next 3 input code points would start an identifier, then:\r\n        if (isIdentifierStart(getCharCode(offset), getCharCode(offset + 1), getCharCode(offset + 2))) {\r\n            // Create a <dimension-token> with the same value and type flag as number, and a unit set initially to the empty string.\r\n            // Consume a name. Set the <dimension-token>’s unit to the returned value.\r\n            // Return the <dimension-token>.\r\n            type = TYPE.Dimension;\r\n            offset = consumeName(source, offset);\r\n            return;\r\n        }\r\n\r\n        // Otherwise, if the next input code point is U+0025 PERCENTAGE SIGN (%), consume it.\r\n        if (getCharCode(offset) === 0x0025) {\r\n            // Create a <percentage-token> with the same value as number, and return it.\r\n            type = TYPE.Percentage;\r\n            offset++;\r\n            return;\r\n        }\r\n\r\n        // Otherwise, create a <number-token> with the same value and type flag as number, and return it.\r\n        type = TYPE.Number;\r\n    }\r\n\r\n    // § 4.3.4. Consume an ident-like token\r\n    function consumeIdentLikeToken() {\r\n        const nameStartOffset = offset;\r\n\r\n        // Consume a name, and let string be the result.\r\n        offset = consumeName(source, offset);\r\n\r\n        // If string’s value is an ASCII case-insensitive match for \"url\",\r\n        // and the next input code point is U+0028 LEFT PARENTHESIS ((), consume it.\r\n        if (cmpStr(source, nameStartOffset, offset, 'url') && getCharCode(offset) === 0x0028) {\r\n            // While the next two input code points are whitespace, consume the next input code point.\r\n            offset = findWhiteSpaceEnd(source, offset + 1);\r\n\r\n            // If the next one or two input code points are U+0022 QUOTATION MARK (\"), U+0027 APOSTROPHE ('),\r\n            // or whitespace followed by U+0022 QUOTATION MARK (\") or U+0027 APOSTROPHE ('),\r\n            // then create a <function-token> with its value set to string and return it.\r\n            if (getCharCode(offset) === 0x0022 ||\r\n                getCharCode(offset) === 0x0027) {\r\n                type = TYPE.Function;\r\n                offset = nameStartOffset + 4;\r\n                return;\r\n            }\r\n\r\n            // Otherwise, consume a url token, and return it.\r\n            consumeUrlToken();\r\n            return;\r\n        }\r\n\r\n        // Otherwise, if the next input code point is U+0028 LEFT PARENTHESIS ((), consume it.\r\n        // Create a <function-token> with its value set to string and return it.\r\n        if (getCharCode(offset) === 0x0028) {\r\n            type = TYPE.Function;\r\n            offset++;\r\n            return;\r\n        }\r\n\r\n        // Otherwise, create an <ident-token> with its value set to string and return it.\r\n        type = TYPE.Ident;\r\n    }\r\n\r\n    // § 4.3.5. Consume a string token\r\n    function consumeStringToken(endingCodePoint) {\r\n        // This algorithm may be called with an ending code point, which denotes the code point\r\n        // that ends the string. If an ending code point is not specified,\r\n        // the current input code point is used.\r\n        if (!endingCodePoint) {\r\n            endingCodePoint = getCharCode(offset++);\r\n        }\r\n\r\n        // Initially create a <string-token> with its value set to the empty string.\r\n        type = TYPE.String;\r\n\r\n        // Repeatedly consume the next input code point from the stream:\r\n        for (; offset < source.length; offset++) {\r\n            var code = source.charCodeAt(offset);\r\n\r\n            switch (charCodeCategory(code)) {\r\n                // ending code point\r\n                case endingCodePoint:\r\n                    // Return the <string-token>.\r\n                    offset++;\r\n                    return;\r\n\r\n                // EOF\r\n                case charCodeCategory.Eof:\r\n                    // This is a parse error. Return the <string-token>.\r\n                    return;\r\n\r\n                // newline\r\n                case charCodeCategory.WhiteSpace:\r\n                    if (isNewline(code)) {\r\n                        // This is a parse error. Reconsume the current input code point,\r\n                        // create a <bad-string-token>, and return it.\r\n                        offset += getNewlineLength(source, offset, code);\r\n                        type = TYPE.BadString;\r\n                        return;\r\n                    }\r\n                    break;\r\n\r\n                // U+005C REVERSE SOLIDUS (\\)\r\n                case 0x005C:\r\n                    // If the next input code point is EOF, do nothing.\r\n                    if (offset === source.length - 1) {\r\n                        break;\r\n                    }\r\n\r\n                    var nextCode = getCharCode(offset + 1);\r\n\r\n                    // Otherwise, if the next input code point is a newline, consume it.\r\n                    if (isNewline(nextCode)) {\r\n                        offset += getNewlineLength(source, offset + 1, nextCode);\r\n                    } else if (isValidEscape(code, nextCode)) {\r\n                        // Otherwise, (the stream starts with a valid escape) consume\r\n                        // an escaped code point and append the returned code point to\r\n                        // the <string-token>’s value.\r\n                        offset = consumeEscaped(source, offset) - 1;\r\n                    }\r\n                    break;\r\n\r\n                // anything else\r\n                // Append the current input code point to the <string-token>’s value.\r\n            }\r\n        }\r\n    }\r\n\r\n    // § 4.3.6. Consume a url token\r\n    // Note: This algorithm assumes that the initial \"url(\" has already been consumed.\r\n    // This algorithm also assumes that it’s being called to consume an \"unquoted\" value, like url(foo).\r\n    // A quoted value, like url(\"foo\"), is parsed as a <function-token>. Consume an ident-like token\r\n    // automatically handles this distinction; this algorithm shouldn’t be called directly otherwise.\r\n    function consumeUrlToken() {\r\n        // Initially create a <url-token> with its value set to the empty string.\r\n        type = TYPE.Url;\r\n\r\n        // Consume as much whitespace as possible.\r\n        offset = findWhiteSpaceEnd(source, offset);\r\n\r\n        // Repeatedly consume the next input code point from the stream:\r\n        for (; offset < source.length; offset++) {\r\n            var code = source.charCodeAt(offset);\r\n\r\n            switch (charCodeCategory(code)) {\r\n                // U+0029 RIGHT PARENTHESIS ())\r\n                case 0x0029:\r\n                    // Return the <url-token>.\r\n                    offset++;\r\n                    return;\r\n\r\n                // EOF\r\n                case charCodeCategory.Eof:\r\n                    // This is a parse error. Return the <url-token>.\r\n                    return;\r\n\r\n                // whitespace\r\n                case charCodeCategory.WhiteSpace:\r\n                    // Consume as much whitespace as possible.\r\n                    offset = findWhiteSpaceEnd(source, offset);\r\n\r\n                    // If the next input code point is U+0029 RIGHT PARENTHESIS ()) or EOF,\r\n                    // consume it and return the <url-token>\r\n                    // (if EOF was encountered, this is a parse error);\r\n                    if (getCharCode(offset) === 0x0029 || offset >= source.length) {\r\n                        if (offset < source.length) {\r\n                            offset++;\r\n                        }\r\n                        return;\r\n                    }\r\n\r\n                    // otherwise, consume the remnants of a bad url, create a <bad-url-token>,\r\n                    // and return it.\r\n                    offset = consumeBadUrlRemnants(source, offset);\r\n                    type = TYPE.BadUrl;\r\n                    return;\r\n\r\n                // U+0022 QUOTATION MARK (\")\r\n                // U+0027 APOSTROPHE (')\r\n                // U+0028 LEFT PARENTHESIS (()\r\n                // non-printable code point\r\n                case 0x0022:\r\n                case 0x0027:\r\n                case 0x0028:\r\n                case charCodeCategory.NonPrintable:\r\n                    // This is a parse error. Consume the remnants of a bad url,\r\n                    // create a <bad-url-token>, and return it.\r\n                    offset = consumeBadUrlRemnants(source, offset);\r\n                    type = TYPE.BadUrl;\r\n                    return;\r\n\r\n                // U+005C REVERSE SOLIDUS (\\)\r\n                case 0x005C:\r\n                    // If the stream starts with a valid escape, consume an escaped code point and\r\n                    // append the returned code point to the <url-token>’s value.\r\n                    if (isValidEscape(code, getCharCode(offset + 1))) {\r\n                        offset = consumeEscaped(source, offset) - 1;\r\n                        break;\r\n                    }\r\n\r\n                    // Otherwise, this is a parse error. Consume the remnants of a bad url,\r\n                    // create a <bad-url-token>, and return it.\r\n                    offset = consumeBadUrlRemnants(source, offset);\r\n                    type = TYPE.BadUrl;\r\n                    return;\r\n\r\n                // anything else\r\n                // Append the current input code point to the <url-token>’s value.\r\n            }\r\n        }\r\n    }\r\n\r\n    if (!stream) {\r\n        stream = new TokenStream();\r\n    }\r\n\r\n    // ensure source is a string\r\n    source = String(source || '');\r\n\r\n    var sourceLength = source.length;\r\n    var offsetAndType = adoptBuffer(stream.offsetAndType, sourceLength + 1); // +1 because of eof-token\r\n    var balance = adoptBuffer(stream.balance, sourceLength + 1);\r\n    var tokenCount = 0;\r\n    var start = isBOM(getCharCode(0));\r\n    var offset = start;\r\n    var balanceCloseType = 0;\r\n    var balanceStart = 0;\r\n    var balancePrev = 0;\r\n\r\n    // https://drafts.csswg.org/css-syntax-3/#consume-token\r\n    // § 4.3.1. Consume a token\r\n    while (offset < sourceLength) {\r\n        var code = source.charCodeAt(offset);\r\n        var type = 0;\r\n\r\n        balance[tokenCount] = sourceLength;\r\n\r\n        switch (charCodeCategory(code)) {\r\n            // whitespace\r\n            case charCodeCategory.WhiteSpace:\r\n                // Consume as much whitespace as possible. Return a <whitespace-token>.\r\n                type = TYPE.WhiteSpace;\r\n                offset = findWhiteSpaceEnd(source, offset + 1);\r\n                break;\r\n\r\n            // U+0022 QUOTATION MARK (\")\r\n            case 0x0022:\r\n                // Consume a string token and return it.\r\n                consumeStringToken();\r\n                break;\r\n\r\n            // U+0023 NUMBER SIGN (#)\r\n            case 0x0023:\r\n                // If the next input code point is a name code point or the next two input code points are a valid escape, then:\r\n                if (isName(getCharCode(offset + 1)) || isValidEscape(getCharCode(offset + 1), getCharCode(offset + 2))) {\r\n                    // Create a <hash-token>.\r\n                    type = TYPE.Hash;\r\n\r\n                    // If the next 3 input code points would start an identifier, set the <hash-token>’s type flag to \"id\".\r\n                    // if (isIdentifierStart(getCharCode(offset + 1), getCharCode(offset + 2), getCharCode(offset + 3))) {\r\n                    //     // TODO: set id flag\r\n                    // }\r\n\r\n                    // Consume a name, and set the <hash-token>’s value to the returned string.\r\n                    offset = consumeName(source, offset + 1);\r\n\r\n                    // Return the <hash-token>.\r\n                } else {\r\n                    // Otherwise, return a <delim-token> with its value set to the current input code point.\r\n                    type = TYPE.Delim;\r\n                    offset++;\r\n                }\r\n\r\n                break;\r\n\r\n            // U+0027 APOSTROPHE (')\r\n            case 0x0027:\r\n                // Consume a string token and return it.\r\n                consumeStringToken();\r\n                break;\r\n\r\n            // U+0028 LEFT PARENTHESIS (()\r\n            case 0x0028:\r\n                // Return a <(-token>.\r\n                type = TYPE.LeftParenthesis;\r\n                offset++;\r\n                break;\r\n\r\n            // U+0029 RIGHT PARENTHESIS ())\r\n            case 0x0029:\r\n                // Return a <)-token>.\r\n                type = TYPE.RightParenthesis;\r\n                offset++;\r\n                break;\r\n\r\n            // U+002B PLUS SIGN (+)\r\n            case 0x002B:\r\n                // If the input stream starts with a number, ...\r\n                if (isNumberStart(code, getCharCode(offset + 1), getCharCode(offset + 2))) {\r\n                    // ... reconsume the current input code point, consume a numeric token, and return it.\r\n                    consumeNumericToken();\r\n                } else {\r\n                    // Otherwise, return a <delim-token> with its value set to the current input code point.\r\n                    type = TYPE.Delim;\r\n                    offset++;\r\n                }\r\n                break;\r\n\r\n            // U+002C COMMA (,)\r\n            case 0x002C:\r\n                // Return a <comma-token>.\r\n                type = TYPE.Comma;\r\n                offset++;\r\n                break;\r\n\r\n            // U+002D HYPHEN-MINUS (-)\r\n            case 0x002D:\r\n                // If the input stream starts with a number, reconsume the current input code point, consume a numeric token, and return it.\r\n                if (isNumberStart(code, getCharCode(offset + 1), getCharCode(offset + 2))) {\r\n                    consumeNumericToken();\r\n                } else {\r\n                    // Otherwise, if the next 2 input code points are U+002D HYPHEN-MINUS U+003E GREATER-THAN SIGN (->), consume them and return a <CDC-token>.\r\n                    if (getCharCode(offset + 1) === 0x002D &&\r\n                        getCharCode(offset + 2) === 0x003E) {\r\n                        type = TYPE.CDC;\r\n                        offset = offset + 3;\r\n                    } else {\r\n                        // Otherwise, if the input stream starts with an identifier, ...\r\n                        if (isIdentifierStart(code, getCharCode(offset + 1), getCharCode(offset + 2))) {\r\n                            // ... reconsume the current input code point, consume an ident-like token, and return it.\r\n                            consumeIdentLikeToken();\r\n                        } else {\r\n                            // Otherwise, return a <delim-token> with its value set to the current input code point.\r\n                            type = TYPE.Delim;\r\n                            offset++;\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n\r\n            // U+002E FULL STOP (.)\r\n            case 0x002E:\r\n                // If the input stream starts with a number, ...\r\n                if (isNumberStart(code, getCharCode(offset + 1), getCharCode(offset + 2))) {\r\n                    // ... reconsume the current input code point, consume a numeric token, and return it.\r\n                    consumeNumericToken();\r\n                } else {\r\n                    // Otherwise, return a <delim-token> with its value set to the current input code point.\r\n                    type = TYPE.Delim;\r\n                    offset++;\r\n                }\r\n\r\n                break;\r\n\r\n            // U+002F SOLIDUS (/)\r\n            case 0x002F:\r\n                // If the next two input code point are U+002F SOLIDUS (/) followed by a U+002A ASTERISK (*),\r\n                if (getCharCode(offset + 1) === 0x002A) {\r\n                    // ... consume them and all following code points up to and including the first U+002A ASTERISK (*)\r\n                    // followed by a U+002F SOLIDUS (/), or up to an EOF code point.\r\n                    type = TYPE.Comment;\r\n                    offset = source.indexOf('*/', offset + 2) + 2;\r\n                    if (offset === 1) {\r\n                        offset = source.length;\r\n                    }\r\n                } else {\r\n                    type = TYPE.Delim;\r\n                    offset++;\r\n                }\r\n                break;\r\n\r\n            // U+003A COLON (:)\r\n            case 0x003A:\r\n                // Return a <colon-token>.\r\n                type = TYPE.Colon;\r\n                offset++;\r\n                break;\r\n\r\n            // U+003B SEMICOLON (;)\r\n            case 0x003B:\r\n                // Return a <semicolon-token>.\r\n                type = TYPE.Semicolon;\r\n                offset++;\r\n                break;\r\n\r\n            // U+003C LESS-THAN SIGN (<)\r\n            case 0x003C:\r\n                // If the next 3 input code points are U+0021 EXCLAMATION MARK U+002D HYPHEN-MINUS U+002D HYPHEN-MINUS (!--), ...\r\n                if (getCharCode(offset + 1) === 0x0021 &&\r\n                    getCharCode(offset + 2) === 0x002D &&\r\n                    getCharCode(offset + 3) === 0x002D) {\r\n                    // ... consume them and return a <CDO-token>.\r\n                    type = TYPE.CDO;\r\n                    offset = offset + 4;\r\n                } else {\r\n                    // Otherwise, return a <delim-token> with its value set to the current input code point.\r\n                    type = TYPE.Delim;\r\n                    offset++;\r\n                }\r\n\r\n                break;\r\n\r\n            // U+0040 COMMERCIAL AT (@)\r\n            case 0x0040:\r\n                // If the next 3 input code points would start an identifier, ...\r\n                if (isIdentifierStart(getCharCode(offset + 1), getCharCode(offset + 2), getCharCode(offset + 3))) {\r\n                    // ... consume a name, create an <at-keyword-token> with its value set to the returned value, and return it.\r\n                    type = TYPE.AtKeyword;\r\n                    offset = consumeName(source, offset + 1);\r\n                } else {\r\n                    // Otherwise, return a <delim-token> with its value set to the current input code point.\r\n                    type = TYPE.Delim;\r\n                    offset++;\r\n                }\r\n\r\n                break;\r\n\r\n            // U+005B LEFT SQUARE BRACKET ([)\r\n            case 0x005B:\r\n                // Return a <[-token>.\r\n                type = TYPE.LeftSquareBracket;\r\n                offset++;\r\n                break;\r\n\r\n            // U+005C REVERSE SOLIDUS (\\)\r\n            case 0x005C:\r\n                // If the input stream starts with a valid escape, ...\r\n                if (isValidEscape(code, getCharCode(offset + 1))) {\r\n                    // ... reconsume the current input code point, consume an ident-like token, and return it.\r\n                    consumeIdentLikeToken();\r\n                } else {\r\n                    // Otherwise, this is a parse error. Return a <delim-token> with its value set to the current input code point.\r\n                    type = TYPE.Delim;\r\n                    offset++;\r\n                }\r\n                break;\r\n\r\n            // U+005D RIGHT SQUARE BRACKET (])\r\n            case 0x005D:\r\n                // Return a <]-token>.\r\n                type = TYPE.RightSquareBracket;\r\n                offset++;\r\n                break;\r\n\r\n            // U+007B LEFT CURLY BRACKET ({)\r\n            case 0x007B:\r\n                // Return a <{-token>.\r\n                type = TYPE.LeftCurlyBracket;\r\n                offset++;\r\n                break;\r\n\r\n            // U+007D RIGHT CURLY BRACKET (})\r\n            case 0x007D:\r\n                // Return a <}-token>.\r\n                type = TYPE.RightCurlyBracket;\r\n                offset++;\r\n                break;\r\n\r\n            // digit\r\n            case charCodeCategory.Digit:\r\n                // Reconsume the current input code point, consume a numeric token, and return it.\r\n                consumeNumericToken();\r\n                break;\r\n\r\n            // name-start code point\r\n            case charCodeCategory.NameStart:\r\n                // Reconsume the current input code point, consume an ident-like token, and return it.\r\n                consumeIdentLikeToken();\r\n                break;\r\n\r\n            // EOF\r\n            case charCodeCategory.Eof:\r\n                // Return an <EOF-token>.\r\n                break;\r\n\r\n            // anything else\r\n            default:\r\n                // Return a <delim-token> with its value set to the current input code point.\r\n                type = TYPE.Delim;\r\n                offset++;\r\n        }\r\n\r\n        switch (type) {\r\n            case balanceCloseType:\r\n                balancePrev = balanceStart & OFFSET_MASK;\r\n                balanceStart = balance[balancePrev];\r\n                balanceCloseType = balanceStart >> TYPE_SHIFT;\r\n                balance[tokenCount] = balancePrev;\r\n                balance[balancePrev++] = tokenCount;\r\n                for (; balancePrev < tokenCount; balancePrev++) {\r\n                    if (balance[balancePrev] === sourceLength) {\r\n                        balance[balancePrev] = tokenCount;\r\n                    }\r\n                }\r\n                break;\r\n\r\n            case TYPE.LeftParenthesis:\r\n            case TYPE.Function:\r\n                balance[tokenCount] = balanceStart;\r\n                balanceCloseType = TYPE.RightParenthesis;\r\n                balanceStart = (balanceCloseType << TYPE_SHIFT) | tokenCount;\r\n                break;\r\n\r\n            case TYPE.LeftSquareBracket:\r\n                balance[tokenCount] = balanceStart;\r\n                balanceCloseType = TYPE.RightSquareBracket;\r\n                balanceStart = (balanceCloseType << TYPE_SHIFT) | tokenCount;\r\n                break;\r\n\r\n            case TYPE.LeftCurlyBracket:\r\n                balance[tokenCount] = balanceStart;\r\n                balanceCloseType = TYPE.RightCurlyBracket;\r\n                balanceStart = (balanceCloseType << TYPE_SHIFT) | tokenCount;\r\n                break;\r\n        }\r\n\r\n        offsetAndType[tokenCount++] = (type << TYPE_SHIFT) | offset;\r\n    }\r\n\r\n    // finalize buffers\r\n    offsetAndType[tokenCount] = (TYPE.EOF << TYPE_SHIFT) | offset; // <EOF-token>\r\n    balance[tokenCount] = sourceLength;\r\n    balance[sourceLength] = sourceLength; // prevents false positive balance match with any token\r\n    while (balanceStart !== 0) {\r\n        balancePrev = balanceStart & OFFSET_MASK;\r\n        balanceStart = balance[balancePrev];\r\n        balance[balancePrev] = sourceLength;\r\n    }\r\n\r\n    // update stream\r\n    stream.source = source;\r\n    stream.firstCharOffset = start;\r\n    stream.offsetAndType = offsetAndType;\r\n    stream.tokenCount = tokenCount;\r\n    stream.balance = balance;\r\n    stream.reset();\r\n    stream.next();\r\n\r\n    return stream;\r\n}\r\n\r\n// extend tokenizer with constants\r\nObject.keys(constants).forEach(function(key) {\r\n    tokenize[key] = constants[key];\r\n});\r\n\r\n// extend tokenizer with static methods from utils\r\nObject.keys(charCodeDefinitions).forEach(function(key) {\r\n    tokenize[key] = charCodeDefinitions[key];\r\n});\r\nObject.keys(utils).forEach(function(key) {\r\n    tokenize[key] = utils[key];\r\n});\r\n\r\nmodule.exports = tokenize;\r\n","var isDigit = require('../tokenizer').isDigit;\r\nvar cmpChar = require('../tokenizer').cmpChar;\r\nvar TYPE = require('../tokenizer').TYPE;\r\n\r\nvar DELIM = TYPE.Delim;\r\nvar WHITESPACE = TYPE.WhiteSpace;\r\nvar COMMENT = TYPE.Comment;\r\nvar IDENT = TYPE.Ident;\r\nvar NUMBER = TYPE.Number;\r\nvar DIMENSION = TYPE.Dimension;\r\nvar PLUSSIGN = 0x002B;    // U+002B PLUS SIGN (+)\r\nvar HYPHENMINUS = 0x002D; // U+002D HYPHEN-MINUS (-)\r\nvar N = 0x006E;           // U+006E LATIN SMALL LETTER N (n)\r\nvar DISALLOW_SIGN = true;\r\nvar ALLOW_SIGN = false;\r\n\r\nfunction isDelim(token, code) {\r\n    return token !== null && token.type === DELIM && token.value.charCodeAt(0) === code;\r\n}\r\n\r\nfunction skipSC(token, offset, getNextToken) {\r\n    while (token !== null && (token.type === WHITESPACE || token.type === COMMENT)) {\r\n        token = getNextToken(++offset);\r\n    }\r\n\r\n    return offset;\r\n}\r\n\r\nfunction checkInteger(token, valueOffset, disallowSign, offset) {\r\n    if (!token) {\r\n        return 0;\r\n    }\r\n\r\n    var code = token.value.charCodeAt(valueOffset);\r\n\r\n    if (code === PLUSSIGN || code === HYPHENMINUS) {\r\n        if (disallowSign) {\r\n            // Number sign is not allowed\r\n            return 0;\r\n        }\r\n        valueOffset++;\r\n    }\r\n\r\n    for (; valueOffset < token.value.length; valueOffset++) {\r\n        if (!isDigit(token.value.charCodeAt(valueOffset))) {\r\n            // Integer is expected\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    return offset + 1;\r\n}\r\n\r\n// ... <signed-integer>\r\n// ... ['+' | '-'] <signless-integer>\r\nfunction consumeB(token, offset_, getNextToken) {\r\n    var sign = false;\r\n    var offset = skipSC(token, offset_, getNextToken);\r\n\r\n    token = getNextToken(offset);\r\n\r\n    if (token === null) {\r\n        return offset_;\r\n    }\r\n\r\n    if (token.type !== NUMBER) {\r\n        if (isDelim(token, PLUSSIGN) || isDelim(token, HYPHENMINUS)) {\r\n            sign = true;\r\n            offset = skipSC(getNextToken(++offset), offset, getNextToken);\r\n            token = getNextToken(offset);\r\n\r\n            if (token === null && token.type !== NUMBER) {\r\n                return 0;\r\n            }\r\n        } else {\r\n            return offset_;\r\n        }\r\n    }\r\n\r\n    if (!sign) {\r\n        var code = token.value.charCodeAt(0);\r\n        if (code !== PLUSSIGN && code !== HYPHENMINUS) {\r\n            // Number sign is expected\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    return checkInteger(token, sign ? 0 : 1, sign, offset);\r\n}\r\n\r\n// An+B microsyntax https://www.w3.org/TR/css-syntax-3/#anb\r\nmodule.exports = function anPlusB(token, getNextToken) {\r\n    /* eslint-disable brace-style*/\r\n    var offset = 0;\r\n\r\n    if (!token) {\r\n        return 0;\r\n    }\r\n\r\n    // <integer>\r\n    if (token.type === NUMBER) {\r\n        return checkInteger(token, 0, ALLOW_SIGN, offset); // b\r\n    }\r\n\r\n    // -n\r\n    // -n <signed-integer>\r\n    // -n ['+' | '-'] <signless-integer>\r\n    // -n- <signless-integer>\r\n    // <dashndashdigit-ident>\r\n    else if (token.type === IDENT && token.value.charCodeAt(0) === HYPHENMINUS) {\r\n        // expect 1st char is N\r\n        if (!cmpChar(token.value, 1, N)) {\r\n            return 0;\r\n        }\r\n\r\n        switch (token.value.length) {\r\n            // -n\r\n            // -n <signed-integer>\r\n            // -n ['+' | '-'] <signless-integer>\r\n            case 2:\r\n                return consumeB(getNextToken(++offset), offset, getNextToken);\r\n\r\n            // -n- <signless-integer>\r\n            case 3:\r\n                if (token.value.charCodeAt(2) !== HYPHENMINUS) {\r\n                    return 0;\r\n                }\r\n\r\n                offset = skipSC(getNextToken(++offset), offset, getNextToken);\r\n                token = getNextToken(offset);\r\n\r\n                return checkInteger(token, 0, DISALLOW_SIGN, offset);\r\n\r\n            // <dashndashdigit-ident>\r\n            default:\r\n                if (token.value.charCodeAt(2) !== HYPHENMINUS) {\r\n                    return 0;\r\n                }\r\n\r\n                return checkInteger(token, 3, DISALLOW_SIGN, offset);\r\n        }\r\n    }\r\n\r\n    // '+'? n\r\n    // '+'? n <signed-integer>\r\n    // '+'? n ['+' | '-'] <signless-integer>\r\n    // '+'? n- <signless-integer>\r\n    // '+'? <ndashdigit-ident>\r\n    else if (token.type === IDENT || (isDelim(token, PLUSSIGN) && getNextToken(offset + 1).type === IDENT)) {\r\n        // just ignore a plus\r\n        if (token.type !== IDENT) {\r\n            token = getNextToken(++offset);\r\n        }\r\n\r\n        if (token === null || !cmpChar(token.value, 0, N)) {\r\n            return 0;\r\n        }\r\n\r\n        switch (token.value.length) {\r\n            // '+'? n\r\n            // '+'? n <signed-integer>\r\n            // '+'? n ['+' | '-'] <signless-integer>\r\n            case 1:\r\n                return consumeB(getNextToken(++offset), offset, getNextToken);\r\n\r\n            // '+'? n- <signless-integer>\r\n            case 2:\r\n                if (token.value.charCodeAt(1) !== HYPHENMINUS) {\r\n                    return 0;\r\n                }\r\n\r\n                offset = skipSC(getNextToken(++offset), offset, getNextToken);\r\n                token = getNextToken(offset);\r\n\r\n                return checkInteger(token, 0, DISALLOW_SIGN, offset);\r\n\r\n            // '+'? <ndashdigit-ident>\r\n            default:\r\n                if (token.value.charCodeAt(1) !== HYPHENMINUS) {\r\n                    return 0;\r\n                }\r\n\r\n                return checkInteger(token, 2, DISALLOW_SIGN, offset);\r\n        }\r\n    }\r\n\r\n    // <ndashdigit-dimension>\r\n    // <ndash-dimension> <signless-integer>\r\n    // <n-dimension>\r\n    // <n-dimension> <signed-integer>\r\n    // <n-dimension> ['+' | '-'] <signless-integer>\r\n    else if (token.type === DIMENSION) {\r\n        var code = token.value.charCodeAt(0);\r\n        var sign = code === PLUSSIGN || code === HYPHENMINUS ? 1 : 0;\r\n\r\n        for (var i = sign; i < token.value.length; i++) {\r\n            if (!isDigit(token.value.charCodeAt(i))) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (i === sign) {\r\n            // Integer is expected\r\n            return 0;\r\n        }\r\n\r\n        if (!cmpChar(token.value, i, N)) {\r\n            return 0;\r\n        }\r\n\r\n        // <n-dimension>\r\n        // <n-dimension> <signed-integer>\r\n        // <n-dimension> ['+' | '-'] <signless-integer>\r\n        if (i + 1 === token.value.length) {\r\n            return consumeB(getNextToken(++offset), offset, getNextToken);\r\n        } else {\r\n            if (token.value.charCodeAt(i + 1) !== HYPHENMINUS) {\r\n                return 0;\r\n            }\r\n\r\n            // <ndash-dimension> <signless-integer>\r\n            if (i + 2 === token.value.length) {\r\n                offset = skipSC(getNextToken(++offset), offset, getNextToken);\r\n                token = getNextToken(offset);\r\n\r\n                return checkInteger(token, 0, DISALLOW_SIGN, offset);\r\n            }\r\n            // <ndashdigit-dimension>\r\n            else {\r\n                return checkInteger(token, i + 2, DISALLOW_SIGN, offset);\r\n            }\r\n        }\r\n    }\r\n\r\n    return 0;\r\n};\r\n","var isHexDigit = require('../tokenizer').isHexDigit;\r\nvar cmpChar = require('../tokenizer').cmpChar;\r\nvar TYPE = require('../tokenizer').TYPE;\r\n\r\nvar IDENT = TYPE.Ident;\r\nvar DELIM = TYPE.Delim;\r\nvar NUMBER = TYPE.Number;\r\nvar DIMENSION = TYPE.Dimension;\r\nvar PLUSSIGN = 0x002B;     // U+002B PLUS SIGN (+)\r\nvar HYPHENMINUS = 0x002D;  // U+002D HYPHEN-MINUS (-)\r\nvar QUESTIONMARK = 0x003F; // U+003F QUESTION MARK (?)\r\nvar U = 0x0075;            // U+0075 LATIN SMALL LETTER U (u)\r\n\r\nfunction isDelim(token, code) {\r\n    return token !== null && token.type === DELIM && token.value.charCodeAt(0) === code;\r\n}\r\n\r\nfunction startsWith(token, code) {\r\n    return token.value.charCodeAt(0) === code;\r\n}\r\n\r\nfunction hexSequence(token, offset, allowDash) {\r\n    for (var pos = offset, hexlen = 0; pos < token.value.length; pos++) {\r\n        var code = token.value.charCodeAt(pos);\r\n\r\n        if (code === HYPHENMINUS && allowDash && hexlen !== 0) {\r\n            if (hexSequence(token, offset + hexlen + 1, false) > 0) {\r\n                return 6; // dissallow following question marks\r\n            }\r\n\r\n            return 0; // dash at the ending of a hex sequence is not allowed\r\n        }\r\n\r\n        if (!isHexDigit(code)) {\r\n            return 0; // not a hex digit\r\n        }\r\n\r\n        if (++hexlen > 6) {\r\n            return 0; // too many hex digits\r\n        };\r\n    }\r\n\r\n    return hexlen;\r\n}\r\n\r\nfunction withQuestionMarkSequence(consumed, length, getNextToken) {\r\n    if (!consumed) {\r\n        return 0; // nothing consumed\r\n    }\r\n\r\n    while (isDelim(getNextToken(length), QUESTIONMARK)) {\r\n        if (++consumed > 6) {\r\n            return 0; // too many question marks\r\n        }\r\n\r\n        length++;\r\n    }\r\n\r\n    return length;\r\n}\r\n\r\n// https://drafts.csswg.org/css-syntax/#urange\r\n// Informally, the <urange> production has three forms:\r\n// U+0001\r\n//      Defines a range consisting of a single code point, in this case the code point \"1\".\r\n// U+0001-00ff\r\n//      Defines a range of codepoints between the first and the second value, in this case\r\n//      the range between \"1\" and \"ff\" (255 in decimal) inclusive.\r\n// U+00??\r\n//      Defines a range of codepoints where the \"?\" characters range over all hex digits,\r\n//      in this case defining the same as the value U+0000-00ff.\r\n// In each form, a maximum of 6 digits is allowed for each hexadecimal number (if you treat \"?\" as a hexadecimal digit).\r\n//\r\n// <urange> =\r\n//   u '+' <ident-token> '?'* |\r\n//   u <dimension-token> '?'* |\r\n//   u <number-token> '?'* |\r\n//   u <number-token> <dimension-token> |\r\n//   u <number-token> <number-token> |\r\n//   u '+' '?'+\r\nmodule.exports = function urange(token, getNextToken) {\r\n    var length = 0;\r\n\r\n    // should start with `u` or `U`\r\n    if (token === null || token.type !== IDENT || !cmpChar(token.value, 0, U)) {\r\n        return 0;\r\n    }\r\n\r\n    token = getNextToken(++length);\r\n    if (token === null) {\r\n        return 0;\r\n    }\r\n\r\n    // u '+' <ident-token> '?'*\r\n    // u '+' '?'+\r\n    if (isDelim(token, PLUSSIGN)) {\r\n        token = getNextToken(++length);\r\n        if (token === null) {\r\n            return 0;\r\n        }\r\n\r\n        if (token.type === IDENT) {\r\n            // u '+' <ident-token> '?'*\r\n            return withQuestionMarkSequence(hexSequence(token, 0, true), ++length, getNextToken);\r\n        }\r\n\r\n        if (isDelim(token, QUESTIONMARK)) {\r\n            // u '+' '?'+\r\n            return withQuestionMarkSequence(1, ++length, getNextToken);\r\n        }\r\n\r\n        // Hex digit or question mark is expected\r\n        return 0;\r\n    }\r\n\r\n    // u <number-token> '?'*\r\n    // u <number-token> <dimension-token>\r\n    // u <number-token> <number-token>\r\n    if (token.type === NUMBER) {\r\n        if (!startsWith(token, PLUSSIGN)) {\r\n            return 0;\r\n        }\r\n\r\n        var consumedHexLength = hexSequence(token, 1, true);\r\n        if (consumedHexLength === 0) {\r\n            return 0;\r\n        }\r\n\r\n        token = getNextToken(++length);\r\n        if (token === null) {\r\n            // u <number-token> <eof>\r\n            return length;\r\n        }\r\n\r\n        if (token.type === DIMENSION || token.type === NUMBER) {\r\n            // u <number-token> <dimension-token>\r\n            // u <number-token> <number-token>\r\n            if (!startsWith(token, HYPHENMINUS) || !hexSequence(token, 1, false)) {\r\n                return 0;\r\n            }\r\n\r\n            return length + 1;\r\n        }\r\n\r\n        // u <number-token> '?'*\r\n        return withQuestionMarkSequence(consumedHexLength, length, getNextToken);\r\n    }\r\n\r\n    // u <dimension-token> '?'*\r\n    if (token.type === DIMENSION) {\r\n        if (!startsWith(token, PLUSSIGN)) {\r\n            return 0;\r\n        }\r\n\r\n        return withQuestionMarkSequence(hexSequence(token, 1, true), ++length, getNextToken);\r\n    }\r\n\r\n    return 0;\r\n};\r\n","var tokenizer = require('../tokenizer');\r\nvar isIdentifierStart = tokenizer.isIdentifierStart;\r\nvar isHexDigit = tokenizer.isHexDigit;\r\nvar isDigit = tokenizer.isDigit;\r\nvar cmpStr = tokenizer.cmpStr;\r\nvar consumeNumber = tokenizer.consumeNumber;\r\nvar TYPE = tokenizer.TYPE;\r\nvar anPlusB = require('./generic-an-plus-b');\r\nvar urange = require('./generic-urange');\r\n\r\nvar cssWideKeywords = ['unset', 'initial', 'inherit'];\r\nvar calcFunctionNames = ['calc(', '-moz-calc(', '-webkit-calc('];\r\n\r\n// https://www.w3.org/TR/css-values-3/#lengths\r\nvar LENGTH = {\r\n    // absolute length units\r\n    'px': true,\r\n    'mm': true,\r\n    'cm': true,\r\n    'in': true,\r\n    'pt': true,\r\n    'pc': true,\r\n    'q': true,\r\n\r\n    // relative length units\r\n    'em': true,\r\n    'ex': true,\r\n    'ch': true,\r\n    'rem': true,\r\n\r\n    // viewport-percentage lengths\r\n    'vh': true,\r\n    'vw': true,\r\n    'vmin': true,\r\n    'vmax': true,\r\n    'vm': true\r\n};\r\n\r\nvar ANGLE = {\r\n    'deg': true,\r\n    'grad': true,\r\n    'rad': true,\r\n    'turn': true\r\n};\r\n\r\nvar TIME = {\r\n    's': true,\r\n    'ms': true\r\n};\r\n\r\nvar FREQUENCY = {\r\n    'hz': true,\r\n    'khz': true\r\n};\r\n\r\n// https://www.w3.org/TR/css-values-3/#resolution (https://drafts.csswg.org/css-values/#resolution)\r\nvar RESOLUTION = {\r\n    'dpi': true,\r\n    'dpcm': true,\r\n    'dppx': true,\r\n    'x': true      // https://github.com/w3c/csswg-drafts/issues/461\r\n};\r\n\r\n// https://drafts.csswg.org/css-grid/#fr-unit\r\nvar FLEX = {\r\n    'fr': true\r\n};\r\n\r\n// https://www.w3.org/TR/css3-speech/#mixing-props-voice-volume\r\nvar DECIBEL = {\r\n    'db': true\r\n};\r\n\r\n// https://www.w3.org/TR/css3-speech/#voice-props-voice-pitch\r\nvar SEMITONES = {\r\n    'st': true\r\n};\r\n\r\n// safe char code getter\r\nfunction charCode(str, index) {\r\n    return index < str.length ? str.charCodeAt(index) : 0;\r\n}\r\n\r\nfunction eqStr(actual, expected) {\r\n    return cmpStr(actual, 0, actual.length, expected);\r\n}\r\n\r\nfunction eqStrAny(actual, expected) {\r\n    for (var i = 0; i < expected.length; i++) {\r\n        if (eqStr(actual, expected[i])) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\n// IE postfix hack, i.e. 123\\0 or 123px\\9\r\nfunction isPostfixIeHack(str, offset) {\r\n    if (offset !== str.length - 2) {\r\n        return false;\r\n    }\r\n\r\n    return (\r\n        str.charCodeAt(offset) === 0x005C &&  // U+005C REVERSE SOLIDUS (\\)\r\n        isDigit(str.charCodeAt(offset + 1))\r\n    );\r\n}\r\n\r\nfunction outOfRange(opts, value, numEnd) {\r\n    if (opts && opts.type === 'Range') {\r\n        var num = Number(\r\n            numEnd !== undefined && numEnd !== value.length\r\n                ? value.substr(0, numEnd)\r\n                : value\r\n        );\r\n\r\n        if (isNaN(num)) {\r\n            return true;\r\n        }\r\n\r\n        if (opts.min !== null && num < opts.min) {\r\n            return true;\r\n        }\r\n\r\n        if (opts.max !== null && num > opts.max) {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\nfunction consumeFunction(token, getNextToken) {\r\n    var startIdx = token.index;\r\n    var length = 0;\r\n\r\n    // balanced token consuming\r\n    do {\r\n        length++;\r\n\r\n        if (token.balance <= startIdx) {\r\n            break;\r\n        }\r\n    } while (token = getNextToken(length));\r\n\r\n    return length;\r\n}\r\n\r\n// TODO: implement\r\n// can be used wherever <length>, <frequency>, <angle>, <time>, <percentage>, <number>, or <integer> values are allowed\r\n// https://drafts.csswg.org/css-values/#calc-notation\r\nfunction calc(next) {\r\n    return function(token, getNextToken, opts) {\r\n        if (token === null) {\r\n            return 0;\r\n        }\r\n\r\n        if (token.type === TYPE.Function && eqStrAny(token.value, calcFunctionNames)) {\r\n            return consumeFunction(token, getNextToken);\r\n        }\r\n\r\n        return next(token, getNextToken, opts);\r\n    };\r\n}\r\n\r\nfunction tokenType(expectedTokenType) {\r\n    return function(token) {\r\n        if (token === null || token.type !== expectedTokenType) {\r\n            return 0;\r\n        }\r\n\r\n        return 1;\r\n    };\r\n}\r\n\r\nfunction func(name) {\r\n    name = name + '(';\r\n\r\n    return function(token, getNextToken) {\r\n        if (token !== null && eqStr(token.value, name)) {\r\n            return consumeFunction(token, getNextToken);\r\n        }\r\n\r\n        return 0;\r\n    };\r\n}\r\n\r\n// =========================\r\n// Complex types\r\n//\r\n\r\n// https://drafts.csswg.org/css-values-4/#custom-idents\r\n// 4.2. Author-defined Identifiers: the <custom-ident> type\r\n// Some properties accept arbitrary author-defined identifiers as a component value.\r\n// This generic data type is denoted by <custom-ident>, and represents any valid CSS identifier\r\n// that would not be misinterpreted as a pre-defined keyword in that property’s value definition.\r\n//\r\n// See also: https://developer.mozilla.org/en-US/docs/Web/CSS/custom-ident\r\nfunction customIdent(token) {\r\n    if (token === null || token.type !== TYPE.Ident) {\r\n        return 0;\r\n    }\r\n\r\n    var name = token.value.toLowerCase();\r\n\r\n    // The CSS-wide keywords are not valid <custom-ident>s\r\n    if (eqStrAny(name, cssWideKeywords)) {\r\n        return 0;\r\n    }\r\n\r\n    // The default keyword is reserved and is also not a valid <custom-ident>\r\n    if (eqStr(name, 'default')) {\r\n        return 0;\r\n    }\r\n\r\n    // TODO: ignore property specific keywords (as described https://developer.mozilla.org/en-US/docs/Web/CSS/custom-ident)\r\n    // Specifications using <custom-ident> must specify clearly what other keywords\r\n    // are excluded from <custom-ident>, if any—for example by saying that any pre-defined keywords\r\n    // in that property’s value definition are excluded. Excluded keywords are excluded\r\n    // in all ASCII case permutations.\r\n\r\n    return 1;\r\n}\r\n\r\n// https://drafts.csswg.org/css-variables/#typedef-custom-property-name\r\n// A custom property is any property whose name starts with two dashes (U+002D HYPHEN-MINUS), like --foo.\r\n// The <custom-property-name> production corresponds to this: it’s defined as any valid identifier\r\n// that starts with two dashes, except -- itself, which is reserved for future use by CSS.\r\n// NOTE: Current implementation treat `--` as a valid name since most (all?) major browsers treat it as valid.\r\nfunction customPropertyName(token) {\r\n    // ... defined as any valid identifier\r\n    if (token === null || token.type !== TYPE.Ident) {\r\n        return 0;\r\n    }\r\n\r\n    // ... that starts with two dashes (U+002D HYPHEN-MINUS)\r\n    if (charCode(token.value, 0) !== 0x002D || charCode(token.value, 1) !== 0x002D) {\r\n        return 0;\r\n    }\r\n\r\n    return 1;\r\n}\r\n\r\n// https://drafts.csswg.org/css-color-4/#hex-notation\r\n// The syntax of a <hex-color> is a <hash-token> token whose value consists of 3, 4, 6, or 8 hexadecimal digits.\r\n// In other words, a hex color is written as a hash character, \"#\", followed by some number of digits 0-9 or\r\n// letters a-f (the case of the letters doesn’t matter - #00ff00 is identical to #00FF00).\r\nfunction hexColor(token) {\r\n    if (token === null || token.type !== TYPE.Hash) {\r\n        return 0;\r\n    }\r\n\r\n    var length = token.value.length;\r\n\r\n    // valid values (length): #rgb (4), #rgba (5), #rrggbb (7), #rrggbbaa (9)\r\n    if (length !== 4 && length !== 5 && length !== 7 && length !== 9) {\r\n        return 0;\r\n    }\r\n\r\n    for (var i = 1; i < length; i++) {\r\n        if (!isHexDigit(token.value.charCodeAt(i))) {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    return 1;\r\n}\r\n\r\nfunction idSelector(token) {\r\n    if (token === null || token.type !== TYPE.Hash) {\r\n        return 0;\r\n    }\r\n\r\n    if (!isIdentifierStart(charCode(token.value, 1), charCode(token.value, 2), charCode(token.value, 3))) {\r\n        return 0;\r\n    }\r\n\r\n    return 1;\r\n}\r\n\r\n// https://drafts.csswg.org/css-syntax/#any-value\r\n// It represents the entirety of what a valid declaration can have as its value.\r\nfunction declarationValue(token, getNextToken) {\r\n    if (!token) {\r\n        return 0;\r\n    }\r\n\r\n    var length = 0;\r\n    var level = 0;\r\n    var startIdx = token.index;\r\n\r\n    // The <declaration-value> production matches any sequence of one or more tokens,\r\n    // so long as the sequence ...\r\n    scan:\r\n    do {\r\n        switch (token.type) {\r\n            // ... does not contain <bad-string-token>, <bad-url-token>,\r\n            case TYPE.BadString:\r\n            case TYPE.BadUrl:\r\n                break scan;\r\n\r\n            // ... unmatched <)-token>, <]-token>, or <}-token>,\r\n            case TYPE.RightCurlyBracket:\r\n            case TYPE.RightParenthesis:\r\n            case TYPE.RightSquareBracket:\r\n                if (token.balance > token.index || token.balance < startIdx) {\r\n                    break scan;\r\n                }\r\n\r\n                level--;\r\n                break;\r\n\r\n            // ... or top-level <semicolon-token> tokens\r\n            case TYPE.Semicolon:\r\n                if (level === 0) {\r\n                    break scan;\r\n                }\r\n\r\n                break;\r\n\r\n            // ... or <delim-token> tokens with a value of \"!\"\r\n            case TYPE.Delim:\r\n                if (token.value === '!' && level === 0) {\r\n                    break scan;\r\n                }\r\n\r\n                break;\r\n\r\n            case TYPE.Function:\r\n            case TYPE.LeftParenthesis:\r\n            case TYPE.LeftSquareBracket:\r\n            case TYPE.LeftCurlyBracket:\r\n                level++;\r\n                break;\r\n        }\r\n\r\n        length++;\r\n\r\n        // until balance closing\r\n        if (token.balance <= startIdx) {\r\n            break;\r\n        }\r\n    } while (token = getNextToken(length));\r\n\r\n    return length;\r\n}\r\n\r\n// https://drafts.csswg.org/css-syntax/#any-value\r\n// The <any-value> production is identical to <declaration-value>, but also\r\n// allows top-level <semicolon-token> tokens and <delim-token> tokens\r\n// with a value of \"!\". It represents the entirety of what valid CSS can be in any context.\r\nfunction anyValue(token, getNextToken) {\r\n    if (!token) {\r\n        return 0;\r\n    }\r\n\r\n    var startIdx = token.index;\r\n    var length = 0;\r\n\r\n    // The <any-value> production matches any sequence of one or more tokens,\r\n    // so long as the sequence ...\r\n    scan:\r\n    do {\r\n        switch (token.type) {\r\n            // ... does not contain <bad-string-token>, <bad-url-token>,\r\n            case TYPE.BadString:\r\n            case TYPE.BadUrl:\r\n                break scan;\r\n\r\n            // ... unmatched <)-token>, <]-token>, or <}-token>,\r\n            case TYPE.RightCurlyBracket:\r\n            case TYPE.RightParenthesis:\r\n            case TYPE.RightSquareBracket:\r\n                if (token.balance > token.index || token.balance < startIdx) {\r\n                    break scan;\r\n                }\r\n\r\n                break;\r\n        }\r\n\r\n        length++;\r\n\r\n        // until balance closing\r\n        if (token.balance <= startIdx) {\r\n            break;\r\n        }\r\n    } while (token = getNextToken(length));\r\n\r\n    return length;\r\n}\r\n\r\n// =========================\r\n// Dimensions\r\n//\r\n\r\nfunction dimension(type) {\r\n    return function(token, getNextToken, opts) {\r\n        if (token === null || token.type !== TYPE.Dimension) {\r\n            return 0;\r\n        }\r\n\r\n        var numberEnd = consumeNumber(token.value, 0);\r\n\r\n        // check unit\r\n        if (type !== null) {\r\n            // check for IE postfix hack, i.e. 123px\\0 or 123px\\9\r\n            var reverseSolidusOffset = token.value.indexOf('\\\\', numberEnd);\r\n            var unit = reverseSolidusOffset === -1 || !isPostfixIeHack(token.value, reverseSolidusOffset)\r\n                ? token.value.substr(numberEnd)\r\n                : token.value.substring(numberEnd, reverseSolidusOffset);\r\n\r\n            if (type.hasOwnProperty(unit.toLowerCase()) === false) {\r\n                return 0;\r\n            }\r\n        }\r\n\r\n        // check range if specified\r\n        if (outOfRange(opts, token.value, numberEnd)) {\r\n            return 0;\r\n        }\r\n\r\n        return 1;\r\n    };\r\n}\r\n\r\n// =========================\r\n// Percentage\r\n//\r\n\r\n// §5.5. Percentages: the <percentage> type\r\n// https://drafts.csswg.org/css-values-4/#percentages\r\nfunction percentage(token, getNextToken, opts) {\r\n    // ... corresponds to the <percentage-token> production\r\n    if (token === null || token.type !== TYPE.Percentage) {\r\n        return 0;\r\n    }\r\n\r\n    // check range if specified\r\n    if (outOfRange(opts, token.value, token.value.length - 1)) {\r\n        return 0;\r\n    }\r\n\r\n    return 1;\r\n}\r\n\r\n// =========================\r\n// Numeric\r\n//\r\n\r\n// https://drafts.csswg.org/css-values-4/#numbers\r\n// The value <zero> represents a literal number with the value 0. Expressions that merely\r\n// evaluate to a <number> with the value 0 (for example, calc(0)) do not match <zero>;\r\n// only literal <number-token>s do.\r\nfunction zero(next) {\r\n    if (typeof next !== 'function') {\r\n        next = function() {\r\n            return 0;\r\n        };\r\n    }\r\n\r\n    return function(token, getNextToken, opts) {\r\n        if (token !== null && token.type === TYPE.Number) {\r\n            if (Number(token.value) === 0) {\r\n                return 1;\r\n            }\r\n        }\r\n\r\n        return next(token, getNextToken, opts);\r\n    };\r\n}\r\n\r\n// § 5.3. Real Numbers: the <number> type\r\n// https://drafts.csswg.org/css-values-4/#numbers\r\n// Number values are denoted by <number>, and represent real numbers, possibly with a fractional component.\r\n// ... It corresponds to the <number-token> production\r\nfunction number(token, getNextToken, opts) {\r\n    if (token === null) {\r\n        return 0;\r\n    }\r\n\r\n    var numberEnd = consumeNumber(token.value, 0);\r\n    var isNumber = numberEnd === token.value.length;\r\n    if (!isNumber && !isPostfixIeHack(token.value, numberEnd)) {\r\n        return 0;\r\n    }\r\n\r\n    // check range if specified\r\n    if (outOfRange(opts, token.value, numberEnd)) {\r\n        return 0;\r\n    }\r\n\r\n    return 1;\r\n}\r\n\r\n// §5.2. Integers: the <integer> type\r\n// https://drafts.csswg.org/css-values-4/#integers\r\nfunction integer(token, getNextToken, opts) {\r\n    // ... corresponds to a subset of the <number-token> production\r\n    if (token === null || token.type !== TYPE.Number) {\r\n        return 0;\r\n    }\r\n\r\n    // The first digit of an integer may be immediately preceded by `-` or `+` to indicate the integer’s sign.\r\n    var i = token.value.charCodeAt(0) === 0x002B ||       // U+002B PLUS SIGN (+)\r\n            token.value.charCodeAt(0) === 0x002D ? 1 : 0; // U+002D HYPHEN-MINUS (-)\r\n\r\n    // When written literally, an integer is one or more decimal digits 0 through 9 ...\r\n    for (; i < token.value.length; i++) {\r\n        if (!isDigit(token.value.charCodeAt(i))) {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    // check range if specified\r\n    if (outOfRange(opts, token.value, i)) {\r\n        return 0;\r\n    }\r\n\r\n    return 1;\r\n}\r\n\r\nmodule.exports = {\r\n    // token types\r\n    'ident-token': tokenType(TYPE.Ident),\r\n    'function-token': tokenType(TYPE.Function),\r\n    'at-keyword-token': tokenType(TYPE.AtKeyword),\r\n    'hash-token': tokenType(TYPE.Hash),\r\n    'string-token': tokenType(TYPE.String),\r\n    'bad-string-token': tokenType(TYPE.BadString),\r\n    'url-token': tokenType(TYPE.Url),\r\n    'bad-url-token': tokenType(TYPE.BadUrl),\r\n    'delim-token': tokenType(TYPE.Delim),\r\n    'number-token': tokenType(TYPE.Number),\r\n    'percentage-token': tokenType(TYPE.Percentage),\r\n    'dimension-token': tokenType(TYPE.Dimension),\r\n    'whitespace-token': tokenType(TYPE.WhiteSpace),\r\n    'CDO-token': tokenType(TYPE.CDO),\r\n    'CDC-token': tokenType(TYPE.CDC),\r\n    'colon-token': tokenType(TYPE.Colon),\r\n    'semicolon-token': tokenType(TYPE.Semicolon),\r\n    'comma-token': tokenType(TYPE.Comma),\r\n    '[-token': tokenType(TYPE.LeftSquareBracket),\r\n    ']-token': tokenType(TYPE.RightSquareBracket),\r\n    '(-token': tokenType(TYPE.LeftParenthesis),\r\n    ')-token': tokenType(TYPE.RightParenthesis),\r\n    '{-token': tokenType(TYPE.LeftCurlyBracket),\r\n    '}-token': tokenType(TYPE.RightCurlyBracket),\r\n\r\n    // token type aliases\r\n    'string': tokenType(TYPE.String),\r\n    'ident': tokenType(TYPE.Ident),\r\n\r\n    // complex types\r\n    'custom-ident': customIdent,\r\n    'custom-property-name': customPropertyName,\r\n    'hex-color': hexColor,\r\n    'id-selector': idSelector, // element( <id-selector> )\r\n    'an-plus-b': anPlusB,\r\n    'urange': urange,\r\n    'declaration-value': declarationValue,\r\n    'any-value': anyValue,\r\n\r\n    // dimensions\r\n    'dimension': calc(dimension(null)),\r\n    'angle': calc(dimension(ANGLE)),\r\n    'decibel': calc(dimension(DECIBEL)),\r\n    'frequency': calc(dimension(FREQUENCY)),\r\n    'flex': calc(dimension(FLEX)),\r\n    'length': calc(zero(dimension(LENGTH))),\r\n    'resolution': calc(dimension(RESOLUTION)),\r\n    'semitones': calc(dimension(SEMITONES)),\r\n    'time': calc(dimension(TIME)),\r\n\r\n    // percentage\r\n    'percentage': calc(percentage),\r\n\r\n    // numeric\r\n    'zero': zero(),\r\n    'number': calc(number),\r\n    'integer': calc(integer),\r\n\r\n    // old IE stuff\r\n    '-ms-legacy-expression': func('expression')\r\n};\r\n","var createCustomError = require('../utils/createCustomError');\r\n\r\nmodule.exports = function SyntaxError(message, input, offset) {\r\n    var error = createCustomError('SyntaxError', message);\r\n\r\n    error.input = input;\r\n    error.offset = offset;\r\n    error.rawMessage = message;\r\n    error.message = error.rawMessage + '\\n' +\r\n        '  ' + error.input + '\\n' +\r\n        '--' + new Array((error.offset || error.input.length) + 1).join('-') + '^';\r\n\r\n    return error;\r\n};\r\n","var SyntaxError = require('./SyntaxError');\r\n\r\nvar TAB = 9;\r\nvar N = 10;\r\nvar F = 12;\r\nvar R = 13;\r\nvar SPACE = 32;\r\n\r\nvar Tokenizer = function(str) {\r\n    this.str = str;\r\n    this.pos = 0;\r\n};\r\n\r\nTokenizer.prototype = {\r\n    charCodeAt: function(pos) {\r\n        return pos < this.str.length ? this.str.charCodeAt(pos) : 0;\r\n    },\r\n    charCode: function() {\r\n        return this.charCodeAt(this.pos);\r\n    },\r\n    nextCharCode: function() {\r\n        return this.charCodeAt(this.pos + 1);\r\n    },\r\n    nextNonWsCode: function(pos) {\r\n        return this.charCodeAt(this.findWsEnd(pos));\r\n    },\r\n    findWsEnd: function(pos) {\r\n        for (; pos < this.str.length; pos++) {\r\n            var code = this.str.charCodeAt(pos);\r\n            if (code !== R && code !== N && code !== F && code !== SPACE && code !== TAB) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        return pos;\r\n    },\r\n    substringToPos: function(end) {\r\n        return this.str.substring(this.pos, this.pos = end);\r\n    },\r\n    eat: function(code) {\r\n        if (this.charCode() !== code) {\r\n            this.error('Expect `' + String.fromCharCode(code) + '`');\r\n        }\r\n\r\n        this.pos++;\r\n    },\r\n    peek: function() {\r\n        return this.pos < this.str.length ? this.str.charAt(this.pos++) : '';\r\n    },\r\n    error: function(message) {\r\n        throw new SyntaxError(message, this.str, this.pos);\r\n    }\r\n};\r\n\r\nmodule.exports = Tokenizer;\r\n","var Tokenizer = require('./tokenizer');\r\nvar TAB = 9;\r\nvar N = 10;\r\nvar F = 12;\r\nvar R = 13;\r\nvar SPACE = 32;\r\nvar EXCLAMATIONMARK = 33;    // !\r\nvar NUMBERSIGN = 35;         // #\r\nvar AMPERSAND = 38;          // &\r\nvar APOSTROPHE = 39;         // '\r\nvar LEFTPARENTHESIS = 40;    // (\r\nvar RIGHTPARENTHESIS = 41;   // )\r\nvar ASTERISK = 42;           // *\r\nvar PLUSSIGN = 43;           // +\r\nvar COMMA = 44;              // ,\r\nvar HYPERMINUS = 45;         // -\r\nvar LESSTHANSIGN = 60;       // <\r\nvar GREATERTHANSIGN = 62;    // >\r\nvar QUESTIONMARK = 63;       // ?\r\nvar COMMERCIALAT = 64;       // @\r\nvar LEFTSQUAREBRACKET = 91;  // [\r\nvar RIGHTSQUAREBRACKET = 93; // ]\r\nvar LEFTCURLYBRACKET = 123;  // {\r\nvar VERTICALLINE = 124;      // |\r\nvar RIGHTCURLYBRACKET = 125; // }\r\nvar INFINITY = 8734;         // ∞\r\nvar NAME_CHAR = createCharMap(function(ch) {\r\n    return /[a-zA-Z0-9\\-]/.test(ch);\r\n});\r\nvar COMBINATOR_PRECEDENCE = {\r\n    ' ': 1,\r\n    '&&': 2,\r\n    '||': 3,\r\n    '|': 4\r\n};\r\n\r\nfunction createCharMap(fn) {\r\n    var array = typeof Uint32Array === 'function' ? new Uint32Array(128) : new Array(128);\r\n    for (var i = 0; i < 128; i++) {\r\n        array[i] = fn(String.fromCharCode(i)) ? 1 : 0;\r\n    }\r\n    return array;\r\n}\r\n\r\nfunction scanSpaces(tokenizer) {\r\n    return tokenizer.substringToPos(\r\n        tokenizer.findWsEnd(tokenizer.pos)\r\n    );\r\n}\r\n\r\nfunction scanWord(tokenizer) {\r\n    var end = tokenizer.pos;\r\n\r\n    for (; end < tokenizer.str.length; end++) {\r\n        var code = tokenizer.str.charCodeAt(end);\r\n        if (code >= 128 || NAME_CHAR[code] === 0) {\r\n            break;\r\n        }\r\n    }\r\n\r\n    if (tokenizer.pos === end) {\r\n        tokenizer.error('Expect a keyword');\r\n    }\r\n\r\n    return tokenizer.substringToPos(end);\r\n}\r\n\r\nfunction scanNumber(tokenizer) {\r\n    var end = tokenizer.pos;\r\n\r\n    for (; end < tokenizer.str.length; end++) {\r\n        var code = tokenizer.str.charCodeAt(end);\r\n        if (code < 48 || code > 57) {\r\n            break;\r\n        }\r\n    }\r\n\r\n    if (tokenizer.pos === end) {\r\n        tokenizer.error('Expect a number');\r\n    }\r\n\r\n    return tokenizer.substringToPos(end);\r\n}\r\n\r\nfunction scanString(tokenizer) {\r\n    var end = tokenizer.str.indexOf('\\'', tokenizer.pos + 1);\r\n\r\n    if (end === -1) {\r\n        tokenizer.pos = tokenizer.str.length;\r\n        tokenizer.error('Expect an apostrophe');\r\n    }\r\n\r\n    return tokenizer.substringToPos(end + 1);\r\n}\r\n\r\nfunction readMultiplierRange(tokenizer) {\r\n    var min = null;\r\n    var max = null;\r\n\r\n    tokenizer.eat(LEFTCURLYBRACKET);\r\n\r\n    min = scanNumber(tokenizer);\r\n\r\n    if (tokenizer.charCode() === COMMA) {\r\n        tokenizer.pos++;\r\n        if (tokenizer.charCode() !== RIGHTCURLYBRACKET) {\r\n            max = scanNumber(tokenizer);\r\n        }\r\n    } else {\r\n        max = min;\r\n    }\r\n\r\n    tokenizer.eat(RIGHTCURLYBRACKET);\r\n\r\n    return {\r\n        min: Number(min),\r\n        max: max ? Number(max) : 0\r\n    };\r\n}\r\n\r\nfunction readMultiplier(tokenizer) {\r\n    var range = null;\r\n    var comma = false;\r\n\r\n    switch (tokenizer.charCode()) {\r\n        case ASTERISK:\r\n            tokenizer.pos++;\r\n\r\n            range = {\r\n                min: 0,\r\n                max: 0\r\n            };\r\n\r\n            break;\r\n\r\n        case PLUSSIGN:\r\n            tokenizer.pos++;\r\n\r\n            range = {\r\n                min: 1,\r\n                max: 0\r\n            };\r\n\r\n            break;\r\n\r\n        case QUESTIONMARK:\r\n            tokenizer.pos++;\r\n\r\n            range = {\r\n                min: 0,\r\n                max: 1\r\n            };\r\n\r\n            break;\r\n\r\n        case NUMBERSIGN:\r\n            tokenizer.pos++;\r\n\r\n            comma = true;\r\n\r\n            if (tokenizer.charCode() === LEFTCURLYBRACKET) {\r\n                range = readMultiplierRange(tokenizer);\r\n            } else {\r\n                range = {\r\n                    min: 1,\r\n                    max: 0\r\n                };\r\n            }\r\n\r\n            break;\r\n\r\n        case LEFTCURLYBRACKET:\r\n            range = readMultiplierRange(tokenizer);\r\n            break;\r\n\r\n        default:\r\n            return null;\r\n    }\r\n\r\n    return {\r\n        type: 'Multiplier',\r\n        comma: comma,\r\n        min: range.min,\r\n        max: range.max,\r\n        term: null\r\n    };\r\n}\r\n\r\nfunction maybeMultiplied(tokenizer, node) {\r\n    var multiplier = readMultiplier(tokenizer);\r\n\r\n    if (multiplier !== null) {\r\n        multiplier.term = node;\r\n        return multiplier;\r\n    }\r\n\r\n    return node;\r\n}\r\n\r\nfunction maybeToken(tokenizer) {\r\n    var ch = tokenizer.peek();\r\n\r\n    if (ch === '') {\r\n        return null;\r\n    }\r\n\r\n    return {\r\n        type: 'Token',\r\n        value: ch\r\n    };\r\n}\r\n\r\nfunction readProperty(tokenizer) {\r\n    var name;\r\n\r\n    tokenizer.eat(LESSTHANSIGN);\r\n    tokenizer.eat(APOSTROPHE);\r\n\r\n    name = scanWord(tokenizer);\r\n\r\n    tokenizer.eat(APOSTROPHE);\r\n    tokenizer.eat(GREATERTHANSIGN);\r\n\r\n    return maybeMultiplied(tokenizer, {\r\n        type: 'Property',\r\n        name: name\r\n    });\r\n}\r\n\r\n// https://drafts.csswg.org/css-values-3/#numeric-ranges\r\n// 4.1. Range Restrictions and Range Definition Notation\r\n//\r\n// Range restrictions can be annotated in the numeric type notation using CSS bracketed\r\n// range notation—[min,max]—within the angle brackets, after the identifying keyword,\r\n// indicating a closed range between (and including) min and max.\r\n// For example, <integer [0, 10]> indicates an integer between 0 and 10, inclusive.\r\nfunction readTypeRange(tokenizer) {\r\n    // use null for Infinity to make AST format JSON serializable/deserializable\r\n    var min = null; // -Infinity\r\n    var max = null; // Infinity\r\n    var sign = 1;\r\n\r\n    tokenizer.eat(LEFTSQUAREBRACKET);\r\n\r\n    if (tokenizer.charCode() === HYPERMINUS) {\r\n        tokenizer.peek();\r\n        sign = -1;\r\n    }\r\n\r\n    if (sign == -1 && tokenizer.charCode() === INFINITY) {\r\n        tokenizer.peek();\r\n    } else {\r\n        min = sign * Number(scanNumber(tokenizer));\r\n    }\r\n\r\n    scanSpaces(tokenizer);\r\n    tokenizer.eat(COMMA);\r\n    scanSpaces(tokenizer);\r\n\r\n    if (tokenizer.charCode() === INFINITY) {\r\n        tokenizer.peek();\r\n    } else {\r\n        sign = 1;\r\n\r\n        if (tokenizer.charCode() === HYPERMINUS) {\r\n            tokenizer.peek();\r\n            sign = -1;\r\n        }\r\n\r\n        max = sign * Number(scanNumber(tokenizer));\r\n    }\r\n\r\n    tokenizer.eat(RIGHTSQUAREBRACKET);\r\n\r\n    // If no range is indicated, either by using the bracketed range notation\r\n    // or in the property description, then [−∞,∞] is assumed.\r\n    if (min === null && max === null) {\r\n        return null;\r\n    }\r\n\r\n    return {\r\n        type: 'Range',\r\n        min: min,\r\n        max: max\r\n    };\r\n}\r\n\r\nfunction readType(tokenizer) {\r\n    var name;\r\n    var opts = null;\r\n\r\n    tokenizer.eat(LESSTHANSIGN);\r\n    name = scanWord(tokenizer);\r\n\r\n    if (tokenizer.charCode() === LEFTPARENTHESIS &&\r\n        tokenizer.nextCharCode() === RIGHTPARENTHESIS) {\r\n        tokenizer.pos += 2;\r\n        name += '()';\r\n    }\r\n\r\n    if (tokenizer.charCodeAt(tokenizer.findWsEnd(tokenizer.pos)) === LEFTSQUAREBRACKET) {\r\n        scanSpaces(tokenizer);\r\n        opts = readTypeRange(tokenizer);\r\n    }\r\n\r\n    tokenizer.eat(GREATERTHANSIGN);\r\n\r\n    return maybeMultiplied(tokenizer, {\r\n        type: 'Type',\r\n        name: name,\r\n        opts: opts\r\n    });\r\n}\r\n\r\nfunction readKeywordOrFunction(tokenizer) {\r\n    var name;\r\n\r\n    name = scanWord(tokenizer);\r\n\r\n    if (tokenizer.charCode() === LEFTPARENTHESIS) {\r\n        tokenizer.pos++;\r\n\r\n        return {\r\n            type: 'Function',\r\n            name: name\r\n        };\r\n    }\r\n\r\n    return maybeMultiplied(tokenizer, {\r\n        type: 'Keyword',\r\n        name: name\r\n    });\r\n}\r\n\r\nfunction regroupTerms(terms, combinators) {\r\n    function createGroup(terms, combinator) {\r\n        return {\r\n            type: 'Group',\r\n            terms: terms,\r\n            combinator: combinator,\r\n            disallowEmpty: false,\r\n            explicit: false\r\n        };\r\n    }\r\n\r\n    combinators = Object.keys(combinators).sort(function(a, b) {\r\n        return COMBINATOR_PRECEDENCE[a] - COMBINATOR_PRECEDENCE[b];\r\n    });\r\n\r\n    while (combinators.length > 0) {\r\n        var combinator = combinators.shift();\r\n        for (var i = 0, subgroupStart = 0; i < terms.length; i++) {\r\n            var term = terms[i];\r\n            if (term.type === 'Combinator') {\r\n                if (term.value === combinator) {\r\n                    if (subgroupStart === -1) {\r\n                        subgroupStart = i - 1;\r\n                    }\r\n                    terms.splice(i, 1);\r\n                    i--;\r\n                } else {\r\n                    if (subgroupStart !== -1 && i - subgroupStart > 1) {\r\n                        terms.splice(\r\n                            subgroupStart,\r\n                            i - subgroupStart,\r\n                            createGroup(terms.slice(subgroupStart, i), combinator)\r\n                        );\r\n                        i = subgroupStart + 1;\r\n                    }\r\n                    subgroupStart = -1;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (subgroupStart !== -1 && combinators.length) {\r\n            terms.splice(\r\n                subgroupStart,\r\n                i - subgroupStart,\r\n                createGroup(terms.slice(subgroupStart, i), combinator)\r\n            );\r\n        }\r\n    }\r\n\r\n    return combinator;\r\n}\r\n\r\nfunction readImplicitGroup(tokenizer) {\r\n    var terms = [];\r\n    var combinators = {};\r\n    var token;\r\n    var prevToken = null;\r\n    var prevTokenPos = tokenizer.pos;\r\n\r\n    while (token = peek(tokenizer)) {\r\n        if (token.type !== 'Spaces') {\r\n            if (token.type === 'Combinator') {\r\n                // check for combinator in group beginning and double combinator sequence\r\n                if (prevToken === null || prevToken.type === 'Combinator') {\r\n                    tokenizer.pos = prevTokenPos;\r\n                    tokenizer.error('Unexpected combinator');\r\n                }\r\n\r\n                combinators[token.value] = true;\r\n            } else if (prevToken !== null && prevToken.type !== 'Combinator') {\r\n                combinators[' '] = true;  // a b\r\n                terms.push({\r\n                    type: 'Combinator',\r\n                    value: ' '\r\n                });\r\n            }\r\n\r\n            terms.push(token);\r\n            prevToken = token;\r\n            prevTokenPos = tokenizer.pos;\r\n        }\r\n    }\r\n\r\n    // check for combinator in group ending\r\n    if (prevToken !== null && prevToken.type === 'Combinator') {\r\n        tokenizer.pos -= prevTokenPos;\r\n        tokenizer.error('Unexpected combinator');\r\n    }\r\n\r\n    return {\r\n        type: 'Group',\r\n        terms: terms,\r\n        combinator: regroupTerms(terms, combinators) || ' ',\r\n        disallowEmpty: false,\r\n        explicit: false\r\n    };\r\n}\r\n\r\nfunction readGroup(tokenizer) {\r\n    var result;\r\n\r\n    tokenizer.eat(LEFTSQUAREBRACKET);\r\n    result = readImplicitGroup(tokenizer);\r\n    tokenizer.eat(RIGHTSQUAREBRACKET);\r\n\r\n    result.explicit = true;\r\n\r\n    if (tokenizer.charCode() === EXCLAMATIONMARK) {\r\n        tokenizer.pos++;\r\n        result.disallowEmpty = true;\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nfunction peek(tokenizer) {\r\n    var code = tokenizer.charCode();\r\n\r\n    if (code < 128 && NAME_CHAR[code] === 1) {\r\n        return readKeywordOrFunction(tokenizer);\r\n    }\r\n\r\n    switch (code) {\r\n        case RIGHTSQUAREBRACKET:\r\n            // don't eat, stop scan a group\r\n            break;\r\n\r\n        case LEFTSQUAREBRACKET:\r\n            return maybeMultiplied(tokenizer, readGroup(tokenizer));\r\n\r\n        case LESSTHANSIGN:\r\n            return tokenizer.nextCharCode() === APOSTROPHE\r\n                ? readProperty(tokenizer)\r\n                : readType(tokenizer);\r\n\r\n        case VERTICALLINE:\r\n            return {\r\n                type: 'Combinator',\r\n                value: tokenizer.substringToPos(\r\n                    tokenizer.nextCharCode() === VERTICALLINE\r\n                        ? tokenizer.pos + 2\r\n                        : tokenizer.pos + 1\r\n                )\r\n            };\r\n\r\n        case AMPERSAND:\r\n            tokenizer.pos++;\r\n            tokenizer.eat(AMPERSAND);\r\n\r\n            return {\r\n                type: 'Combinator',\r\n                value: '&&'\r\n            };\r\n\r\n        case COMMA:\r\n            tokenizer.pos++;\r\n            return {\r\n                type: 'Comma'\r\n            };\r\n\r\n        case APOSTROPHE:\r\n            return maybeMultiplied(tokenizer, {\r\n                type: 'String',\r\n                value: scanString(tokenizer)\r\n            });\r\n\r\n        case SPACE:\r\n        case TAB:\r\n        case N:\r\n        case R:\r\n        case F:\r\n            return {\r\n                type: 'Spaces',\r\n                value: scanSpaces(tokenizer)\r\n            };\r\n\r\n        case COMMERCIALAT:\r\n            code = tokenizer.nextCharCode();\r\n\r\n            if (code < 128 && NAME_CHAR[code] === 1) {\r\n                tokenizer.pos++;\r\n                return {\r\n                    type: 'AtKeyword',\r\n                    name: scanWord(tokenizer)\r\n                };\r\n            }\r\n\r\n            return maybeToken(tokenizer);\r\n\r\n        case ASTERISK:\r\n        case PLUSSIGN:\r\n        case QUESTIONMARK:\r\n        case NUMBERSIGN:\r\n        case EXCLAMATIONMARK:\r\n            // prohibited tokens (used as a multiplier start)\r\n            break;\r\n\r\n        case LEFTCURLYBRACKET:\r\n            // LEFTCURLYBRACKET is allowed since mdn/data uses it w/o quoting\r\n            // check next char isn't a number, because it's likely a disjoined multiplier\r\n            code = tokenizer.nextCharCode();\r\n\r\n            if (code < 48 || code > 57) {\r\n                return maybeToken(tokenizer);\r\n            }\r\n\r\n            break;\r\n\r\n        default:\r\n            return maybeToken(tokenizer);\r\n    }\r\n}\r\n\r\nfunction parse(source) {\r\n    var tokenizer = new Tokenizer(source);\r\n    var result = readImplicitGroup(tokenizer);\r\n\r\n    if (tokenizer.pos !== source.length) {\r\n        tokenizer.error('Unexpected input');\r\n    }\r\n\r\n    // reduce redundant groups with single group term\r\n    if (result.terms.length === 1 && result.terms[0].type === 'Group') {\r\n        result = result.terms[0];\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\n// warm up parse to elimitate code branches that never execute\r\n// fix soft deoptimizations (insufficient type feedback)\r\nparse('[a&&<b>#|<\\'c\\'>*||e() f{2} /,(% g#{1,2} h{2,})]!');\r\n\r\nmodule.exports = parse;\r\n","var noop = function() {};\r\n\r\nfunction ensureFunction(value) {\r\n    return typeof value === 'function' ? value : noop;\r\n}\r\n\r\nmodule.exports = function(node, options, context) {\r\n    function walk(node) {\r\n        enter.call(context, node);\r\n\r\n        switch (node.type) {\r\n            case 'Group':\r\n                node.terms.forEach(walk);\r\n                break;\r\n\r\n            case 'Multiplier':\r\n                walk(node.term);\r\n                break;\r\n\r\n            case 'Type':\r\n            case 'Property':\r\n            case 'Keyword':\r\n            case 'AtKeyword':\r\n            case 'Function':\r\n            case 'String':\r\n            case 'Token':\r\n            case 'Comma':\r\n                break;\r\n\r\n            default:\r\n                throw new Error('Unknown type: ' + node.type);\r\n        }\r\n\r\n        leave.call(context, node);\r\n    }\r\n\r\n    var enter = noop;\r\n    var leave = noop;\r\n\r\n    if (typeof options === 'function') {\r\n        enter = options;\r\n    } else if (options) {\r\n        enter = ensureFunction(options.enter);\r\n        leave = ensureFunction(options.leave);\r\n    }\r\n\r\n    if (enter === noop && leave === noop) {\r\n        throw new Error('Neither `enter` nor `leave` walker handler is set or both aren\\'t a function');\r\n    }\r\n\r\n    walk(node, context);\r\n};\r\n","var tokenize = require('../tokenizer');\r\nvar TokenStream = require('../common/TokenStream');\r\nvar tokenStream = new TokenStream();\r\nvar astToTokens = {\r\n    decorator: function(handlers) {\r\n        var curNode = null;\r\n        var prev = { len: 0, node: null };\r\n        var nodes = [prev];\r\n        var buffer = '';\r\n\r\n        return {\r\n            children: handlers.children,\r\n            node: function(node) {\r\n                var tmp = curNode;\r\n                curNode = node;\r\n                handlers.node.call(this, node);\r\n                curNode = tmp;\r\n            },\r\n            chunk: function(chunk) {\r\n                buffer += chunk;\r\n                if (prev.node !== curNode) {\r\n                    nodes.push({\r\n                        len: chunk.length,\r\n                        node: curNode\r\n                    });\r\n                } else {\r\n                    prev.len += chunk.length;\r\n                }\r\n            },\r\n            result: function() {\r\n                return prepareTokens(buffer, nodes);\r\n            }\r\n        };\r\n    }\r\n};\r\n\r\nfunction prepareTokens(str, nodes) {\r\n    var tokens = [];\r\n    var nodesOffset = 0;\r\n    var nodesIndex = 0;\r\n    var currentNode = nodes ? nodes[nodesIndex].node : null;\r\n\r\n    tokenize(str, tokenStream);\r\n\r\n    while (!tokenStream.eof) {\r\n        if (nodes) {\r\n            while (nodesIndex < nodes.length && nodesOffset + nodes[nodesIndex].len <= tokenStream.tokenStart) {\r\n                nodesOffset += nodes[nodesIndex++].len;\r\n                currentNode = nodes[nodesIndex].node;\r\n            }\r\n        }\r\n\r\n        tokens.push({\r\n            type: tokenStream.tokenType,\r\n            value: tokenStream.getTokenValue(),\r\n            index: tokenStream.tokenIndex, // TODO: remove it, temporary solution\r\n            balance: tokenStream.balance[tokenStream.tokenIndex], // TODO: remove it, temporary solution\r\n            node: currentNode\r\n        });\r\n        tokenStream.next();\r\n        // console.log({ ...tokens[tokens.length - 1], node: undefined });\r\n    }\r\n\r\n    return tokens;\r\n}\r\n\r\nmodule.exports = function(value, syntax) {\r\n    if (typeof value === 'string') {\r\n        return prepareTokens(value, null);\r\n    }\r\n\r\n    return syntax.generate(value, astToTokens);\r\n};\r\n","var parse = require('../definition-syntax/parse');\r\n\r\nvar MATCH = { type: 'Match' };\r\nvar MISMATCH = { type: 'Mismatch' };\r\nvar DISALLOW_EMPTY = { type: 'DisallowEmpty' };\r\nvar LEFTPARENTHESIS = 40;  // (\r\nvar RIGHTPARENTHESIS = 41; // )\r\n\r\nfunction createCondition(match, thenBranch, elseBranch) {\r\n    // reduce node count\r\n    if (thenBranch === MATCH && elseBranch === MISMATCH) {\r\n        return match;\r\n    }\r\n\r\n    if (match === MATCH && thenBranch === MATCH && elseBranch === MATCH) {\r\n        return match;\r\n    }\r\n\r\n    if (match.type === 'If' && match.else === MISMATCH && thenBranch === MATCH) {\r\n        thenBranch = match.then;\r\n        match = match.match;\r\n    }\r\n\r\n    return {\r\n        type: 'If',\r\n        match: match,\r\n        then: thenBranch,\r\n        else: elseBranch\r\n    };\r\n}\r\n\r\nfunction isFunctionType(name) {\r\n    return (\r\n        name.length > 2 &&\r\n        name.charCodeAt(name.length - 2) === LEFTPARENTHESIS &&\r\n        name.charCodeAt(name.length - 1) === RIGHTPARENTHESIS\r\n    );\r\n}\r\n\r\nfunction isEnumCapatible(term) {\r\n    return (\r\n        term.type === 'Keyword' ||\r\n        term.type === 'AtKeyword' ||\r\n        term.type === 'Function' ||\r\n        term.type === 'Type' && isFunctionType(term.name)\r\n    );\r\n}\r\n\r\nfunction buildGroupMatchGraph(combinator, terms, atLeastOneTermMatched) {\r\n    switch (combinator) {\r\n        case ' ':\r\n            // Juxtaposing components means that all of them must occur, in the given order.\r\n            //\r\n            // a b c\r\n            // =\r\n            // match a\r\n            //   then match b\r\n            //     then match c\r\n            //       then MATCH\r\n            //       else MISMATCH\r\n            //     else MISMATCH\r\n            //   else MISMATCH\r\n            var result = MATCH;\r\n\r\n            for (var i = terms.length - 1; i >= 0; i--) {\r\n                var term = terms[i];\r\n\r\n                result = createCondition(\r\n                    term,\r\n                    result,\r\n                    MISMATCH\r\n                );\r\n            };\r\n\r\n            return result;\r\n\r\n        case '|':\r\n            // A bar (|) separates two or more alternatives: exactly one of them must occur.\r\n            //\r\n            // a | b | c\r\n            // =\r\n            // match a\r\n            //   then MATCH\r\n            //   else match b\r\n            //     then MATCH\r\n            //     else match c\r\n            //       then MATCH\r\n            //       else MISMATCH\r\n\r\n            var result = MISMATCH;\r\n            var map = null;\r\n\r\n            for (var i = terms.length - 1; i >= 0; i--) {\r\n                var term = terms[i];\r\n\r\n                // reduce sequence of keywords into a Enum\r\n                if (isEnumCapatible(term)) {\r\n                    if (map === null && i > 0 && isEnumCapatible(terms[i - 1])) {\r\n                        map = Object.create(null);\r\n                        result = createCondition(\r\n                            {\r\n                                type: 'Enum',\r\n                                map: map\r\n                            },\r\n                            MATCH,\r\n                            result\r\n                        );\r\n                    }\r\n\r\n                    if (map !== null) {\r\n                        var key = (isFunctionType(term.name) ? term.name.slice(0, -1) : term.name).toLowerCase();\r\n                        if (key in map === false) {\r\n                            map[key] = term;\r\n                            continue;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                map = null;\r\n\r\n                // create a new conditonal node\r\n                result = createCondition(\r\n                    term,\r\n                    MATCH,\r\n                    result\r\n                );\r\n            };\r\n\r\n            return result;\r\n\r\n        case '&&':\r\n            // A double ampersand (&&) separates two or more components,\r\n            // all of which must occur, in any order.\r\n\r\n            // Use MatchOnce for groups with a large number of terms,\r\n            // since &&-groups produces at least N!-node trees\r\n            if (terms.length > 5) {\r\n                return {\r\n                    type: 'MatchOnce',\r\n                    terms: terms,\r\n                    all: true\r\n                };\r\n            }\r\n\r\n            // Use a combination tree for groups with small number of terms\r\n            //\r\n            // a && b && c\r\n            // =\r\n            // match a\r\n            //   then [b && c]\r\n            //   else match b\r\n            //     then [a && c]\r\n            //     else match c\r\n            //       then [a && b]\r\n            //       else MISMATCH\r\n            //\r\n            // a && b\r\n            // =\r\n            // match a\r\n            //   then match b\r\n            //     then MATCH\r\n            //     else MISMATCH\r\n            //   else match b\r\n            //     then match a\r\n            //       then MATCH\r\n            //       else MISMATCH\r\n            //     else MISMATCH\r\n            var result = MISMATCH;\r\n\r\n            for (var i = terms.length - 1; i >= 0; i--) {\r\n                var term = terms[i];\r\n                var thenClause;\r\n\r\n                if (terms.length > 1) {\r\n                    thenClause = buildGroupMatchGraph(\r\n                        combinator,\r\n                        terms.filter(function(newGroupTerm) {\r\n                            return newGroupTerm !== term;\r\n                        }),\r\n                        false\r\n                    );\r\n                } else {\r\n                    thenClause = MATCH;\r\n                }\r\n\r\n                result = createCondition(\r\n                    term,\r\n                    thenClause,\r\n                    result\r\n                );\r\n            };\r\n\r\n            return result;\r\n\r\n        case '||':\r\n            // A double bar (||) separates two or more options:\r\n            // one or more of them must occur, in any order.\r\n\r\n            // Use MatchOnce for groups with a large number of terms,\r\n            // since ||-groups produces at least N!-node trees\r\n            if (terms.length > 5) {\r\n                return {\r\n                    type: 'MatchOnce',\r\n                    terms: terms,\r\n                    all: false\r\n                };\r\n            }\r\n\r\n            // Use a combination tree for groups with small number of terms\r\n            //\r\n            // a || b || c\r\n            // =\r\n            // match a\r\n            //   then [b || c]\r\n            //   else match b\r\n            //     then [a || c]\r\n            //     else match c\r\n            //       then [a || b]\r\n            //       else MISMATCH\r\n            //\r\n            // a || b\r\n            // =\r\n            // match a\r\n            //   then match b\r\n            //     then MATCH\r\n            //     else MATCH\r\n            //   else match b\r\n            //     then match a\r\n            //       then MATCH\r\n            //       else MATCH\r\n            //     else MISMATCH\r\n            var result = atLeastOneTermMatched ? MATCH : MISMATCH;\r\n\r\n            for (var i = terms.length - 1; i >= 0; i--) {\r\n                var term = terms[i];\r\n                var thenClause;\r\n\r\n                if (terms.length > 1) {\r\n                    thenClause = buildGroupMatchGraph(\r\n                        combinator,\r\n                        terms.filter(function(newGroupTerm) {\r\n                            return newGroupTerm !== term;\r\n                        }),\r\n                        true\r\n                    );\r\n                } else {\r\n                    thenClause = MATCH;\r\n                }\r\n\r\n                result = createCondition(\r\n                    term,\r\n                    thenClause,\r\n                    result\r\n                );\r\n            };\r\n\r\n            return result;\r\n    }\r\n}\r\n\r\nfunction buildMultiplierMatchGraph(node) {\r\n    var result = MATCH;\r\n    var matchTerm = buildMatchGraph(node.term);\r\n\r\n    if (node.max === 0) {\r\n        // disable repeating of empty match to prevent infinite loop\r\n        matchTerm = createCondition(\r\n            matchTerm,\r\n            DISALLOW_EMPTY,\r\n            MISMATCH\r\n        );\r\n\r\n        // an occurrence count is not limited, make a cycle;\r\n        // to collect more terms on each following matching mismatch\r\n        result = createCondition(\r\n            matchTerm,\r\n            null, // will be a loop\r\n            MISMATCH\r\n        );\r\n\r\n        result.then = createCondition(\r\n            MATCH,\r\n            MATCH,\r\n            result // make a loop\r\n        );\r\n\r\n        if (node.comma) {\r\n            result.then.else = createCondition(\r\n                { type: 'Comma', syntax: node },\r\n                result,\r\n                MISMATCH\r\n            );\r\n        }\r\n    } else {\r\n        // create a match node chain for [min .. max] interval with optional matches\r\n        for (var i = node.min || 1; i <= node.max; i++) {\r\n            if (node.comma && result !== MATCH) {\r\n                result = createCondition(\r\n                    { type: 'Comma', syntax: node },\r\n                    result,\r\n                    MISMATCH\r\n                );\r\n            }\r\n\r\n            result = createCondition(\r\n                matchTerm,\r\n                createCondition(\r\n                    MATCH,\r\n                    MATCH,\r\n                    result\r\n                ),\r\n                MISMATCH\r\n            );\r\n        }\r\n    }\r\n\r\n    if (node.min === 0) {\r\n        // allow zero match\r\n        result = createCondition(\r\n            MATCH,\r\n            MATCH,\r\n            result\r\n        );\r\n    } else {\r\n        // create a match node chain to collect [0 ... min - 1] required matches\r\n        for (var i = 0; i < node.min - 1; i++) {\r\n            if (node.comma && result !== MATCH) {\r\n                result = createCondition(\r\n                    { type: 'Comma', syntax: node },\r\n                    result,\r\n                    MISMATCH\r\n                );\r\n            }\r\n\r\n            result = createCondition(\r\n                matchTerm,\r\n                result,\r\n                MISMATCH\r\n            );\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nfunction buildMatchGraph(node) {\r\n    if (typeof node === 'function') {\r\n        return {\r\n            type: 'Generic',\r\n            fn: node\r\n        };\r\n    }\r\n\r\n    switch (node.type) {\r\n        case 'Group':\r\n            var result = buildGroupMatchGraph(\r\n                node.combinator,\r\n                node.terms.map(buildMatchGraph),\r\n                false\r\n            );\r\n\r\n            if (node.disallowEmpty) {\r\n                result = createCondition(\r\n                    result,\r\n                    DISALLOW_EMPTY,\r\n                    MISMATCH\r\n                );\r\n            }\r\n\r\n            return result;\r\n\r\n        case 'Multiplier':\r\n            return buildMultiplierMatchGraph(node);\r\n\r\n        case 'Type':\r\n        case 'Property':\r\n            return {\r\n                type: node.type,\r\n                name: node.name,\r\n                syntax: node\r\n            };\r\n\r\n        case 'Keyword':\r\n            return {\r\n                type: node.type,\r\n                name: node.name.toLowerCase(),\r\n                syntax: node\r\n            };\r\n\r\n        case 'AtKeyword':\r\n            return {\r\n                type: node.type,\r\n                name: '@' + node.name.toLowerCase(),\r\n                syntax: node\r\n            };\r\n\r\n        case 'Function':\r\n            return {\r\n                type: node.type,\r\n                name: node.name.toLowerCase() + '(',\r\n                syntax: node\r\n            };\r\n\r\n        case 'String':\r\n            // convert a one char length String to a Token\r\n            if (node.value.length === 3) {\r\n                return {\r\n                    type: 'Token',\r\n                    value: node.value.charAt(1),\r\n                    syntax: node\r\n                };\r\n            }\r\n\r\n            // otherwise use it as is\r\n            return {\r\n                type: node.type,\r\n                value: node.value.substr(1, node.value.length - 2).replace(/\\\\'/g, '\\''),\r\n                syntax: node\r\n            };\r\n\r\n        case 'Token':\r\n            return {\r\n                type: node.type,\r\n                value: node.value,\r\n                syntax: node\r\n            };\r\n\r\n        case 'Comma':\r\n            return {\r\n                type: node.type,\r\n                syntax: node\r\n            };\r\n\r\n        default:\r\n            throw new Error('Unknown node type:', node.type);\r\n    }\r\n}\r\n\r\nmodule.exports = {\r\n    MATCH: MATCH,\r\n    MISMATCH: MISMATCH,\r\n    DISALLOW_EMPTY: DISALLOW_EMPTY,\r\n    buildMatchGraph: function(syntaxTree, ref) {\r\n        if (typeof syntaxTree === 'string') {\r\n            syntaxTree = parse(syntaxTree);\r\n        }\r\n\r\n        return {\r\n            type: 'MatchGraph',\r\n            match: buildMatchGraph(syntaxTree),\r\n            syntax: ref || null,\r\n            source: syntaxTree\r\n        };\r\n    }\r\n};\r\n","var hasOwnProperty = Object.prototype.hasOwnProperty;\r\nvar matchGraph = require('./match-graph');\r\nvar MATCH = matchGraph.MATCH;\r\nvar MISMATCH = matchGraph.MISMATCH;\r\nvar DISALLOW_EMPTY = matchGraph.DISALLOW_EMPTY;\r\nvar TYPE = require('../tokenizer/const').TYPE;\r\n\r\nvar STUB = 0;\r\nvar TOKEN = 1;\r\nvar OPEN_SYNTAX = 2;\r\nvar CLOSE_SYNTAX = 3;\r\n\r\nvar EXIT_REASON_MATCH = 'Match';\r\nvar EXIT_REASON_MISMATCH = 'Mismatch';\r\nvar EXIT_REASON_ITERATION_LIMIT = 'Maximum iteration number exceeded (please fill an issue on https://github.com/csstree/csstree/issues)';\r\n\r\nvar ITERATION_LIMIT = 15000;\r\nvar totalIterationCount = 0;\r\n\r\nfunction reverseList(list) {\r\n    var prev = null;\r\n    var next = null;\r\n    var item = list;\r\n\r\n    while (item !== null) {\r\n        next = item.prev;\r\n        item.prev = prev;\r\n        prev = item;\r\n        item = next;\r\n    }\r\n\r\n    return prev;\r\n}\r\n\r\nfunction areStringsEqualCaseInsensitive(testStr, referenceStr) {\r\n    if (testStr.length !== referenceStr.length) {\r\n        return false;\r\n    }\r\n\r\n    for (var i = 0; i < testStr.length; i++) {\r\n        var testCode = testStr.charCodeAt(i);\r\n        var referenceCode = referenceStr.charCodeAt(i);\r\n\r\n        // testCode.toLowerCase() for U+0041 LATIN CAPITAL LETTER A (A) .. U+005A LATIN CAPITAL LETTER Z (Z).\r\n        if (testCode >= 0x0041 && testCode <= 0x005A) {\r\n            testCode = testCode | 32;\r\n        }\r\n\r\n        if (testCode !== referenceCode) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nfunction isCommaContextStart(token) {\r\n    if (token === null) {\r\n        return true;\r\n    }\r\n\r\n    return (\r\n        token.type === TYPE.Comma ||\r\n        token.type === TYPE.Function ||\r\n        token.type === TYPE.LeftParenthesis ||\r\n        token.type === TYPE.LeftSquareBracket ||\r\n        token.type === TYPE.LeftCurlyBracket ||\r\n        token.type === TYPE.Delim\r\n    );\r\n}\r\n\r\nfunction isCommaContextEnd(token) {\r\n    if (token === null) {\r\n        return true;\r\n    }\r\n\r\n    return (\r\n        token.type === TYPE.RightParenthesis ||\r\n        token.type === TYPE.RightSquareBracket ||\r\n        token.type === TYPE.RightCurlyBracket ||\r\n        token.type === TYPE.Delim\r\n    );\r\n}\r\n\r\nfunction internalMatch(tokens, state, syntaxes) {\r\n    function moveToNextToken() {\r\n        do {\r\n            tokenIndex++;\r\n            token = tokenIndex < tokens.length ? tokens[tokenIndex] : null;\r\n        } while (token !== null && (token.type === TYPE.WhiteSpace || token.type === TYPE.Comment));\r\n    }\r\n\r\n    function getNextToken(offset) {\r\n        var nextIndex = tokenIndex + offset;\r\n\r\n        return nextIndex < tokens.length ? tokens[nextIndex] : null;\r\n    }\r\n\r\n    function stateSnapshotFromSyntax(nextState, prev) {\r\n        return {\r\n            nextState: nextState,\r\n            matchStack: matchStack,\r\n            syntaxStack: syntaxStack,\r\n            thenStack: thenStack,\r\n            tokenIndex: tokenIndex,\r\n            prev: prev\r\n        };\r\n    }\r\n\r\n    function pushThenStack(nextState) {\r\n        thenStack = {\r\n            nextState: nextState,\r\n            matchStack: matchStack,\r\n            syntaxStack: syntaxStack,\r\n            prev: thenStack\r\n        };\r\n    }\r\n\r\n    function pushElseStack(nextState) {\r\n        elseStack = stateSnapshotFromSyntax(nextState, elseStack);\r\n    }\r\n\r\n    function addTokenToMatch() {\r\n        matchStack = {\r\n            type: TOKEN,\r\n            syntax: state.syntax,\r\n            token: token,\r\n            prev: matchStack\r\n        };\r\n\r\n        moveToNextToken();\r\n        syntaxStash = null;\r\n\r\n        if (tokenIndex > longestMatch) {\r\n            longestMatch = tokenIndex;\r\n        }\r\n    }\r\n\r\n    function openSyntax() {\r\n        syntaxStack = {\r\n            syntax: state.syntax,\r\n            opts: state.syntax.opts || (syntaxStack !== null && syntaxStack.opts) || null,\r\n            prev: syntaxStack\r\n        };\r\n\r\n        matchStack = {\r\n            type: OPEN_SYNTAX,\r\n            syntax: state.syntax,\r\n            token: matchStack.token,\r\n            prev: matchStack\r\n        };\r\n    }\r\n\r\n    function closeSyntax() {\r\n        if (matchStack.type === OPEN_SYNTAX) {\r\n            matchStack = matchStack.prev;\r\n        } else {\r\n            matchStack = {\r\n                type: CLOSE_SYNTAX,\r\n                syntax: syntaxStack.syntax,\r\n                token: matchStack.token,\r\n                prev: matchStack\r\n            };\r\n        }\r\n\r\n        syntaxStack = syntaxStack.prev;\r\n    }\r\n\r\n    var syntaxStack = null;\r\n    var thenStack = null;\r\n    var elseStack = null;\r\n\r\n    // null – stashing allowed, nothing stashed\r\n    // false – stashing disabled, nothing stashed\r\n    // anithing else – fail stashable syntaxes, some syntax stashed\r\n    var syntaxStash = null;\r\n\r\n    var iterationCount = 0; // count iterations and prevent infinite loop\r\n    var exitReason = null;\r\n\r\n    var token = null;\r\n    var tokenIndex = -1;\r\n    var longestMatch = 0;\r\n    var matchStack = {\r\n        type: STUB,\r\n        syntax: null,\r\n        token: null,\r\n        prev: null\r\n    };\r\n\r\n    moveToNextToken();\r\n\r\n    while (exitReason === null && ++iterationCount < ITERATION_LIMIT) {\r\n        // function mapList(list, fn) {\r\n        //     var result = [];\r\n        //     while (list) {\r\n        //         result.unshift(fn(list));\r\n        //         list = list.prev;\r\n        //     }\r\n        //     return result;\r\n        // }\r\n        // console.log('--\\n',\r\n        //     '#' + iterationCount,\r\n        //     require('util').inspect({\r\n        //         match: mapList(matchStack, x => x.type === TOKEN ? x.token && x.token.value : x.syntax ? ({ [OPEN_SYNTAX]: '<', [CLOSE_SYNTAX]: '</' }[x.type] || x.type) + '!' + x.syntax.name : null),\r\n        //         token: token && token.value,\r\n        //         tokenIndex,\r\n        //         syntax: syntax.type + (syntax.id ? ' #' + syntax.id : '')\r\n        //     }, { depth: null })\r\n        // );\r\n        switch (state.type) {\r\n            case 'Match':\r\n                if (thenStack === null) {\r\n                    // turn to MISMATCH when some tokens left unmatched\r\n                    if (token !== null) {\r\n                        // doesn't mismatch if just one token left and it's an IE hack\r\n                        if (tokenIndex !== tokens.length - 1 || (token.value !== '\\\\0' && token.value !== '\\\\9')) {\r\n                            state = MISMATCH;\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    // break the main loop, return a result - MATCH\r\n                    exitReason = EXIT_REASON_MATCH;\r\n                    break;\r\n                }\r\n\r\n                // go to next syntax (`then` branch)\r\n                state = thenStack.nextState;\r\n\r\n                // check match is not empty\r\n                if (state === DISALLOW_EMPTY) {\r\n                    if (thenStack.matchStack === matchStack) {\r\n                        state = MISMATCH;\r\n                        break;\r\n                    } else {\r\n                        state = MATCH;\r\n                    }\r\n                }\r\n\r\n                // close syntax if needed\r\n                while (thenStack.syntaxStack !== syntaxStack) {\r\n                    closeSyntax();\r\n                }\r\n\r\n                // pop stack\r\n                thenStack = thenStack.prev;\r\n                break;\r\n\r\n            case 'Mismatch':\r\n                // when some syntax is stashed\r\n                if (syntaxStash !== null && syntaxStash !== false) {\r\n                    // there is no else branches or a branch reduce match stack\r\n                    if (elseStack === null || tokenIndex > elseStack.tokenIndex) {\r\n                        // restore state from the stash\r\n                        elseStack = syntaxStash;\r\n                        syntaxStash = false; // disable stashing\r\n                    }\r\n                } else if (elseStack === null) {\r\n                    // no else branches -> break the main loop\r\n                    // return a result - MISMATCH\r\n                    exitReason = EXIT_REASON_MISMATCH;\r\n                    break;\r\n                }\r\n\r\n                // go to next syntax (`else` branch)\r\n                state = elseStack.nextState;\r\n\r\n                // restore all the rest stack states\r\n                thenStack = elseStack.thenStack;\r\n                syntaxStack = elseStack.syntaxStack;\r\n                matchStack = elseStack.matchStack;\r\n                tokenIndex = elseStack.tokenIndex;\r\n                token = tokenIndex < tokens.length ? tokens[tokenIndex] : null;\r\n\r\n                // pop stack\r\n                elseStack = elseStack.prev;\r\n                break;\r\n\r\n            case 'MatchGraph':\r\n                state = state.match;\r\n                break;\r\n\r\n            case 'If':\r\n                // IMPORTANT: else stack push must go first,\r\n                // since it stores the state of thenStack before changes\r\n                if (state.else !== MISMATCH) {\r\n                    pushElseStack(state.else);\r\n                }\r\n\r\n                if (state.then !== MATCH) {\r\n                    pushThenStack(state.then);\r\n                }\r\n\r\n                state = state.match;\r\n                break;\r\n\r\n            case 'MatchOnce':\r\n                state = {\r\n                    type: 'MatchOnceBuffer',\r\n                    syntax: state,\r\n                    index: 0,\r\n                    mask: 0\r\n                };\r\n                break;\r\n\r\n            case 'MatchOnceBuffer':\r\n                var terms = state.syntax.terms;\r\n\r\n                if (state.index === terms.length) {\r\n                    // no matches at all or it's required all terms to be matched\r\n                    if (state.mask === 0 || state.syntax.all) {\r\n                        state = MISMATCH;\r\n                        break;\r\n                    }\r\n\r\n                    // a partial match is ok\r\n                    state = MATCH;\r\n                    break;\r\n                }\r\n\r\n                // all terms are matched\r\n                if (state.mask === (1 << terms.length) - 1) {\r\n                    state = MATCH;\r\n                    break;\r\n                }\r\n\r\n                for (; state.index < terms.length; state.index++) {\r\n                    var matchFlag = 1 << state.index;\r\n\r\n                    if ((state.mask & matchFlag) === 0) {\r\n                        // IMPORTANT: else stack push must go first,\r\n                        // since it stores the state of thenStack before changes\r\n                        pushElseStack(state);\r\n                        pushThenStack({\r\n                            type: 'AddMatchOnce',\r\n                            syntax: state.syntax,\r\n                            mask: state.mask | matchFlag\r\n                        });\r\n\r\n                        // match\r\n                        state = terms[state.index++];\r\n                        break;\r\n                    }\r\n                }\r\n                break;\r\n\r\n            case 'AddMatchOnce':\r\n                state = {\r\n                    type: 'MatchOnceBuffer',\r\n                    syntax: state.syntax,\r\n                    index: 0,\r\n                    mask: state.mask\r\n                };\r\n                break;\r\n\r\n            case 'Enum':\r\n                if (token !== null) {\r\n                    var name = token.value.toLowerCase();\r\n\r\n                    // drop \\0 and \\9 hack from keyword name\r\n                    if (name.indexOf('\\\\') !== -1) {\r\n                        name = name.replace(/\\\\[09].*$/, '');\r\n                    }\r\n\r\n                    if (hasOwnProperty.call(state.map, name)) {\r\n                        state = state.map[name];\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                state = MISMATCH;\r\n                break;\r\n\r\n            case 'Generic':\r\n                var opts = syntaxStack !== null ? syntaxStack.opts : null;\r\n                var lastTokenIndex = tokenIndex + Math.floor(state.fn(token, getNextToken, opts));\r\n\r\n                if (!isNaN(lastTokenIndex) && lastTokenIndex > tokenIndex) {\r\n                    while (tokenIndex < lastTokenIndex) {\r\n                        addTokenToMatch();\r\n                    }\r\n\r\n                    state = MATCH;\r\n                } else {\r\n                    state = MISMATCH;\r\n                }\r\n\r\n                break;\r\n\r\n            case 'Type':\r\n            case 'Property':\r\n                var syntaxDict = state.type === 'Type' ? 'types' : 'properties';\r\n                var dictSyntax = hasOwnProperty.call(syntaxes, syntaxDict) ? syntaxes[syntaxDict][state.name] : null;\r\n\r\n                if (!dictSyntax || !dictSyntax.match) {\r\n                    throw new Error(\r\n                        'Bad syntax reference: ' +\r\n                        (state.type === 'Type'\r\n                            ? '<' + state.name + '>'\r\n                            : '<\\'' + state.name + '\\'>')\r\n                    );\r\n                }\r\n\r\n                // stash a syntax for types with low priority\r\n                if (syntaxStash !== false && token !== null && state.type === 'Type') {\r\n                    var lowPriorityMatching =\r\n                        // https://drafts.csswg.org/css-values-4/#custom-idents\r\n                        // When parsing positionally-ambiguous keywords in a property value, a <custom-ident> production\r\n                        // can only claim the keyword if no other unfulfilled production can claim it.\r\n                        (state.name === 'custom-ident' && token.type === TYPE.Ident) ||\r\n\r\n                        // https://drafts.csswg.org/css-values-4/#lengths\r\n                        // ... if a `0` could be parsed as either a <number> or a <length> in a property (such as line-height),\r\n                        // it must parse as a <number>\r\n                        (state.name === 'length' && token.value === '0');\r\n\r\n                    if (lowPriorityMatching) {\r\n                        if (syntaxStash === null) {\r\n                            syntaxStash = stateSnapshotFromSyntax(state, elseStack);\r\n                        }\r\n\r\n                        state = MISMATCH;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                openSyntax();\r\n                state = dictSyntax.match;\r\n                break;\r\n\r\n            case 'Keyword':\r\n                var name = state.name;\r\n\r\n                if (token !== null) {\r\n                    var keywordName = token.value;\r\n\r\n                    // drop \\0 and \\9 hack from keyword name\r\n                    if (keywordName.indexOf('\\\\') !== -1) {\r\n                        keywordName = keywordName.replace(/\\\\[09].*$/, '');\r\n                    }\r\n\r\n                    if (areStringsEqualCaseInsensitive(keywordName, name)) {\r\n                        addTokenToMatch();\r\n                        state = MATCH;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                state = MISMATCH;\r\n                break;\r\n\r\n            case 'AtKeyword':\r\n            case 'Function':\r\n                if (token !== null && areStringsEqualCaseInsensitive(token.value, state.name)) {\r\n                    addTokenToMatch();\r\n                    state = MATCH;\r\n                    break;\r\n                }\r\n\r\n                state = MISMATCH;\r\n                break;\r\n\r\n            case 'Token':\r\n                if (token !== null && token.value === state.value) {\r\n                    addTokenToMatch();\r\n                    state = MATCH;\r\n                    break;\r\n                }\r\n\r\n                state = MISMATCH;\r\n                break;\r\n\r\n            case 'Comma':\r\n                if (token !== null && token.type === TYPE.Comma) {\r\n                    if (isCommaContextStart(matchStack.token)) {\r\n                        state = MISMATCH;\r\n                    } else {\r\n                        addTokenToMatch();\r\n                        state = isCommaContextEnd(token) ? MISMATCH : MATCH;\r\n                    }\r\n                } else {\r\n                    state = isCommaContextStart(matchStack.token) || isCommaContextEnd(token) ? MATCH : MISMATCH;\r\n                }\r\n\r\n                break;\r\n\r\n            case 'String':\r\n                var string = '';\r\n\r\n                for (var lastTokenIndex = tokenIndex; lastTokenIndex < tokens.length && string.length < state.value.length; lastTokenIndex++) {\r\n                    string += tokens[lastTokenIndex].value;\r\n                }\r\n\r\n                if (areStringsEqualCaseInsensitive(string, state.value)) {\r\n                    while (tokenIndex < lastTokenIndex) {\r\n                        addTokenToMatch();\r\n                    }\r\n\r\n                    state = MATCH;\r\n                } else {\r\n                    state = MISMATCH;\r\n                }\r\n\r\n                break;\r\n\r\n            default:\r\n                throw new Error('Unknown node type: ' + state.type);\r\n        }\r\n    }\r\n\r\n    totalIterationCount += iterationCount;\r\n\r\n    switch (exitReason) {\r\n        case null:\r\n            console.warn('[csstree-match] BREAK after ' + ITERATION_LIMIT + ' iterations');\r\n            exitReason = EXIT_REASON_ITERATION_LIMIT;\r\n            matchStack = null;\r\n            break;\r\n\r\n        case EXIT_REASON_MATCH:\r\n            while (syntaxStack !== null) {\r\n                closeSyntax();\r\n            }\r\n            break;\r\n\r\n        default:\r\n            matchStack = null;\r\n    }\r\n\r\n    return {\r\n        tokens: tokens,\r\n        reason: exitReason,\r\n        iterations: iterationCount,\r\n        match: matchStack,\r\n        longestMatch: longestMatch\r\n    };\r\n}\r\n\r\nfunction matchAsList(tokens, matchGraph, syntaxes) {\r\n    var matchResult = internalMatch(tokens, matchGraph, syntaxes || {});\r\n\r\n    if (matchResult.match !== null) {\r\n        var item = reverseList(matchResult.match).prev;\r\n\r\n        matchResult.match = [];\r\n\r\n        while (item !== null) {\r\n            switch (item.type) {\r\n                case STUB:\r\n                    break;\r\n\r\n                case OPEN_SYNTAX:\r\n                case CLOSE_SYNTAX:\r\n                    matchResult.match.push({\r\n                        type: item.type,\r\n                        syntax: item.syntax\r\n                    });\r\n                    break;\r\n\r\n                default:\r\n                    matchResult.match.push({\r\n                        token: item.token.value,\r\n                        node: item.token.node\r\n                    });\r\n                    break;\r\n            }\r\n\r\n            item = item.prev;\r\n        }\r\n    }\r\n\r\n    return matchResult;\r\n}\r\n\r\nfunction matchAsTree(tokens, matchGraph, syntaxes) {\r\n    var matchResult = internalMatch(tokens, matchGraph, syntaxes || {});\r\n\r\n    if (matchResult.match === null) {\r\n        return matchResult;\r\n    }\r\n\r\n    var item = matchResult.match;\r\n    var host = matchResult.match = {\r\n        syntax: matchGraph.syntax || null,\r\n        match: []\r\n    };\r\n    var hostStack = [host];\r\n\r\n    // revert a list and start with 2nd item since 1st is a stub item\r\n    item = reverseList(item).prev;\r\n\r\n    // build a tree\r\n    while (item !== null) {\r\n        switch (item.type) {\r\n            case OPEN_SYNTAX:\r\n                host.match.push(host = {\r\n                    syntax: item.syntax,\r\n                    match: []\r\n                });\r\n                hostStack.push(host);\r\n                break;\r\n\r\n            case CLOSE_SYNTAX:\r\n                hostStack.pop();\r\n                host = hostStack[hostStack.length - 1];\r\n                break;\r\n\r\n            default:\r\n                host.match.push({\r\n                    syntax: item.syntax || null,\r\n                    token: item.token.value,\r\n                    node: item.token.node\r\n                });\r\n        }\r\n\r\n        item = item.prev;\r\n    }\r\n\r\n    return matchResult;\r\n}\r\n\r\nmodule.exports = {\r\n    matchAsList: matchAsList,\r\n    matchAsTree: matchAsTree,\r\n    getTotalIterationCount: function() {\r\n        return totalIterationCount;\r\n    }\r\n};\r\n","function getTrace(node) {\r\n    function shouldPutToTrace(syntax) {\r\n        if (syntax === null) {\r\n            return false;\r\n        }\r\n\r\n        return (\r\n            syntax.type === 'Type' ||\r\n            syntax.type === 'Property' ||\r\n            syntax.type === 'Keyword'\r\n        );\r\n    }\r\n\r\n    function hasMatch(matchNode) {\r\n        if (Array.isArray(matchNode.match)) {\r\n            // use for-loop for better perfomance\r\n            for (var i = 0; i < matchNode.match.length; i++) {\r\n                if (hasMatch(matchNode.match[i])) {\r\n                    if (shouldPutToTrace(matchNode.syntax)) {\r\n                        result.unshift(matchNode.syntax);\r\n                    }\r\n\r\n                    return true;\r\n                }\r\n            }\r\n        } else if (matchNode.node === node) {\r\n            result = shouldPutToTrace(matchNode.syntax)\r\n                ? [matchNode.syntax]\r\n                : [];\r\n\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    var result = null;\r\n\r\n    if (this.matched !== null) {\r\n        hasMatch(this.matched);\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nfunction testNode(match, node, fn) {\r\n    var trace = getTrace.call(match, node);\r\n\r\n    if (trace === null) {\r\n        return false;\r\n    }\r\n\r\n    return trace.some(fn);\r\n}\r\n\r\nfunction isType(node, type) {\r\n    return testNode(this, node, function(matchNode) {\r\n        return matchNode.type === 'Type' && matchNode.name === type;\r\n    });\r\n}\r\n\r\nfunction isProperty(node, property) {\r\n    return testNode(this, node, function(matchNode) {\r\n        return matchNode.type === 'Property' && matchNode.name === property;\r\n    });\r\n}\r\n\r\nfunction isKeyword(node) {\r\n    return testNode(this, node, function(matchNode) {\r\n        return matchNode.type === 'Keyword';\r\n    });\r\n}\r\n\r\nmodule.exports = {\r\n    getTrace: getTrace,\r\n    isType: isType,\r\n    isProperty: isProperty,\r\n    isKeyword: isKeyword\r\n};\r\n","var List = require('../common/List');\r\n\r\nfunction getFirstMatchNode(matchNode) {\r\n    if ('node' in matchNode) {\r\n        return matchNode.node;\r\n    }\r\n\r\n    return getFirstMatchNode(matchNode.match[0]);\r\n}\r\n\r\nfunction getLastMatchNode(matchNode) {\r\n    if ('node' in matchNode) {\r\n        return matchNode.node;\r\n    }\r\n\r\n    return getLastMatchNode(matchNode.match[matchNode.match.length - 1]);\r\n}\r\n\r\nfunction matchFragments(lexer, ast, match, type, name) {\r\n    function findFragments(matchNode) {\r\n        if (matchNode.syntax !== null &&\r\n            matchNode.syntax.type === type &&\r\n            matchNode.syntax.name === name) {\r\n            var start = getFirstMatchNode(matchNode);\r\n            var end = getLastMatchNode(matchNode);\r\n\r\n            lexer.syntax.walk(ast, function(node, item, list) {\r\n                if (node === start) {\r\n                    var nodes = new List();\r\n\r\n                    do {\r\n                        nodes.appendData(item.data);\r\n\r\n                        if (item.data === end) {\r\n                            break;\r\n                        }\r\n\r\n                        item = item.next;\r\n                    } while (item !== null);\r\n\r\n                    fragments.push({\r\n                        parent: list,\r\n                        nodes: nodes\r\n                    });\r\n                }\r\n            });\r\n        }\r\n\r\n        if (Array.isArray(matchNode.match)) {\r\n            matchNode.match.forEach(findFragments);\r\n        }\r\n    }\r\n\r\n    var fragments = [];\r\n\r\n    if (match.matched !== null) {\r\n        findFragments(match.matched);\r\n    }\r\n\r\n    return fragments;\r\n}\r\n\r\nmodule.exports = {\r\n    matchFragments: matchFragments\r\n};\r\n","var List = require('../common/List');\r\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\r\n\r\nfunction isValidNumber(value) {\r\n    // Number.isInteger(value) && value >= 0\r\n    return (\r\n        typeof value === 'number' &&\r\n        isFinite(value) &&\r\n        Math.floor(value) === value &&\r\n        value >= 0\r\n    );\r\n}\r\n\r\nfunction isValidLocation(loc) {\r\n    return (\r\n        Boolean(loc) &&\r\n        isValidNumber(loc.offset) &&\r\n        isValidNumber(loc.line) &&\r\n        isValidNumber(loc.column)\r\n    );\r\n}\r\n\r\nfunction createNodeStructureChecker(type, fields) {\r\n    return function checkNode(node, warn) {\r\n        if (!node || node.constructor !== Object) {\r\n            return warn(node, 'Type of node should be an Object');\r\n        }\r\n\r\n        for (var key in node) {\r\n            var valid = true;\r\n\r\n            if (hasOwnProperty.call(node, key) === false) {\r\n                continue;\r\n            }\r\n\r\n            if (key === 'type') {\r\n                if (node.type !== type) {\r\n                    warn(node, 'Wrong node type `' + node.type + '`, expected `' + type + '`');\r\n                }\r\n            } else if (key === 'loc') {\r\n                if (node.loc === null) {\r\n                    continue;\r\n                } else if (node.loc && node.loc.constructor === Object) {\r\n                    if (typeof node.loc.source !== 'string') {\r\n                        key += '.source';\r\n                    } else if (!isValidLocation(node.loc.start)) {\r\n                        key += '.start';\r\n                    } else if (!isValidLocation(node.loc.end)) {\r\n                        key += '.end';\r\n                    } else {\r\n                        continue;\r\n                    }\r\n                }\r\n\r\n                valid = false;\r\n            } else if (fields.hasOwnProperty(key)) {\r\n                for (var i = 0, valid = false; !valid && i < fields[key].length; i++) {\r\n                    var fieldType = fields[key][i];\r\n\r\n                    switch (fieldType) {\r\n                        case String:\r\n                            valid = typeof node[key] === 'string';\r\n                            break;\r\n\r\n                        case Boolean:\r\n                            valid = typeof node[key] === 'boolean';\r\n                            break;\r\n\r\n                        case null:\r\n                            valid = node[key] === null;\r\n                            break;\r\n\r\n                        default:\r\n                            if (typeof fieldType === 'string') {\r\n                                valid = node[key] && node[key].type === fieldType;\r\n                            } else if (Array.isArray(fieldType)) {\r\n                                valid = node[key] instanceof List;\r\n                            }\r\n                    }\r\n                }\r\n            } else {\r\n                warn(node, 'Unknown field `' + key + '` for ' + type + ' node type');\r\n            }\r\n\r\n            if (!valid) {\r\n                warn(node, 'Bad value for `' + type + '.' + key + '`');\r\n            }\r\n        }\r\n\r\n        for (var key in fields) {\r\n            if (hasOwnProperty.call(fields, key) &&\r\n                hasOwnProperty.call(node, key) === false) {\r\n                warn(node, 'Field `' + type + '.' + key + '` is missed');\r\n            }\r\n        }\r\n    };\r\n}\r\n\r\nfunction processStructure(name, nodeType) {\r\n    var structure = nodeType.structure;\r\n    var fields = {\r\n        type: String,\r\n        loc: true\r\n    };\r\n    var docs = {\r\n        type: '\"' + name + '\"'\r\n    };\r\n\r\n    for (var key in structure) {\r\n        if (hasOwnProperty.call(structure, key) === false) {\r\n            continue;\r\n        }\r\n\r\n        var docsTypes = [];\r\n        var fieldTypes = fields[key] = Array.isArray(structure[key])\r\n            ? structure[key].slice()\r\n            : [structure[key]];\r\n\r\n        for (var i = 0; i < fieldTypes.length; i++) {\r\n            var fieldType = fieldTypes[i];\r\n            if (fieldType === String || fieldType === Boolean) {\r\n                docsTypes.push(fieldType.name);\r\n            } else if (fieldType === null) {\r\n                docsTypes.push('null');\r\n            } else if (typeof fieldType === 'string') {\r\n                docsTypes.push('<' + fieldType + '>');\r\n            } else if (Array.isArray(fieldType)) {\r\n                docsTypes.push('List'); // TODO: use type enum\r\n            } else {\r\n                throw new Error('Wrong value `' + fieldType + '` in `' + name + '.' + key + '` structure definition');\r\n            }\r\n        }\r\n\r\n        docs[key] = docsTypes.join(' | ');\r\n    }\r\n\r\n    return {\r\n        docs: docs,\r\n        check: createNodeStructureChecker(name, fields)\r\n    };\r\n}\r\n\r\nmodule.exports = {\r\n    getStructureFromConfig: function(config) {\r\n        var structure = {};\r\n\r\n        if (config.node) {\r\n            for (var name in config.node) {\r\n                if (hasOwnProperty.call(config.node, name)) {\r\n                    var nodeType = config.node[name];\r\n\r\n                    if (nodeType.structure) {\r\n                        structure[name] = processStructure(name, nodeType);\r\n                    } else {\r\n                        throw new Error('Missed `structure` field in `' + name + '` node type definition');\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return structure;\r\n    }\r\n};\r\n","var SyntaxReferenceError = require('./error').SyntaxReferenceError;\r\nvar MatchError = require('./error').MatchError;\r\nvar names = require('../utils/names');\r\nvar generic = require('./generic');\r\nvar parse = require('../definition-syntax/parse');\r\nvar generate = require('../definition-syntax/generate');\r\nvar walk = require('../definition-syntax/walk');\r\nvar prepareTokens = require('./prepare-tokens');\r\nvar buildMatchGraph = require('./match-graph').buildMatchGraph;\r\nvar matchAsTree = require('./match').matchAsTree;\r\nvar trace = require('./trace');\r\nvar search = require('./search');\r\nvar getStructureFromConfig = require('./structure').getStructureFromConfig;\r\nvar cssWideKeywords = buildMatchGraph('inherit | initial | unset');\r\nvar cssWideKeywordsWithExpression = buildMatchGraph('inherit | initial | unset | <-ms-legacy-expression>');\r\n\r\nfunction dumpMapSyntax(map, compact, syntaxAsAst) {\r\n    var result = {};\r\n\r\n    for (var name in map) {\r\n        if (map[name].syntax) {\r\n            result[name] = syntaxAsAst\r\n                ? map[name].syntax\r\n                : generate(map[name].syntax, { compact: compact });\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nfunction valueHasVar(tokens) {\r\n    for (var i = 0; i < tokens.length; i++) {\r\n        if (tokens[i].value.toLowerCase() === 'var(') {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\nfunction buildMatchResult(match, error, iterations) {\r\n    return {\r\n        matched: match,\r\n        iterations: iterations,\r\n        error: error,\r\n        getTrace: trace.getTrace,\r\n        isType: trace.isType,\r\n        isProperty: trace.isProperty,\r\n        isKeyword: trace.isKeyword\r\n    };\r\n}\r\n\r\nfunction matchSyntax(lexer, syntax, value, useCommon) {\r\n    var tokens = prepareTokens(value, lexer.syntax);\r\n    var result;\r\n\r\n    if (valueHasVar(tokens)) {\r\n        return buildMatchResult(null, new Error('Matching for a tree with var() is not supported'));\r\n    }\r\n\r\n    if (useCommon) {\r\n        result = matchAsTree(tokens, lexer.valueCommonSyntax, lexer);\r\n    }\r\n\r\n    if (!useCommon || !result.match) {\r\n        result = matchAsTree(tokens, syntax.match, lexer);\r\n        if (!result.match) {\r\n            return buildMatchResult(\r\n                null,\r\n                new MatchError(result.reason, syntax.syntax, value, result),\r\n                result.iterations\r\n            );\r\n        }\r\n    }\r\n\r\n    return buildMatchResult(result.match, null, result.iterations);\r\n}\r\n\r\nvar Lexer = function(config, syntax, structure) {\r\n    this.valueCommonSyntax = cssWideKeywords;\r\n    this.syntax = syntax;\r\n    this.generic = false;\r\n    this.atrules = {};\r\n    this.properties = {};\r\n    this.types = {};\r\n    this.structure = structure || getStructureFromConfig(config);\r\n\r\n    if (config) {\r\n        if (config.types) {\r\n            for (var name in config.types) {\r\n                this.addType_(name, config.types[name]);\r\n            }\r\n        }\r\n\r\n        if (config.generic) {\r\n            this.generic = true;\r\n            for (var name in generic) {\r\n                this.addType_(name, generic[name]);\r\n            }\r\n        }\r\n\r\n        if (config.atrules) {\r\n            for (var name in config.atrules) {\r\n                this.addAtrule_(name, config.atrules[name]);\r\n            }\r\n        }\r\n\r\n        if (config.properties) {\r\n            for (var name in config.properties) {\r\n                this.addProperty_(name, config.properties[name]);\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nLexer.prototype = {\r\n    structure: {},\r\n    checkStructure: function(ast) {\r\n        function collectWarning(node, message) {\r\n            warns.push({\r\n                node: node,\r\n                message: message\r\n            });\r\n        }\r\n\r\n        var structure = this.structure;\r\n        var warns = [];\r\n\r\n        this.syntax.walk(ast, function(node) {\r\n            if (structure.hasOwnProperty(node.type)) {\r\n                structure[node.type].check(node, collectWarning);\r\n            } else {\r\n                collectWarning(node, 'Unknown node type `' + node.type + '`');\r\n            }\r\n        });\r\n\r\n        return warns.length ? warns : false;\r\n    },\r\n\r\n    createDescriptor: function(syntax, type, name) {\r\n        var ref = {\r\n            type: type,\r\n            name: name\r\n        };\r\n        var descriptor = {\r\n            type: type,\r\n            name: name,\r\n            syntax: null,\r\n            match: null\r\n        };\r\n\r\n        if (typeof syntax === 'function') {\r\n            descriptor.match = buildMatchGraph(syntax, ref);\r\n        } else {\r\n            if (typeof syntax === 'string') {\r\n                // lazy parsing on first access\r\n                Object.defineProperty(descriptor, 'syntax', {\r\n                    get: function() {\r\n                        Object.defineProperty(descriptor, 'syntax', {\r\n                            value: parse(syntax)\r\n                        });\r\n\r\n                        return descriptor.syntax;\r\n                    }\r\n                });\r\n            } else {\r\n                descriptor.syntax = syntax;\r\n            }\r\n\r\n            // lazy graph build on first access\r\n            Object.defineProperty(descriptor, 'match', {\r\n                get: function() {\r\n                    Object.defineProperty(descriptor, 'match', {\r\n                        value: buildMatchGraph(descriptor.syntax, ref)\r\n                    });\r\n\r\n                    return descriptor.match;\r\n                }\r\n            });\r\n        }\r\n\r\n        return descriptor;\r\n    },\r\n    addAtrule_: function(name, syntax) {\r\n        this.atrules[name] = {\r\n            prelude: syntax.prelude ? this.createDescriptor(syntax.prelude, 'AtrulePrelude', name) : null,\r\n            descriptors: syntax.descriptors\r\n                ? Object.keys(syntax.descriptors).reduce((res, name) => {\r\n                    res[name] = this.createDescriptor(syntax.descriptors[name], 'AtruleDescriptor', name);\r\n                    return res;\r\n                }, {})\r\n                : null\r\n        };\r\n    },\r\n    addProperty_: function(name, syntax) {\r\n        this.properties[name] = this.createDescriptor(syntax, 'Property', name);\r\n    },\r\n    addType_: function(name, syntax) {\r\n        this.types[name] = this.createDescriptor(syntax, 'Type', name);\r\n\r\n        if (syntax === generic['-ms-legacy-expression']) {\r\n            this.valueCommonSyntax = cssWideKeywordsWithExpression;\r\n        }\r\n    },\r\n\r\n    matchAtrulePrelude: function(atruleName, prelude) {\r\n        var atrule = names.keyword(atruleName);\r\n\r\n        var atrulePreludeSyntax = atrule.vendor\r\n            ? this.getAtrulePrelude(atrule.name) || this.getAtrulePrelude(atrule.basename)\r\n            : this.getAtrulePrelude(atrule.name);\r\n\r\n        if (!atrulePreludeSyntax) {\r\n            if (atrule.basename in this.atrules) {\r\n                return buildMatchResult(null, new Error('At-rule `' + atruleName + '` should not contain a prelude'));\r\n            }\r\n\r\n            return buildMatchResult(null, new SyntaxReferenceError('Unknown at-rule', atruleName));\r\n        }\r\n\r\n        return matchSyntax(this, atrulePreludeSyntax, prelude, true);\r\n    },\r\n    matchAtruleDescriptor: function(atruleName, descriptorName, value) {\r\n        var atrule = names.keyword(atruleName);\r\n        var descriptor = names.keyword(descriptorName);\r\n\r\n        var atruleEntry = atrule.vendor\r\n            ? this.atrules[atrule.name] || this.atrules[atrule.basename]\r\n            : this.atrules[atrule.name];\r\n\r\n        if (!atruleEntry) {\r\n            return buildMatchResult(null, new SyntaxReferenceError('Unknown at-rule', atruleName));\r\n        }\r\n\r\n        if (!atruleEntry.descriptors) {\r\n            return buildMatchResult(null, new Error('At-rule `' + atruleName + '` has no known descriptors'));\r\n        }\r\n\r\n        var atruleDescriptorSyntax = descriptor.vendor\r\n            ? atruleEntry.descriptors[descriptor.name] || atruleEntry.descriptors[descriptor.basename]\r\n            : atruleEntry.descriptors[descriptor.name];\r\n\r\n        if (!atruleDescriptorSyntax) {\r\n            return buildMatchResult(null, new SyntaxReferenceError('Unknown at-rule descriptor', descriptorName));\r\n        }\r\n\r\n        return matchSyntax(this, atruleDescriptorSyntax, value, true);\r\n    },\r\n    matchDeclaration: function(node) {\r\n        if (node.type !== 'Declaration') {\r\n            return buildMatchResult(null, new Error('Not a Declaration node'));\r\n        }\r\n\r\n        return this.matchProperty(node.property, node.value);\r\n    },\r\n    matchProperty: function(propertyName, value) {\r\n        var property = names.property(propertyName);\r\n\r\n        // don't match syntax for a custom property\r\n        if (property.custom) {\r\n            return buildMatchResult(null, new Error('Lexer matching doesn\\'t applicable for custom properties'));\r\n        }\r\n\r\n        var propertySyntax = property.vendor\r\n            ? this.getProperty(property.name) || this.getProperty(property.basename)\r\n            : this.getProperty(property.name);\r\n\r\n        if (!propertySyntax) {\r\n            return buildMatchResult(null, new SyntaxReferenceError('Unknown property', propertyName));\r\n        }\r\n\r\n        return matchSyntax(this, propertySyntax, value, true);\r\n    },\r\n    matchType: function(typeName, value) {\r\n        var typeSyntax = this.getType(typeName);\r\n\r\n        if (!typeSyntax) {\r\n            return buildMatchResult(null, new SyntaxReferenceError('Unknown type', typeName));\r\n        }\r\n\r\n        return matchSyntax(this, typeSyntax, value, false);\r\n    },\r\n    match: function(syntax, value) {\r\n        if (typeof syntax !== 'string' && (!syntax || !syntax.type)) {\r\n            return buildMatchResult(null, new SyntaxReferenceError('Bad syntax'));\r\n        }\r\n\r\n        if (typeof syntax === 'string' || !syntax.match) {\r\n            syntax = this.createDescriptor(syntax, 'Type', 'anonymous');\r\n        }\r\n\r\n        return matchSyntax(this, syntax, value, false);\r\n    },\r\n\r\n    findValueFragments: function(propertyName, value, type, name) {\r\n        return search.matchFragments(this, value, this.matchProperty(propertyName, value), type, name);\r\n    },\r\n    findDeclarationValueFragments: function(declaration, type, name) {\r\n        return search.matchFragments(this, declaration.value, this.matchDeclaration(declaration), type, name);\r\n    },\r\n    findAllFragments: function(ast, type, name) {\r\n        var result = [];\r\n\r\n        this.syntax.walk(ast, {\r\n            visit: 'Declaration',\r\n            enter: function(declaration) {\r\n                result.push.apply(result, this.findDeclarationValueFragments(declaration, type, name));\r\n            }.bind(this)\r\n        });\r\n\r\n        return result;\r\n    },\r\n\r\n    getAtrulePrelude: function(atruleName) {\r\n        return this.atrules.hasOwnProperty(atruleName) ? this.atrules[atruleName].prelude : null;\r\n    },\r\n    getAtruleDescriptor: function(atruleName, name) {\r\n        return this.atrules.hasOwnProperty(atruleName) && this.atrules.declarators\r\n            ? this.atrules[atruleName].declarators[name] || null\r\n            : null;\r\n    },\r\n    getProperty: function(name) {\r\n        return this.properties.hasOwnProperty(name) ? this.properties[name] : null;\r\n    },\r\n    getType: function(name) {\r\n        return this.types.hasOwnProperty(name) ? this.types[name] : null;\r\n    },\r\n\r\n    validate: function() {\r\n        function validate(syntax, name, broken, descriptor) {\r\n            if (broken.hasOwnProperty(name)) {\r\n                return broken[name];\r\n            }\r\n\r\n            broken[name] = false;\r\n            if (descriptor.syntax !== null) {\r\n                walk(descriptor.syntax, function(node) {\r\n                    if (node.type !== 'Type' && node.type !== 'Property') {\r\n                        return;\r\n                    }\r\n\r\n                    var map = node.type === 'Type' ? syntax.types : syntax.properties;\r\n                    var brokenMap = node.type === 'Type' ? brokenTypes : brokenProperties;\r\n\r\n                    if (!map.hasOwnProperty(node.name) || validate(syntax, node.name, brokenMap, map[node.name])) {\r\n                        broken[name] = true;\r\n                    }\r\n                }, this);\r\n            }\r\n        }\r\n\r\n        var brokenTypes = {};\r\n        var brokenProperties = {};\r\n\r\n        for (var key in this.types) {\r\n            validate(this, key, brokenTypes, this.types[key]);\r\n        }\r\n\r\n        for (var key in this.properties) {\r\n            validate(this, key, brokenProperties, this.properties[key]);\r\n        }\r\n\r\n        brokenTypes = Object.keys(brokenTypes).filter(function(name) {\r\n            return brokenTypes[name];\r\n        });\r\n        brokenProperties = Object.keys(brokenProperties).filter(function(name) {\r\n            return brokenProperties[name];\r\n        });\r\n\r\n        if (brokenTypes.length || brokenProperties.length) {\r\n            return {\r\n                types: brokenTypes,\r\n                properties: brokenProperties\r\n            };\r\n        }\r\n\r\n        return null;\r\n    },\r\n    dump: function(syntaxAsAst, pretty) {\r\n        return {\r\n            generic: this.generic,\r\n            types: dumpMapSyntax(this.types, !pretty, syntaxAsAst),\r\n            properties: dumpMapSyntax(this.properties, !pretty, syntaxAsAst)\r\n        };\r\n    },\r\n    toString: function() {\r\n        return JSON.stringify(this.dump());\r\n    }\r\n};\r\n\r\nmodule.exports = Lexer;\r\n","module.exports = {\r\n    SyntaxError: require('./SyntaxError'),\r\n    parse: require('./parse'),\r\n    generate: require('./generate'),\r\n    walk: require('./walk')\r\n};\r\n","var adoptBuffer = require('./adopt-buffer');\r\nvar isBOM = require('../tokenizer').isBOM;\r\n\r\nvar N = 10;\r\nvar F = 12;\r\nvar R = 13;\r\n\r\nfunction computeLinesAndColumns(host, source) {\r\n    var sourceLength = source.length;\r\n    var lines = adoptBuffer(host.lines, sourceLength); // +1\r\n    var line = host.startLine;\r\n    var columns = adoptBuffer(host.columns, sourceLength);\r\n    var column = host.startColumn;\r\n    var startOffset = source.length > 0 ? isBOM(source.charCodeAt(0)) : 0;\r\n\r\n    for (var i = startOffset; i < sourceLength; i++) { // -1\r\n        var code = source.charCodeAt(i);\r\n\r\n        lines[i] = line;\r\n        columns[i] = column++;\r\n\r\n        if (code === N || code === R || code === F) {\r\n            if (code === R && i + 1 < sourceLength && source.charCodeAt(i + 1) === N) {\r\n                i++;\r\n                lines[i] = line;\r\n                columns[i] = column;\r\n            }\r\n\r\n            line++;\r\n            column = 1;\r\n        }\r\n    }\r\n\r\n    lines[i] = line;\r\n    columns[i] = column;\r\n\r\n    host.lines = lines;\r\n    host.columns = columns;\r\n}\r\n\r\nvar OffsetToLocation = function() {\r\n    this.lines = null;\r\n    this.columns = null;\r\n    this.linesAndColumnsComputed = false;\r\n};\r\n\r\nOffsetToLocation.prototype = {\r\n    setSource: function(source, startOffset, startLine, startColumn) {\r\n        this.source = source;\r\n        this.startOffset = typeof startOffset === 'undefined' ? 0 : startOffset;\r\n        this.startLine = typeof startLine === 'undefined' ? 1 : startLine;\r\n        this.startColumn = typeof startColumn === 'undefined' ? 1 : startColumn;\r\n        this.linesAndColumnsComputed = false;\r\n    },\r\n\r\n    ensureLinesAndColumnsComputed: function() {\r\n        if (!this.linesAndColumnsComputed) {\r\n            computeLinesAndColumns(this, this.source);\r\n            this.linesAndColumnsComputed = true;\r\n        }\r\n    },\r\n    getLocation: function(offset, filename) {\r\n        this.ensureLinesAndColumnsComputed();\r\n\r\n        return {\r\n            source: filename,\r\n            offset: this.startOffset + offset,\r\n            line: this.lines[offset],\r\n            column: this.columns[offset]\r\n        };\r\n    },\r\n    getLocationRange: function(start, end, filename) {\r\n        this.ensureLinesAndColumnsComputed();\r\n\r\n        return {\r\n            source: filename,\r\n            start: {\r\n                offset: this.startOffset + start,\r\n                line: this.lines[start],\r\n                column: this.columns[start]\r\n            },\r\n            end: {\r\n                offset: this.startOffset + end,\r\n                line: this.lines[end],\r\n                column: this.columns[end]\r\n            }\r\n        };\r\n    }\r\n};\r\n\r\nmodule.exports = OffsetToLocation;\r\n","var TYPE = require('../tokenizer').TYPE;\r\nvar WHITESPACE = TYPE.WhiteSpace;\r\nvar COMMENT = TYPE.Comment;\r\n\r\nmodule.exports = function readSequence(recognizer) {\r\n    var children = this.createList();\r\n    var child = null;\r\n    var context = {\r\n        recognizer: recognizer,\r\n        space: null,\r\n        ignoreWS: false,\r\n        ignoreWSAfter: false\r\n    };\r\n\r\n    this.scanner.skipSC();\r\n\r\n    while (!this.scanner.eof) {\r\n        switch (this.scanner.tokenType) {\r\n            case COMMENT:\r\n                this.scanner.next();\r\n                continue;\r\n\r\n            case WHITESPACE:\r\n                if (context.ignoreWS) {\r\n                    this.scanner.next();\r\n                } else {\r\n                    context.space = this.WhiteSpace();\r\n                }\r\n                continue;\r\n        }\r\n\r\n        child = recognizer.getNode.call(this, context);\r\n\r\n        if (child === undefined) {\r\n            break;\r\n        }\r\n\r\n        if (context.space !== null) {\r\n            children.push(context.space);\r\n            context.space = null;\r\n        }\r\n\r\n        children.push(child);\r\n\r\n        if (context.ignoreWSAfter) {\r\n            context.ignoreWSAfter = false;\r\n            context.ignoreWS = true;\r\n        } else {\r\n            context.ignoreWS = false;\r\n        }\r\n    }\r\n\r\n    return children;\r\n};\r\n","var OffsetToLocation = require('../common/OffsetToLocation');\r\nvar SyntaxError = require('../common/SyntaxError');\r\nvar TokenStream = require('../common/TokenStream');\r\nvar List = require('../common/List');\r\nvar tokenize = require('../tokenizer');\r\nvar constants = require('../tokenizer/const');\r\nvar findWhiteSpaceStart = require('../tokenizer/utils').findWhiteSpaceStart;\r\nvar sequence = require('./sequence');\r\nvar noop = function() {};\r\n\r\nvar TYPE = constants.TYPE;\r\nvar NAME = constants.NAME;\r\nvar WHITESPACE = TYPE.WhiteSpace;\r\nvar IDENT = TYPE.Ident;\r\nvar FUNCTION = TYPE.Function;\r\nvar URL = TYPE.Url;\r\nvar HASH = TYPE.Hash;\r\nvar PERCENTAGE = TYPE.Percentage;\r\nvar NUMBER = TYPE.Number;\r\nvar NUMBERSIGN = 0x0023; // U+0023 NUMBER SIGN (#)\r\nvar NULL = 0;\r\n\r\nfunction createParseContext(name) {\r\n    return function() {\r\n        return this[name]();\r\n    };\r\n}\r\n\r\nfunction processConfig(config) {\r\n    var parserConfig = {\r\n        context: {},\r\n        scope: {},\r\n        atrule: {},\r\n        pseudo: {}\r\n    };\r\n\r\n    if (config.parseContext) {\r\n        for (var name in config.parseContext) {\r\n            switch (typeof config.parseContext[name]) {\r\n                case 'function':\r\n                    parserConfig.context[name] = config.parseContext[name];\r\n                    break;\r\n\r\n                case 'string':\r\n                    parserConfig.context[name] = createParseContext(config.parseContext[name]);\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    if (config.scope) {\r\n        for (var name in config.scope) {\r\n            parserConfig.scope[name] = config.scope[name];\r\n        }\r\n    }\r\n\r\n    if (config.atrule) {\r\n        for (var name in config.atrule) {\r\n            var atrule = config.atrule[name];\r\n\r\n            if (atrule.parse) {\r\n                parserConfig.atrule[name] = atrule.parse;\r\n            }\r\n        }\r\n    }\r\n\r\n    if (config.pseudo) {\r\n        for (var name in config.pseudo) {\r\n            var pseudo = config.pseudo[name];\r\n\r\n            if (pseudo.parse) {\r\n                parserConfig.pseudo[name] = pseudo.parse;\r\n            }\r\n        }\r\n    }\r\n\r\n    if (config.node) {\r\n        for (var name in config.node) {\r\n            parserConfig[name] = config.node[name].parse;\r\n        }\r\n    }\r\n\r\n    return parserConfig;\r\n}\r\n\r\nmodule.exports = function createParser(config) {\r\n    var parser = {\r\n        scanner: new TokenStream(),\r\n        locationMap: new OffsetToLocation(),\r\n\r\n        filename: '<unknown>',\r\n        needPositions: false,\r\n        onParseError: noop,\r\n        onParseErrorThrow: false,\r\n        parseAtrulePrelude: true,\r\n        parseRulePrelude: true,\r\n        parseValue: true,\r\n        parseCustomProperty: false,\r\n\r\n        readSequence: sequence,\r\n\r\n        createList: function() {\r\n            return new List();\r\n        },\r\n        createSingleNodeList: function(node) {\r\n            return new List().appendData(node);\r\n        },\r\n        getFirstListNode: function(list) {\r\n            return list && list.first();\r\n        },\r\n        getLastListNode: function(list) {\r\n            return list.last();\r\n        },\r\n\r\n        parseWithFallback: function(consumer, fallback) {\r\n            var startToken = this.scanner.tokenIndex;\r\n\r\n            try {\r\n                return consumer.call(this);\r\n            } catch (e) {\r\n                if (this.onParseErrorThrow) {\r\n                    throw e;\r\n                }\r\n\r\n                var fallbackNode = fallback.call(this, startToken);\r\n\r\n                this.onParseErrorThrow = true;\r\n                this.onParseError(e, fallbackNode);\r\n                this.onParseErrorThrow = false;\r\n\r\n                return fallbackNode;\r\n            }\r\n        },\r\n\r\n        lookupNonWSType: function(offset) {\r\n            do {\r\n                var type = this.scanner.lookupType(offset++);\r\n                if (type !== WHITESPACE) {\r\n                    return type;\r\n                }\r\n            } while (type !== NULL);\r\n\r\n            return NULL;\r\n        },\r\n\r\n        eat: function(tokenType) {\r\n            if (this.scanner.tokenType !== tokenType) {\r\n                var offset = this.scanner.tokenStart;\r\n                var message = NAME[tokenType] + ' is expected';\r\n\r\n                // tweak message and offset\r\n                switch (tokenType) {\r\n                    case IDENT:\r\n                        // when identifier is expected but there is a function or url\r\n                        if (this.scanner.tokenType === FUNCTION || this.scanner.tokenType === URL) {\r\n                            offset = this.scanner.tokenEnd - 1;\r\n                            message = 'Identifier is expected but function found';\r\n                        } else {\r\n                            message = 'Identifier is expected';\r\n                        }\r\n                        break;\r\n\r\n                    case HASH:\r\n                        if (this.scanner.isDelim(NUMBERSIGN)) {\r\n                            this.scanner.next();\r\n                            offset++;\r\n                            message = 'Name is expected';\r\n                        }\r\n                        break;\r\n\r\n                    case PERCENTAGE:\r\n                        if (this.scanner.tokenType === NUMBER) {\r\n                            offset = this.scanner.tokenEnd;\r\n                            message = 'Percent sign is expected';\r\n                        }\r\n                        break;\r\n\r\n                    default:\r\n                        // when test type is part of another token show error for current position + 1\r\n                        // e.g. eat(HYPHENMINUS) will fail on \"-foo\", but pointing on \"-\" is odd\r\n                        if (this.scanner.source.charCodeAt(this.scanner.tokenStart) === tokenType) {\r\n                            offset = offset + 1;\r\n                        }\r\n                }\r\n\r\n                this.error(message, offset);\r\n            }\r\n\r\n            this.scanner.next();\r\n        },\r\n\r\n        consume: function(tokenType) {\r\n            var value = this.scanner.getTokenValue();\r\n\r\n            this.eat(tokenType);\r\n\r\n            return value;\r\n        },\r\n        consumeFunctionName: function() {\r\n            var name = this.scanner.source.substring(this.scanner.tokenStart, this.scanner.tokenEnd - 1);\r\n\r\n            this.eat(FUNCTION);\r\n\r\n            return name;\r\n        },\r\n\r\n        getLocation: function(start, end) {\r\n            if (this.needPositions) {\r\n                return this.locationMap.getLocationRange(\r\n                    start,\r\n                    end,\r\n                    this.filename\r\n                );\r\n            }\r\n\r\n            return null;\r\n        },\r\n        getLocationFromList: function(list) {\r\n            if (this.needPositions) {\r\n                var head = this.getFirstListNode(list);\r\n                var tail = this.getLastListNode(list);\r\n                return this.locationMap.getLocationRange(\r\n                    head !== null ? head.loc.start.offset - this.locationMap.startOffset : this.scanner.tokenStart,\r\n                    tail !== null ? tail.loc.end.offset - this.locationMap.startOffset : this.scanner.tokenStart,\r\n                    this.filename\r\n                );\r\n            }\r\n\r\n            return null;\r\n        },\r\n\r\n        error: function(message, offset) {\r\n            var location = typeof offset !== 'undefined' && offset < this.scanner.source.length\r\n                ? this.locationMap.getLocation(offset)\r\n                : this.scanner.eof\r\n                    ? this.locationMap.getLocation(findWhiteSpaceStart(this.scanner.source, this.scanner.source.length - 1))\r\n                    : this.locationMap.getLocation(this.scanner.tokenStart);\r\n\r\n            throw new SyntaxError(\r\n                message || 'Unexpected input',\r\n                this.scanner.source,\r\n                location.offset,\r\n                location.line,\r\n                location.column\r\n            );\r\n        }\r\n    };\r\n\r\n    config = processConfig(config || {});\r\n    for (var key in config) {\r\n        parser[key] = config[key];\r\n    }\r\n\r\n    return function(source, options) {\r\n        options = options || {};\r\n\r\n        var context = options.context || 'default';\r\n        var ast;\r\n\r\n        tokenize(source, parser.scanner);\r\n        parser.locationMap.setSource(\r\n            source,\r\n            options.offset,\r\n            options.line,\r\n            options.column\r\n        );\r\n\r\n        parser.filename = options.filename || '<unknown>';\r\n        parser.needPositions = Boolean(options.positions);\r\n        parser.onParseError = typeof options.onParseError === 'function' ? options.onParseError : noop;\r\n        parser.onParseErrorThrow = false;\r\n        parser.parseAtrulePrelude = 'parseAtrulePrelude' in options ? Boolean(options.parseAtrulePrelude) : true;\r\n        parser.parseRulePrelude = 'parseRulePrelude' in options ? Boolean(options.parseRulePrelude) : true;\r\n        parser.parseValue = 'parseValue' in options ? Boolean(options.parseValue) : true;\r\n        parser.parseCustomProperty = 'parseCustomProperty' in options ? Boolean(options.parseCustomProperty) : false;\r\n\r\n        if (!parser.context.hasOwnProperty(context)) {\r\n            throw new Error('Unknown context `' + context + '`');\r\n        }\r\n\r\n        ast = parser.context[context].call(parser, options);\r\n\r\n        if (!parser.scanner.eof) {\r\n            parser.error();\r\n        }\r\n\r\n        return ast;\r\n    };\r\n};\r\n","var hasOwnProperty = Object.prototype.hasOwnProperty;\r\n\r\nfunction processChildren(node, delimeter) {\r\n    var list = node.children;\r\n    var prev = null;\r\n\r\n    if (typeof delimeter !== 'function') {\r\n        list.forEach(this.node, this);\r\n    } else {\r\n        list.forEach(function(node) {\r\n            if (prev !== null) {\r\n                delimeter.call(this, prev);\r\n            }\r\n\r\n            this.node(node);\r\n            prev = node;\r\n        }, this);\r\n    }\r\n}\r\n\r\nmodule.exports = function createGenerator(config) {\r\n    function processNode(node) {\r\n        if (hasOwnProperty.call(types, node.type)) {\r\n            types[node.type].call(this, node);\r\n        } else {\r\n            throw new Error('Unknown node type: ' + node.type);\r\n        }\r\n    }\r\n\r\n    var types = {};\r\n\r\n    if (config.node) {\r\n        for (var name in config.node) {\r\n            types[name] = config.node[name].generate;\r\n        }\r\n    }\r\n\r\n    return function(node, options) {\r\n        var buffer = '';\r\n        var handlers = {\r\n            children: processChildren,\r\n            node: processNode,\r\n            chunk: function(chunk) {\r\n                buffer += chunk;\r\n            },\r\n            result: function() {\r\n                return buffer;\r\n            }\r\n        };\r\n\r\n        if (options) {\r\n            if (typeof options.decorator === 'function') {\r\n                handlers = options.decorator(handlers);\r\n            }\r\n        }\r\n\r\n        handlers.node(node);\r\n\r\n        return handlers.result();\r\n    };\r\n};\r\n","var hasOwnProperty = Object.prototype.hasOwnProperty;\r\nvar noop = function() {};\r\n\r\nfunction ensureFunction(value) {\r\n    return typeof value === 'function' ? value : noop;\r\n}\r\n\r\nfunction invokeForType(fn, type) {\r\n    return function(node, item, list) {\r\n        if (node.type === type) {\r\n            fn.call(this, node, item, list);\r\n        }\r\n    };\r\n}\r\n\r\nfunction getWalkersFromStructure(name, nodeType) {\r\n    var structure = nodeType.structure;\r\n    var walkers = [];\r\n\r\n    for (var key in structure) {\r\n        if (hasOwnProperty.call(structure, key) === false) {\r\n            continue;\r\n        }\r\n\r\n        var fieldTypes = structure[key];\r\n        var walker = {\r\n            name: key,\r\n            type: false,\r\n            nullable: false\r\n        };\r\n\r\n        if (!Array.isArray(structure[key])) {\r\n            fieldTypes = [structure[key]];\r\n        }\r\n\r\n        for (var i = 0; i < fieldTypes.length; i++) {\r\n            var fieldType = fieldTypes[i];\r\n            if (fieldType === null) {\r\n                walker.nullable = true;\r\n            } else if (typeof fieldType === 'string') {\r\n                walker.type = 'node';\r\n            } else if (Array.isArray(fieldType)) {\r\n                walker.type = 'list';\r\n            }\r\n        }\r\n\r\n        if (walker.type) {\r\n            walkers.push(walker);\r\n        }\r\n    }\r\n\r\n    if (walkers.length) {\r\n        return {\r\n            context: nodeType.walkContext,\r\n            fields: walkers\r\n        };\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nfunction getTypesFromConfig(config) {\r\n    var types = {};\r\n\r\n    for (var name in config.node) {\r\n        if (hasOwnProperty.call(config.node, name)) {\r\n            var nodeType = config.node[name];\r\n\r\n            if (!nodeType.structure) {\r\n                throw new Error('Missed `structure` field in `' + name + '` node type definition');\r\n            }\r\n\r\n            types[name] = getWalkersFromStructure(name, nodeType);\r\n        }\r\n    }\r\n\r\n    return types;\r\n}\r\n\r\nfunction createTypeIterator(config, reverse) {\r\n    var fields = config.fields.slice();\r\n    var contextName = config.context;\r\n    var useContext = typeof contextName === 'string';\r\n\r\n    if (reverse) {\r\n        fields.reverse();\r\n    }\r\n\r\n    return function(node, context, walk) {\r\n        var prevContextValue;\r\n\r\n        if (useContext) {\r\n            prevContextValue = context[contextName];\r\n            context[contextName] = node;\r\n        }\r\n\r\n        for (var i = 0; i < fields.length; i++) {\r\n            var field = fields[i];\r\n            var ref = node[field.name];\r\n\r\n            if (!field.nullable || ref) {\r\n                if (field.type === 'list') {\r\n                    if (reverse) {\r\n                        ref.forEachRight(walk);\r\n                    } else {\r\n                        ref.forEach(walk);\r\n                    }\r\n                } else {\r\n                    walk(ref);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (useContext) {\r\n            context[contextName] = prevContextValue;\r\n        }\r\n    };\r\n}\r\n\r\nfunction createFastTraveralMap(iterators) {\r\n    return {\r\n        Atrule: {\r\n            StyleSheet: iterators.StyleSheet,\r\n            Atrule: iterators.Atrule,\r\n            Rule: iterators.Rule,\r\n            Block: iterators.Block\r\n        },\r\n        Rule: {\r\n            StyleSheet: iterators.StyleSheet,\r\n            Atrule: iterators.Atrule,\r\n            Rule: iterators.Rule,\r\n            Block: iterators.Block\r\n        },\r\n        Declaration: {\r\n            StyleSheet: iterators.StyleSheet,\r\n            Atrule: iterators.Atrule,\r\n            Rule: iterators.Rule,\r\n            Block: iterators.Block,\r\n            DeclarationList: iterators.DeclarationList\r\n        }\r\n    };\r\n}\r\n\r\nmodule.exports = function createWalker(config) {\r\n    var types = getTypesFromConfig(config);\r\n    var iteratorsNatural = {};\r\n    var iteratorsReverse = {};\r\n\r\n    for (var name in types) {\r\n        if (hasOwnProperty.call(types, name) && types[name] !== null) {\r\n            iteratorsNatural[name] = createTypeIterator(types[name], false);\r\n            iteratorsReverse[name] = createTypeIterator(types[name], true);\r\n        }\r\n    }\r\n\r\n    var fastTraversalIteratorsNatural = createFastTraveralMap(iteratorsNatural);\r\n    var fastTraversalIteratorsReverse = createFastTraveralMap(iteratorsReverse);\r\n\r\n    var walk = function(root, options) {\r\n        function walkNode(node, item, list) {\r\n            enter.call(context, node, item, list);\r\n\r\n            if (iterators.hasOwnProperty(node.type)) {\r\n                iterators[node.type](node, context, walkNode);\r\n            }\r\n\r\n            leave.call(context, node, item, list);\r\n        }\r\n\r\n        var enter = noop;\r\n        var leave = noop;\r\n        var iterators = iteratorsNatural;\r\n        var context = {\r\n            root: root,\r\n            stylesheet: null,\r\n            atrule: null,\r\n            atrulePrelude: null,\r\n            rule: null,\r\n            selector: null,\r\n            block: null,\r\n            declaration: null,\r\n            function: null\r\n        };\r\n\r\n        if (typeof options === 'function') {\r\n            enter = options;\r\n        } else if (options) {\r\n            enter = ensureFunction(options.enter);\r\n            leave = ensureFunction(options.leave);\r\n\r\n            if (options.reverse) {\r\n                iterators = iteratorsReverse;\r\n            }\r\n\r\n            if (options.visit) {\r\n                if (fastTraversalIteratorsNatural.hasOwnProperty(options.visit)) {\r\n                    iterators = options.reverse\r\n                        ? fastTraversalIteratorsReverse[options.visit]\r\n                        : fastTraversalIteratorsNatural[options.visit];\r\n                } else if (!types.hasOwnProperty(options.visit)) {\r\n                    throw new Error('Bad value `' + options.visit + '` for `visit` option (should be: ' + Object.keys(types).join(', ') + ')');\r\n                }\r\n\r\n                enter = invokeForType(enter, options.visit);\r\n                leave = invokeForType(leave, options.visit);\r\n            }\r\n        }\r\n\r\n        if (enter === noop && leave === noop) {\r\n            throw new Error('Neither `enter` nor `leave` walker handler is set or both aren\\'t a function');\r\n        }\r\n\r\n        // swap handlers in reverse mode to invert visit order\r\n        if (options.reverse) {\r\n            var tmp = enter;\r\n            enter = leave;\r\n            leave = tmp;\r\n        }\r\n\r\n        walkNode(root);\r\n    };\r\n\r\n    walk.find = function(ast, fn) {\r\n        var found = null;\r\n\r\n        walk(ast, function(node, item, list) {\r\n            if (found === null && fn.call(this, node, item, list)) {\r\n                found = node;\r\n            }\r\n        });\r\n\r\n        return found;\r\n    };\r\n\r\n    walk.findLast = function(ast, fn) {\r\n        var found = null;\r\n\r\n        walk(ast, {\r\n            reverse: true,\r\n            enter: function(node, item, list) {\r\n                if (found === null && fn.call(this, node, item, list)) {\r\n                    found = node;\r\n                }\r\n            }\r\n        });\r\n\r\n        return found;\r\n    };\r\n\r\n    walk.findAll = function(ast, fn) {\r\n        var found = [];\r\n\r\n        walk(ast, function(node, item, list) {\r\n            if (fn.call(this, node, item, list)) {\r\n                found.push(node);\r\n            }\r\n        });\r\n\r\n        return found;\r\n    };\r\n\r\n    return walk;\r\n};\r\n","var List = require('../common/List');\r\n\r\nmodule.exports = function clone(node) {\r\n    var result = {};\r\n\r\n    for (var key in node) {\r\n        var value = node[key];\r\n\r\n        if (value) {\r\n            if (Array.isArray(value) || value instanceof List) {\r\n                value = value.map(clone);\r\n            } else if (value.constructor === Object) {\r\n                value = clone(value);\r\n            }\r\n        }\r\n\r\n        result[key] = value;\r\n    }\r\n\r\n    return result;\r\n};\r\n","var hasOwnProperty = Object.prototype.hasOwnProperty;\r\nvar shape = {\r\n    generic: true,\r\n    types: {},\r\n    atrules: {},\r\n    properties: {},\r\n    parseContext: {},\r\n    scope: {},\r\n    atrule: ['parse'],\r\n    pseudo: ['parse'],\r\n    node: ['name', 'structure', 'parse', 'generate', 'walkContext']\r\n};\r\n\r\nfunction isObject(value) {\r\n    return value && value.constructor === Object;\r\n}\r\n\r\nfunction copy(value) {\r\n    if (isObject(value)) {\r\n        return Object.assign({}, value);\r\n    } else {\r\n        return value;\r\n    }\r\n}\r\nfunction extend(dest, src) {\r\n    for (var key in src) {\r\n        if (hasOwnProperty.call(src, key)) {\r\n            if (isObject(dest[key])) {\r\n                extend(dest[key], copy(src[key]));\r\n            } else {\r\n                dest[key] = copy(src[key]);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction mix(dest, src, shape) {\r\n    for (var key in shape) {\r\n        if (hasOwnProperty.call(shape, key) === false) {\r\n            continue;\r\n        }\r\n\r\n        if (shape[key] === true) {\r\n            if (key in src) {\r\n                if (hasOwnProperty.call(src, key)) {\r\n                    dest[key] = copy(src[key]);\r\n                }\r\n            }\r\n        } else if (shape[key]) {\r\n            if (isObject(shape[key])) {\r\n                var res = {};\r\n                extend(res, dest[key]);\r\n                extend(res, src[key]);\r\n                dest[key] = res;\r\n            } else if (Array.isArray(shape[key])) {\r\n                var res = {};\r\n                var innerShape = shape[key].reduce(function(s, k) {\r\n                    s[k] = true;\r\n                    return s;\r\n                }, {});\r\n                for (var name in dest[key]) {\r\n                    if (hasOwnProperty.call(dest[key], name)) {\r\n                        res[name] = {};\r\n                        if (dest[key] && dest[key][name]) {\r\n                            mix(res[name], dest[key][name], innerShape);\r\n                        }\r\n                    }\r\n                }\r\n                for (var name in src[key]) {\r\n                    if (hasOwnProperty.call(src[key], name)) {\r\n                        if (!res[name]) {\r\n                            res[name] = {};\r\n                        }\r\n                        if (src[key] && src[key][name]) {\r\n                            mix(res[name], src[key][name], innerShape);\r\n                        }\r\n                    }\r\n                }\r\n                dest[key] = res;\r\n            }\r\n        }\r\n    }\r\n    return dest;\r\n}\r\n\r\nmodule.exports = function(dest, src) {\r\n    return mix(dest, src, shape);\r\n};\r\n","var List = require('../common/List');\r\nvar SyntaxError = require('../common/SyntaxError');\r\nvar TokenStream = require('../common/TokenStream');\r\nvar Lexer = require('../lexer/Lexer');\r\nvar definitionSyntax = require('../definition-syntax');\r\nvar tokenize = require('../tokenizer');\r\nvar createParser = require('../parser/create');\r\nvar createGenerator = require('../generator/create');\r\nvar createConvertor = require('../convertor/create');\r\nvar createWalker = require('../walker/create');\r\nvar clone = require('../utils/clone');\r\nvar names = require('../utils/names');\r\nvar mix = require('./config/mix');\r\n\r\nfunction createSyntax(config) {\r\n    var parse = createParser(config);\r\n    var walk = createWalker(config);\r\n    var generate = createGenerator(config);\r\n    var convert = createConvertor(walk);\r\n\r\n    var syntax = {\r\n        List: List,\r\n        SyntaxError: SyntaxError,\r\n        TokenStream: TokenStream,\r\n        Lexer: Lexer,\r\n\r\n        vendorPrefix: names.vendorPrefix,\r\n        keyword: names.keyword,\r\n        property: names.property,\r\n        isCustomProperty: names.isCustomProperty,\r\n\r\n        definitionSyntax: definitionSyntax,\r\n        lexer: null,\r\n        createLexer: function(config) {\r\n            return new Lexer(config, syntax, syntax.lexer.structure);\r\n        },\r\n\r\n        tokenize: tokenize,\r\n        parse: parse,\r\n        walk: walk,\r\n        generate: generate,\r\n\r\n        find: walk.find,\r\n        findLast: walk.findLast,\r\n        findAll: walk.findAll,\r\n\r\n        clone: clone,\r\n        fromPlainObject: convert.fromPlainObject,\r\n        toPlainObject: convert.toPlainObject,\r\n\r\n        createSyntax: function(config) {\r\n            return createSyntax(mix({}, config));\r\n        },\r\n        fork: function(extension) {\r\n            var base = mix({}, config); // copy of config\r\n            return createSyntax(\r\n                typeof extension === 'function'\r\n                    ? extension(base, Object.assign)\r\n                    : mix(base, extension)\r\n            );\r\n        }\r\n    };\r\n\r\n    syntax.lexer = new Lexer({\r\n        generic: true,\r\n        types: config.types,\r\n        atrules: config.atrules,\r\n        properties: config.properties,\r\n        node: config.node\r\n    }, syntax);\r\n\r\n    return syntax;\r\n};\r\n\r\nexports.create = function(config) {\r\n    return createSyntax(mix({}, config));\r\n};\r\n","var List = require('../common/List');\r\n\r\nmodule.exports = function createConvertors(walk) {\r\n    return {\r\n        fromPlainObject: function(ast) {\r\n            walk(ast, {\r\n                enter: function(node) {\r\n                    if (node.children && node.children instanceof List === false) {\r\n                        node.children = new List().fromArray(node.children);\r\n                    }\r\n                }\r\n            });\r\n\r\n            return ast;\r\n        },\r\n        toPlainObject: function(ast) {\r\n            walk(ast, {\r\n                leave: function(node) {\r\n                    if (node.children && node.children instanceof List) {\r\n                        node.children = node.children.toArray();\r\n                    }\r\n                }\r\n            });\r\n\r\n            return ast;\r\n        }\r\n    };\r\n};\r\n","var mdnAtrules = require('mdn-data-animatable/css/at-rules.json');\r\nvar mdnProperties = require('mdn-data-animatable/css/properties.json');\r\nvar mdnSyntaxes = require('mdn-data-animatable/css/syntaxes.json');\r\nvar patch = require('./patch.json');\r\n\r\nfunction preprocessAtrules(dict) {\r\n    var result = Object.create(null);\r\n\r\n    for (var atruleName in dict) {\r\n        var atrule = dict[atruleName];\r\n        var descriptors = null;\r\n\r\n        if (atrule.descriptors) {\r\n            descriptors = Object.create(null);\r\n\r\n            for (var descriptor in atrule.descriptors) {\r\n                descriptors[descriptor] = atrule.descriptors[descriptor].syntax;\r\n            }\r\n        }\r\n\r\n        result[atruleName.substr(1)] = {\r\n            prelude: atrule.syntax.trim().match(/^@\\S+\\s+([^;\\{]*)/)[1].trim() || null,\r\n            descriptors\r\n        };\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nfunction buildDictionary(dict, patchDict) {\r\n    var result = {};\r\n\r\n    // copy all syntaxes for an original dict\r\n    for (var key in dict) {\r\n        result[key] = dict[key].syntax;\r\n    }\r\n\r\n    // apply a patch\r\n    for (var key in patchDict) {\r\n        if (key in dict) {\r\n            if (patchDict[key].syntax) {\r\n                result[key] = patchDict[key].syntax;\r\n            } else {\r\n                delete result[key];\r\n            }\r\n        } else {\r\n            if (patchDict[key].syntax) {\r\n                result[key] = patchDict[key].syntax;\r\n            }\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nmodule.exports = {\r\n    types: buildDictionary(mdnSyntaxes, patch.syntaxes),\r\n    atrules: preprocessAtrules(mdnAtrules),\r\n    properties: buildDictionary(mdnProperties, patch.properties)\r\n};\r\n","var cmpChar = require('../../tokenizer').cmpChar;\r\nvar isDigit = require('../../tokenizer').isDigit;\r\nvar TYPE = require('../../tokenizer').TYPE;\r\n\r\nvar WHITESPACE = TYPE.WhiteSpace;\r\nvar COMMENT = TYPE.Comment;\r\nvar IDENT = TYPE.Ident;\r\nvar NUMBER = TYPE.Number;\r\nvar DIMENSION = TYPE.Dimension;\r\nvar PLUSSIGN = 0x002B;    // U+002B PLUS SIGN (+)\r\nvar HYPHENMINUS = 0x002D; // U+002D HYPHEN-MINUS (-)\r\nvar N = 0x006E;           // U+006E LATIN SMALL LETTER N (n)\r\nvar DISALLOW_SIGN = true;\r\nvar ALLOW_SIGN = false;\r\n\r\nfunction checkInteger(offset, disallowSign) {\r\n    var pos = this.scanner.tokenStart + offset;\r\n    var code = this.scanner.source.charCodeAt(pos);\r\n\r\n    if (code === PLUSSIGN || code === HYPHENMINUS) {\r\n        if (disallowSign) {\r\n            this.error('Number sign is not allowed');\r\n        }\r\n        pos++;\r\n    }\r\n\r\n    for (; pos < this.scanner.tokenEnd; pos++) {\r\n        if (!isDigit(this.scanner.source.charCodeAt(pos))) {\r\n            this.error('Integer is expected', pos);\r\n        }\r\n    }\r\n}\r\n\r\nfunction checkTokenIsInteger(disallowSign) {\r\n    return checkInteger.call(this, 0, disallowSign);\r\n}\r\n\r\nfunction expectCharCode(offset, code) {\r\n    if (!cmpChar(this.scanner.source, this.scanner.tokenStart + offset, code)) {\r\n        var msg = '';\r\n\r\n        switch (code) {\r\n            case N:\r\n                msg = 'N is expected';\r\n                break;\r\n            case HYPHENMINUS:\r\n                msg = 'HyphenMinus is expected';\r\n                break;\r\n        }\r\n\r\n        this.error(msg, this.scanner.tokenStart + offset);\r\n    }\r\n}\r\n\r\n// ... <signed-integer>\r\n// ... ['+' | '-'] <signless-integer>\r\nfunction consumeB() {\r\n    var offset = 0;\r\n    var sign = 0;\r\n    var type = this.scanner.tokenType;\r\n\r\n    while (type === WHITESPACE || type === COMMENT) {\r\n        type = this.scanner.lookupType(++offset);\r\n    }\r\n\r\n    if (type !== NUMBER) {\r\n        if (this.scanner.isDelim(PLUSSIGN, offset) ||\r\n            this.scanner.isDelim(HYPHENMINUS, offset)) {\r\n            sign = this.scanner.isDelim(PLUSSIGN, offset) ? PLUSSIGN : HYPHENMINUS;\r\n\r\n            do {\r\n                type = this.scanner.lookupType(++offset);\r\n            } while (type === WHITESPACE || type === COMMENT);\r\n\r\n            if (type !== NUMBER) {\r\n                this.scanner.skip(offset);\r\n                checkTokenIsInteger.call(this, DISALLOW_SIGN);\r\n            }\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    if (offset > 0) {\r\n        this.scanner.skip(offset);\r\n    }\r\n\r\n    if (sign === 0) {\r\n        type = this.scanner.source.charCodeAt(this.scanner.tokenStart);\r\n        if (type !== PLUSSIGN && type !== HYPHENMINUS) {\r\n            this.error('Number sign is expected');\r\n        }\r\n    }\r\n\r\n    checkTokenIsInteger.call(this, sign !== 0);\r\n    return sign === HYPHENMINUS ? '-' + this.consume(NUMBER) : this.consume(NUMBER);\r\n}\r\n\r\n// An+B microsyntax https://www.w3.org/TR/css-syntax-3/#anb\r\nmodule.exports = {\r\n    name: 'AnPlusB',\r\n    structure: {\r\n        a: [String, null],\r\n        b: [String, null]\r\n    },\r\n    parse: function() {\r\n        /* eslint-disable brace-style*/\r\n        var start = this.scanner.tokenStart;\r\n        var a = null;\r\n        var b = null;\r\n\r\n        // <integer>\r\n        if (this.scanner.tokenType === NUMBER) {\r\n            checkTokenIsInteger.call(this, ALLOW_SIGN);\r\n            b = this.consume(NUMBER);\r\n        }\r\n\r\n        // -n\r\n        // -n <signed-integer>\r\n        // -n ['+' | '-'] <signless-integer>\r\n        // -n- <signless-integer>\r\n        // <dashndashdigit-ident>\r\n        else if (this.scanner.tokenType === IDENT && cmpChar(this.scanner.source, this.scanner.tokenStart, HYPHENMINUS)) {\r\n            a = '-1';\r\n\r\n            expectCharCode.call(this, 1, N);\r\n\r\n            switch (this.scanner.getTokenLength()) {\r\n                // -n\r\n                // -n <signed-integer>\r\n                // -n ['+' | '-'] <signless-integer>\r\n                case 2:\r\n                    this.scanner.next();\r\n                    b = consumeB.call(this);\r\n                    break;\r\n\r\n                // -n- <signless-integer>\r\n                case 3:\r\n                    expectCharCode.call(this, 2, HYPHENMINUS);\r\n\r\n                    this.scanner.next();\r\n                    this.scanner.skipSC();\r\n\r\n                    checkTokenIsInteger.call(this, DISALLOW_SIGN);\r\n\r\n                    b = '-' + this.consume(NUMBER);\r\n                    break;\r\n\r\n                // <dashndashdigit-ident>\r\n                default:\r\n                    expectCharCode.call(this, 2, HYPHENMINUS);\r\n                    checkInteger.call(this, 3, DISALLOW_SIGN);\r\n                    this.scanner.next();\r\n\r\n                    b = this.scanner.substrToCursor(start + 2);\r\n            }\r\n        }\r\n\r\n        // '+'? n\r\n        // '+'? n <signed-integer>\r\n        // '+'? n ['+' | '-'] <signless-integer>\r\n        // '+'? n- <signless-integer>\r\n        // '+'? <ndashdigit-ident>\r\n        else if (this.scanner.tokenType === IDENT || (this.scanner.isDelim(PLUSSIGN) && this.scanner.lookupType(1) === IDENT)) {\r\n            var sign = 0;\r\n            a = '1';\r\n\r\n            // just ignore a plus\r\n            if (this.scanner.isDelim(PLUSSIGN)) {\r\n                sign = 1;\r\n                this.scanner.next();\r\n            }\r\n\r\n            expectCharCode.call(this, 0, N);\r\n\r\n            switch (this.scanner.getTokenLength()) {\r\n                // '+'? n\r\n                // '+'? n <signed-integer>\r\n                // '+'? n ['+' | '-'] <signless-integer>\r\n                case 1:\r\n                    this.scanner.next();\r\n                    b = consumeB.call(this);\r\n                    break;\r\n\r\n                // '+'? n- <signless-integer>\r\n                case 2:\r\n                    expectCharCode.call(this, 1, HYPHENMINUS);\r\n\r\n                    this.scanner.next();\r\n                    this.scanner.skipSC();\r\n\r\n                    checkTokenIsInteger.call(this, DISALLOW_SIGN);\r\n\r\n                    b = '-' + this.consume(NUMBER);\r\n                    break;\r\n\r\n                // '+'? <ndashdigit-ident>\r\n                default:\r\n                    expectCharCode.call(this, 1, HYPHENMINUS);\r\n                    checkInteger.call(this, 2, DISALLOW_SIGN);\r\n                    this.scanner.next();\r\n\r\n                    b = this.scanner.substrToCursor(start + sign + 1);\r\n            }\r\n        }\r\n\r\n        // <ndashdigit-dimension>\r\n        // <ndash-dimension> <signless-integer>\r\n        // <n-dimension>\r\n        // <n-dimension> <signed-integer>\r\n        // <n-dimension> ['+' | '-'] <signless-integer>\r\n        else if (this.scanner.tokenType === DIMENSION) {\r\n            var code = this.scanner.source.charCodeAt(this.scanner.tokenStart);\r\n            var sign = code === PLUSSIGN || code === HYPHENMINUS;\r\n\r\n            for (var i = this.scanner.tokenStart + sign; i < this.scanner.tokenEnd; i++) {\r\n                if (!isDigit(this.scanner.source.charCodeAt(i))) {\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (i === this.scanner.tokenStart + sign) {\r\n                this.error('Integer is expected', this.scanner.tokenStart + sign);\r\n            }\r\n\r\n            expectCharCode.call(this, i - this.scanner.tokenStart, N);\r\n            a = this.scanner.source.substring(start, i);\r\n\r\n            // <n-dimension>\r\n            // <n-dimension> <signed-integer>\r\n            // <n-dimension> ['+' | '-'] <signless-integer>\r\n            if (i + 1 === this.scanner.tokenEnd) {\r\n                this.scanner.next();\r\n                b = consumeB.call(this);\r\n            } else {\r\n                expectCharCode.call(this, i - this.scanner.tokenStart + 1, HYPHENMINUS);\r\n\r\n                // <ndash-dimension> <signless-integer>\r\n                if (i + 2 === this.scanner.tokenEnd) {\r\n                    this.scanner.next();\r\n                    this.scanner.skipSC();\r\n                    checkTokenIsInteger.call(this, DISALLOW_SIGN);\r\n                    b = '-' + this.consume(NUMBER);\r\n                }\r\n                // <ndashdigit-dimension>\r\n                else {\r\n                    checkInteger.call(this, i - this.scanner.tokenStart + 2, DISALLOW_SIGN);\r\n                    this.scanner.next();\r\n                    b = this.scanner.substrToCursor(i + 1);\r\n                }\r\n            }\r\n        } else {\r\n            this.error();\r\n        }\r\n\r\n        if (a !== null && a.charCodeAt(0) === PLUSSIGN) {\r\n            a = a.substr(1);\r\n        }\r\n\r\n        if (b !== null && b.charCodeAt(0) === PLUSSIGN) {\r\n            b = b.substr(1);\r\n        }\r\n\r\n        return {\r\n            type: 'AnPlusB',\r\n            loc: this.getLocation(start, this.scanner.tokenStart),\r\n            a: a,\r\n            b: b\r\n        };\r\n    },\r\n    generate: function(node) {\r\n        var a = node.a !== null && node.a !== undefined;\r\n        var b = node.b !== null && node.b !== undefined;\r\n\r\n        if (a) {\r\n            this.chunk(\r\n                node.a === '+1' ? '+n' : // eslint-disable-line operator-linebreak, indent\r\n                node.a ===  '1' ?  'n' : // eslint-disable-line operator-linebreak, indent\r\n                node.a === '-1' ? '-n' : // eslint-disable-line operator-linebreak, indent\r\n                node.a + 'n'             // eslint-disable-line operator-linebreak, indent\r\n            );\r\n\r\n            if (b) {\r\n                b = String(node.b);\r\n                if (b.charAt(0) === '-' || b.charAt(0) === '+') {\r\n                    this.chunk(b.charAt(0));\r\n                    this.chunk(b.substr(1));\r\n                } else {\r\n                    this.chunk('+');\r\n                    this.chunk(b);\r\n                }\r\n            }\r\n        } else {\r\n            this.chunk(String(node.b));\r\n        }\r\n    }\r\n};\r\n","var tokenizer = require('../../tokenizer');\r\nvar TYPE = tokenizer.TYPE;\r\n\r\nvar WhiteSpace = TYPE.WhiteSpace;\r\nvar Semicolon = TYPE.Semicolon;\r\nvar LeftCurlyBracket = TYPE.LeftCurlyBracket;\r\nvar Delim = TYPE.Delim;\r\nvar EXCLAMATIONMARK = 0x0021; // U+0021 EXCLAMATION MARK (!)\r\n\r\nfunction getOffsetExcludeWS() {\r\n    if (this.scanner.tokenIndex > 0) {\r\n        if (this.scanner.lookupType(-1) === WhiteSpace) {\r\n            return this.scanner.tokenIndex > 1\r\n                ? this.scanner.getTokenStart(this.scanner.tokenIndex - 1)\r\n                : this.scanner.firstCharOffset;\r\n        }\r\n    }\r\n\r\n    return this.scanner.tokenStart;\r\n}\r\n\r\n// 0, 0, false\r\nfunction balanceEnd() {\r\n    return 0;\r\n}\r\n\r\n// LEFTCURLYBRACKET, 0, false\r\nfunction leftCurlyBracket(tokenType) {\r\n    return tokenType === LeftCurlyBracket ? 1 : 0;\r\n}\r\n\r\n// LEFTCURLYBRACKET, SEMICOLON, false\r\nfunction leftCurlyBracketOrSemicolon(tokenType) {\r\n    return tokenType === LeftCurlyBracket || tokenType === Semicolon ? 1 : 0;\r\n}\r\n\r\n// EXCLAMATIONMARK, SEMICOLON, false\r\nfunction exclamationMarkOrSemicolon(tokenType, source, offset) {\r\n    if (tokenType === Delim && source.charCodeAt(offset) === EXCLAMATIONMARK) {\r\n        return 1;\r\n    }\r\n\r\n    return tokenType === Semicolon ? 1 : 0;\r\n}\r\n\r\n// 0, SEMICOLON, true\r\nfunction semicolonIncluded(tokenType) {\r\n    return tokenType === Semicolon ? 2 : 0;\r\n}\r\n\r\nmodule.exports = {\r\n    name: 'Raw',\r\n    structure: {\r\n        value: String\r\n    },\r\n    parse: function(startToken, mode, excludeWhiteSpace) {\r\n        var startOffset = this.scanner.getTokenStart(startToken);\r\n        var endOffset;\r\n\r\n        this.scanner.skip(\r\n            this.scanner.getRawLength(startToken, mode || balanceEnd)\r\n        );\r\n\r\n        if (excludeWhiteSpace && this.scanner.tokenStart > startOffset) {\r\n            endOffset = getOffsetExcludeWS.call(this);\r\n        } else {\r\n            endOffset = this.scanner.tokenStart;\r\n        }\r\n\r\n        return {\r\n            type: 'Raw',\r\n            loc: this.getLocation(startOffset, endOffset),\r\n            value: this.scanner.source.substring(startOffset, endOffset)\r\n        };\r\n    },\r\n    generate: function(node) {\r\n        this.chunk(node.value);\r\n    },\r\n\r\n    mode: {\r\n        default: balanceEnd,\r\n        leftCurlyBracket: leftCurlyBracket,\r\n        leftCurlyBracketOrSemicolon: leftCurlyBracketOrSemicolon,\r\n        exclamationMarkOrSemicolon: exclamationMarkOrSemicolon,\r\n        semicolonIncluded: semicolonIncluded\r\n    }\r\n};\r\n","var TYPE = require('../../tokenizer').TYPE;\r\nvar rawMode = require('./Raw').mode;\r\n\r\nvar ATKEYWORD = TYPE.AtKeyword;\r\nvar SEMICOLON = TYPE.Semicolon;\r\nvar LEFTCURLYBRACKET = TYPE.LeftCurlyBracket;\r\nvar RIGHTCURLYBRACKET = TYPE.RightCurlyBracket;\r\n\r\nfunction consumeRaw(startToken) {\r\n    return this.Raw(startToken, rawMode.leftCurlyBracketOrSemicolon, true);\r\n}\r\n\r\nfunction isDeclarationBlockAtrule() {\r\n    for (var offset = 1, type; type = this.scanner.lookupType(offset); offset++) {\r\n        if (type === RIGHTCURLYBRACKET) {\r\n            return true;\r\n        }\r\n\r\n        if (type === LEFTCURLYBRACKET ||\r\n            type === ATKEYWORD) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\nmodule.exports = {\r\n    name: 'Atrule',\r\n    structure: {\r\n        name: String,\r\n        prelude: ['AtrulePrelude', 'Raw', null],\r\n        block: ['Block', null]\r\n    },\r\n    parse: function() {\r\n        var start = this.scanner.tokenStart;\r\n        var name;\r\n        var nameLowerCase;\r\n        var prelude = null;\r\n        var block = null;\r\n\r\n        this.eat(ATKEYWORD);\r\n\r\n        name = this.scanner.substrToCursor(start + 1);\r\n        nameLowerCase = name.toLowerCase();\r\n        this.scanner.skipSC();\r\n\r\n        // parse prelude\r\n        if (this.scanner.eof === false &&\r\n            this.scanner.tokenType !== LEFTCURLYBRACKET &&\r\n            this.scanner.tokenType !== SEMICOLON) {\r\n            if (this.parseAtrulePrelude) {\r\n                prelude = this.parseWithFallback(this.AtrulePrelude.bind(this, name), consumeRaw);\r\n\r\n                // turn empty AtrulePrelude into null\r\n                if (prelude.type === 'AtrulePrelude' && prelude.children.head === null) {\r\n                    prelude = null;\r\n                }\r\n            } else {\r\n                prelude = consumeRaw.call(this, this.scanner.tokenIndex);\r\n            }\r\n\r\n            this.scanner.skipSC();\r\n        }\r\n\r\n        switch (this.scanner.tokenType) {\r\n            case SEMICOLON:\r\n                this.scanner.next();\r\n                break;\r\n\r\n            case LEFTCURLYBRACKET:\r\n                if (this.atrule.hasOwnProperty(nameLowerCase) &&\r\n                    typeof this.atrule[nameLowerCase].block === 'function') {\r\n                    block = this.atrule[nameLowerCase].block.call(this);\r\n                } else {\r\n                    // TODO: should consume block content as Raw?\r\n                    block = this.Block(isDeclarationBlockAtrule.call(this));\r\n                }\r\n\r\n                break;\r\n        }\r\n\r\n        return {\r\n            type: 'Atrule',\r\n            loc: this.getLocation(start, this.scanner.tokenStart),\r\n            name: name,\r\n            prelude: prelude,\r\n            block: block\r\n        };\r\n    },\r\n    generate: function(node) {\r\n        this.chunk('@');\r\n        this.chunk(node.name);\r\n\r\n        if (node.prelude !== null) {\r\n            this.chunk(' ');\r\n            this.node(node.prelude);\r\n        }\r\n\r\n        if (node.block) {\r\n            this.node(node.block);\r\n        } else {\r\n            this.chunk(';');\r\n        }\r\n    },\r\n    walkContext: 'atrule'\r\n};\r\n","var TYPE = require('../../tokenizer').TYPE;\r\n\r\nvar SEMICOLON = TYPE.Semicolon;\r\nvar LEFTCURLYBRACKET = TYPE.LeftCurlyBracket;\r\n\r\nmodule.exports = {\r\n    name: 'AtrulePrelude',\r\n    structure: {\r\n        children: [[]]\r\n    },\r\n    parse: function(name) {\r\n        var children = null;\r\n\r\n        if (name !== null) {\r\n            name = name.toLowerCase();\r\n        }\r\n\r\n        this.scanner.skipSC();\r\n\r\n        if (this.atrule.hasOwnProperty(name) &&\r\n            typeof this.atrule[name].prelude === 'function') {\r\n            // custom consumer\r\n            children = this.atrule[name].prelude.call(this);\r\n        } else {\r\n            // default consumer\r\n            children = this.readSequence(this.scope.AtrulePrelude);\r\n        }\r\n\r\n        this.scanner.skipSC();\r\n\r\n        if (this.scanner.eof !== true &&\r\n            this.scanner.tokenType !== LEFTCURLYBRACKET &&\r\n            this.scanner.tokenType !== SEMICOLON) {\r\n            this.error('Semicolon or block is expected');\r\n        }\r\n\r\n        if (children === null) {\r\n            children = this.createList();\r\n        }\r\n\r\n        return {\r\n            type: 'AtrulePrelude',\r\n            loc: this.getLocationFromList(children),\r\n            children: children\r\n        };\r\n    },\r\n    generate: function(node) {\r\n        this.children(node);\r\n    },\r\n    walkContext: 'atrulePrelude'\r\n};\r\n","var TYPE = require('../../tokenizer').TYPE;\r\n\r\nvar IDENT = TYPE.Ident;\r\nvar STRING = TYPE.String;\r\nvar COLON = TYPE.Colon;\r\nvar LEFTSQUAREBRACKET = TYPE.LeftSquareBracket;\r\nvar RIGHTSQUAREBRACKET = TYPE.RightSquareBracket;\r\nvar DOLLARSIGN = 0x0024;       // U+0024 DOLLAR SIGN ($)\r\nvar ASTERISK = 0x002A;         // U+002A ASTERISK (*)\r\nvar EQUALSSIGN = 0x003D;       // U+003D EQUALS SIGN (=)\r\nvar CIRCUMFLEXACCENT = 0x005E; // U+005E (^)\r\nvar VERTICALLINE = 0x007C;     // U+007C VERTICAL LINE (|)\r\nvar TILDE = 0x007E;            // U+007E TILDE (~)\r\n\r\nfunction getAttributeName() {\r\n    if (this.scanner.eof) {\r\n        this.error('Unexpected end of input');\r\n    }\r\n\r\n    var start = this.scanner.tokenStart;\r\n    var expectIdent = false;\r\n    var checkColon = true;\r\n\r\n    if (this.scanner.isDelim(ASTERISK)) {\r\n        expectIdent = true;\r\n        checkColon = false;\r\n        this.scanner.next();\r\n    } else if (!this.scanner.isDelim(VERTICALLINE)) {\r\n        this.eat(IDENT);\r\n    }\r\n\r\n    if (this.scanner.isDelim(VERTICALLINE)) {\r\n        if (this.scanner.source.charCodeAt(this.scanner.tokenStart + 1) !== EQUALSSIGN) {\r\n            this.scanner.next();\r\n            this.eat(IDENT);\r\n        } else if (expectIdent) {\r\n            this.error('Identifier is expected', this.scanner.tokenEnd);\r\n        }\r\n    } else if (expectIdent) {\r\n        this.error('Vertical line is expected');\r\n    }\r\n\r\n    if (checkColon && this.scanner.tokenType === COLON) {\r\n        this.scanner.next();\r\n        this.eat(IDENT);\r\n    }\r\n\r\n    return {\r\n        type: 'Identifier',\r\n        loc: this.getLocation(start, this.scanner.tokenStart),\r\n        name: this.scanner.substrToCursor(start)\r\n    };\r\n}\r\n\r\nfunction getOperator() {\r\n    var start = this.scanner.tokenStart;\r\n    var code = this.scanner.source.charCodeAt(start);\r\n\r\n    if (code !== EQUALSSIGN &&        // =\r\n        code !== TILDE &&             // ~=\r\n        code !== CIRCUMFLEXACCENT &&  // ^=\r\n        code !== DOLLARSIGN &&        // $=\r\n        code !== ASTERISK &&          // *=\r\n        code !== VERTICALLINE         // |=\r\n    ) {\r\n        this.error('Attribute selector (=, ~=, ^=, $=, *=, |=) is expected');\r\n    }\r\n\r\n    this.scanner.next();\r\n\r\n    if (code !== EQUALSSIGN) {\r\n        if (!this.scanner.isDelim(EQUALSSIGN)) {\r\n            this.error('Equal sign is expected');\r\n        }\r\n\r\n        this.scanner.next();\r\n    }\r\n\r\n    return this.scanner.substrToCursor(start);\r\n}\r\n\r\n// '[' <wq-name> ']'\r\n// '[' <wq-name> <attr-matcher> [ <string-token> | <ident-token> ] <attr-modifier>? ']'\r\nmodule.exports = {\r\n    name: 'AttributeSelector',\r\n    structure: {\r\n        name: 'Identifier',\r\n        matcher: [String, null],\r\n        value: ['String', 'Identifier', null],\r\n        flags: [String, null]\r\n    },\r\n    parse: function() {\r\n        var start = this.scanner.tokenStart;\r\n        var name;\r\n        var matcher = null;\r\n        var value = null;\r\n        var flags = null;\r\n\r\n        this.eat(LEFTSQUAREBRACKET);\r\n        this.scanner.skipSC();\r\n\r\n        name = getAttributeName.call(this);\r\n        this.scanner.skipSC();\r\n\r\n        if (this.scanner.tokenType !== RIGHTSQUAREBRACKET) {\r\n            // avoid case `[name i]`\r\n            if (this.scanner.tokenType !== IDENT) {\r\n                matcher = getOperator.call(this);\r\n\r\n                this.scanner.skipSC();\r\n\r\n                value = this.scanner.tokenType === STRING\r\n                    ? this.String()\r\n                    : this.Identifier();\r\n\r\n                this.scanner.skipSC();\r\n            }\r\n\r\n            // attribute flags\r\n            if (this.scanner.tokenType === IDENT) {\r\n                flags = this.scanner.getTokenValue();\r\n                this.scanner.next();\r\n\r\n                this.scanner.skipSC();\r\n            }\r\n        }\r\n\r\n        this.eat(RIGHTSQUAREBRACKET);\r\n\r\n        return {\r\n            type: 'AttributeSelector',\r\n            loc: this.getLocation(start, this.scanner.tokenStart),\r\n            name: name,\r\n            matcher: matcher,\r\n            value: value,\r\n            flags: flags\r\n        };\r\n    },\r\n    generate: function(node) {\r\n        var flagsPrefix = ' ';\r\n\r\n        this.chunk('[');\r\n        this.node(node.name);\r\n\r\n        if (node.matcher !== null) {\r\n            this.chunk(node.matcher);\r\n\r\n            if (node.value !== null) {\r\n                this.node(node.value);\r\n\r\n                // space between string and flags is not required\r\n                if (node.value.type === 'String') {\r\n                    flagsPrefix = '';\r\n                }\r\n            }\r\n        }\r\n\r\n        if (node.flags !== null) {\r\n            this.chunk(flagsPrefix);\r\n            this.chunk(node.flags);\r\n        }\r\n\r\n        this.chunk(']');\r\n    }\r\n};\r\n","var TYPE = require('../../tokenizer').TYPE;\r\nvar rawMode = require('./Raw').mode;\r\n\r\nvar WHITESPACE = TYPE.WhiteSpace;\r\nvar COMMENT = TYPE.Comment;\r\nvar SEMICOLON = TYPE.Semicolon;\r\nvar ATKEYWORD = TYPE.AtKeyword;\r\nvar LEFTCURLYBRACKET = TYPE.LeftCurlyBracket;\r\nvar RIGHTCURLYBRACKET = TYPE.RightCurlyBracket;\r\n\r\nfunction consumeRaw(startToken) {\r\n    return this.Raw(startToken, null, true);\r\n}\r\nfunction consumeRule() {\r\n    return this.parseWithFallback(this.Rule, consumeRaw);\r\n}\r\nfunction consumeRawDeclaration(startToken) {\r\n    return this.Raw(startToken, rawMode.semicolonIncluded, true);\r\n}\r\nfunction consumeDeclaration() {\r\n    if (this.scanner.tokenType === SEMICOLON) {\r\n        return consumeRawDeclaration.call(this, this.scanner.tokenIndex);\r\n    }\r\n\r\n    var node = this.parseWithFallback(this.Declaration, consumeRawDeclaration);\r\n\r\n    if (this.scanner.tokenType === SEMICOLON) {\r\n        this.scanner.next();\r\n    }\r\n\r\n    return node;\r\n}\r\n\r\nmodule.exports = {\r\n    name: 'Block',\r\n    structure: {\r\n        children: [[\r\n            'Atrule',\r\n            'Rule',\r\n            'Declaration'\r\n        ]]\r\n    },\r\n    parse: function(isDeclaration) {\r\n        var consumer = isDeclaration ? consumeDeclaration : consumeRule;\r\n\r\n        var start = this.scanner.tokenStart;\r\n        var children = this.createList();\r\n\r\n        this.eat(LEFTCURLYBRACKET);\r\n\r\n        scan:\r\n        while (!this.scanner.eof) {\r\n            switch (this.scanner.tokenType) {\r\n                case RIGHTCURLYBRACKET:\r\n                    break scan;\r\n\r\n                case WHITESPACE:\r\n                case COMMENT:\r\n                    this.scanner.next();\r\n                    break;\r\n\r\n                case ATKEYWORD:\r\n                    children.push(this.parseWithFallback(this.Atrule, consumeRaw));\r\n                    break;\r\n\r\n                default:\r\n                    children.push(consumer.call(this));\r\n            }\r\n        }\r\n\r\n        if (!this.scanner.eof) {\r\n            this.eat(RIGHTCURLYBRACKET);\r\n        }\r\n\r\n        return {\r\n            type: 'Block',\r\n            loc: this.getLocation(start, this.scanner.tokenStart),\r\n            children: children\r\n        };\r\n    },\r\n    generate: function(node) {\r\n        this.chunk('{');\r\n        this.children(node, function(prev) {\r\n            if (prev.type === 'Declaration') {\r\n                this.chunk(';');\r\n            }\r\n        });\r\n        this.chunk('}');\r\n    },\r\n    walkContext: 'block'\r\n};\r\n","var TYPE = require('../../tokenizer').TYPE;\r\n\r\nvar LEFTSQUAREBRACKET = TYPE.LeftSquareBracket;\r\nvar RIGHTSQUAREBRACKET = TYPE.RightSquareBracket;\r\n\r\nmodule.exports = {\r\n    name: 'Brackets',\r\n    structure: {\r\n        children: [[]]\r\n    },\r\n    parse: function(readSequence, recognizer) {\r\n        var start = this.scanner.tokenStart;\r\n        var children = null;\r\n\r\n        this.eat(LEFTSQUAREBRACKET);\r\n\r\n        children = readSequence.call(this, recognizer);\r\n\r\n        if (!this.scanner.eof) {\r\n            this.eat(RIGHTSQUAREBRACKET);\r\n        }\r\n\r\n        return {\r\n            type: 'Brackets',\r\n            loc: this.getLocation(start, this.scanner.tokenStart),\r\n            children: children\r\n        };\r\n    },\r\n    generate: function(node) {\r\n        this.chunk('[');\r\n        this.children(node);\r\n        this.chunk(']');\r\n    }\r\n};\r\n","var CDC = require('../../tokenizer').TYPE.CDC;\r\n\r\nmodule.exports = {\r\n    name: 'CDC',\r\n    structure: [],\r\n    parse: function() {\r\n        var start = this.scanner.tokenStart;\r\n\r\n        this.eat(CDC); // -->\r\n\r\n        return {\r\n            type: 'CDC',\r\n            loc: this.getLocation(start, this.scanner.tokenStart)\r\n        };\r\n    },\r\n    generate: function() {\r\n        this.chunk('-->');\r\n    }\r\n};\r\n","var CDO = require('../../tokenizer').TYPE.CDO;\r\n\r\nmodule.exports = {\r\n    name: 'CDO',\r\n    structure: [],\r\n    parse: function() {\r\n        var start = this.scanner.tokenStart;\r\n\r\n        this.eat(CDO); // <!--\r\n\r\n        return {\r\n            type: 'CDO',\r\n            loc: this.getLocation(start, this.scanner.tokenStart)\r\n        };\r\n    },\r\n    generate: function() {\r\n        this.chunk('<!--');\r\n    }\r\n};\r\n","var TYPE = require('../../tokenizer').TYPE;\r\n\r\nvar IDENT = TYPE.Ident;\r\nvar FULLSTOP = 0x002E; // U+002E FULL STOP (.)\r\n\r\n// '.' ident\r\nmodule.exports = {\r\n    name: 'ClassSelector',\r\n    structure: {\r\n        name: String\r\n    },\r\n    parse: function() {\r\n        if (!this.scanner.isDelim(FULLSTOP)) {\r\n            this.error('Full stop is expected');\r\n        }\r\n\r\n        this.scanner.next();\r\n\r\n        return {\r\n            type: 'ClassSelector',\r\n            loc: this.getLocation(this.scanner.tokenStart - 1, this.scanner.tokenEnd),\r\n            name: this.consume(IDENT)\r\n        };\r\n    },\r\n    generate: function(node) {\r\n        this.chunk('.');\r\n        this.chunk(node.name);\r\n    }\r\n};\r\n","var TYPE = require('../../tokenizer').TYPE;\r\n\r\nvar IDENT = TYPE.Ident;\r\nvar PLUSSIGN = 0x002B;        // U+002B PLUS SIGN (+)\r\nvar SOLIDUS = 0x002F;         // U+002F SOLIDUS (/)\r\nvar GREATERTHANSIGN = 0x003E; // U+003E GREATER-THAN SIGN (>)\r\nvar TILDE = 0x007E;           // U+007E TILDE (~)\r\n\r\n// + | > | ~ | /deep/\r\nmodule.exports = {\r\n    name: 'Combinator',\r\n    structure: {\r\n        name: String\r\n    },\r\n    parse: function() {\r\n        var start = this.scanner.tokenStart;\r\n        var code = this.scanner.source.charCodeAt(this.scanner.tokenStart);\r\n\r\n        switch (code) {\r\n            case GREATERTHANSIGN:\r\n            case PLUSSIGN:\r\n            case TILDE:\r\n                this.scanner.next();\r\n                break;\r\n\r\n            case SOLIDUS:\r\n                this.scanner.next();\r\n\r\n                if (this.scanner.tokenType !== IDENT || this.scanner.lookupValue(0, 'deep') === false) {\r\n                    this.error('Identifier `deep` is expected');\r\n                }\r\n\r\n                this.scanner.next();\r\n\r\n                if (!this.scanner.isDelim(SOLIDUS)) {\r\n                    this.error('Solidus is expected');\r\n                }\r\n\r\n                this.scanner.next();\r\n                break;\r\n\r\n            default:\r\n                this.error('Combinator is expected');\r\n        }\r\n\r\n        return {\r\n            type: 'Combinator',\r\n            loc: this.getLocation(start, this.scanner.tokenStart),\r\n            name: this.scanner.substrToCursor(start)\r\n        };\r\n    },\r\n    generate: function(node) {\r\n        this.chunk(node.name);\r\n    }\r\n};\r\n","var TYPE = require('../../tokenizer').TYPE;\r\n\r\nvar COMMENT = TYPE.Comment;\r\nvar ASTERISK = 0x002A;        // U+002A ASTERISK (*)\r\nvar SOLIDUS = 0x002F;         // U+002F SOLIDUS (/)\r\n\r\n// '/*' .* '*/'\r\nmodule.exports = {\r\n    name: 'Comment',\r\n    structure: {\r\n        value: String\r\n    },\r\n    parse: function() {\r\n        var start = this.scanner.tokenStart;\r\n        var end = this.scanner.tokenEnd;\r\n\r\n        this.eat(COMMENT);\r\n\r\n        if ((end - start + 2) >= 2 &&\r\n            this.scanner.source.charCodeAt(end - 2) === ASTERISK &&\r\n            this.scanner.source.charCodeAt(end - 1) === SOLIDUS) {\r\n            end -= 2;\r\n        }\r\n\r\n        return {\r\n            type: 'Comment',\r\n            loc: this.getLocation(start, this.scanner.tokenStart),\r\n            value: this.scanner.source.substring(start + 2, end)\r\n        };\r\n    },\r\n    generate: function(node) {\r\n        this.chunk('/*');\r\n        this.chunk(node.value);\r\n        this.chunk('*/');\r\n    }\r\n};\r\n","var isCustomProperty = require('../../utils/names').isCustomProperty;\r\nvar TYPE = require('../../tokenizer').TYPE;\r\nvar rawMode = require('./Raw').mode;\r\n\r\nvar IDENT = TYPE.Ident;\r\nvar HASH = TYPE.Hash;\r\nvar COLON = TYPE.Colon;\r\nvar SEMICOLON = TYPE.Semicolon;\r\nvar DELIM = TYPE.Delim;\r\nvar EXCLAMATIONMARK = 0x0021; // U+0021 EXCLAMATION MARK (!)\r\nvar NUMBERSIGN = 0x0023;      // U+0023 NUMBER SIGN (#)\r\nvar DOLLARSIGN = 0x0024;      // U+0024 DOLLAR SIGN ($)\r\nvar AMPERSAND = 0x0026;       // U+0026 ANPERSAND (&)\r\nvar ASTERISK = 0x002A;        // U+002A ASTERISK (*)\r\nvar PLUSSIGN = 0x002B;        // U+002B PLUS SIGN (+)\r\nvar SOLIDUS = 0x002F;         // U+002F SOLIDUS (/)\r\n\r\nfunction consumeValueRaw(startToken) {\r\n    return this.Raw(startToken, rawMode.exclamationMarkOrSemicolon, true);\r\n}\r\n\r\nfunction consumeCustomPropertyRaw(startToken) {\r\n    return this.Raw(startToken, rawMode.exclamationMarkOrSemicolon, false);\r\n}\r\n\r\nfunction consumeValue() {\r\n    var startValueToken = this.scanner.tokenIndex;\r\n    var value = this.Value();\r\n\r\n    if (value.type !== 'Raw' &&\r\n        this.scanner.eof === false &&\r\n        this.scanner.tokenType !== SEMICOLON &&\r\n        this.scanner.isDelim(EXCLAMATIONMARK) === false &&\r\n        this.scanner.isBalanceEdge(startValueToken) === false) {\r\n        this.error();\r\n    }\r\n\r\n    return value;\r\n}\r\n\r\nmodule.exports = {\r\n    name: 'Declaration',\r\n    structure: {\r\n        important: [Boolean, String],\r\n        property: String,\r\n        value: ['Value', 'Raw']\r\n    },\r\n    parse: function() {\r\n        var start = this.scanner.tokenStart;\r\n        var startToken = this.scanner.tokenIndex;\r\n        var property = readProperty.call(this);\r\n        var customProperty = isCustomProperty(property);\r\n        var parseValue = customProperty ? this.parseCustomProperty : this.parseValue;\r\n        var consumeRaw = customProperty ? consumeCustomPropertyRaw : consumeValueRaw;\r\n        var important = false;\r\n        var value;\r\n\r\n        this.scanner.skipSC();\r\n        this.eat(COLON);\r\n\r\n        if (!customProperty) {\r\n            this.scanner.skipSC();\r\n        }\r\n\r\n        if (parseValue) {\r\n            value = this.parseWithFallback(consumeValue, consumeRaw);\r\n        } else {\r\n            value = consumeRaw.call(this, this.scanner.tokenIndex);\r\n        }\r\n\r\n        if (this.scanner.isDelim(EXCLAMATIONMARK)) {\r\n            important = getImportant.call(this);\r\n            this.scanner.skipSC();\r\n        }\r\n\r\n        // Do not include semicolon to range per spec\r\n        // https://drafts.csswg.org/css-syntax/#declaration-diagram\r\n\r\n        if (this.scanner.eof === false &&\r\n            this.scanner.tokenType !== SEMICOLON &&\r\n            this.scanner.isBalanceEdge(startToken) === false) {\r\n            this.error();\r\n        }\r\n\r\n        return {\r\n            type: 'Declaration',\r\n            loc: this.getLocation(start, this.scanner.tokenStart),\r\n            important: important,\r\n            property: property,\r\n            value: value\r\n        };\r\n    },\r\n    generate: function(node) {\r\n        this.chunk(node.property);\r\n        this.chunk(':');\r\n        this.node(node.value);\r\n\r\n        if (node.important) {\r\n            this.chunk(node.important === true ? '!important' : '!' + node.important);\r\n        }\r\n    },\r\n    walkContext: 'declaration'\r\n};\r\n\r\nfunction readProperty() {\r\n    var start = this.scanner.tokenStart;\r\n    var prefix = 0;\r\n\r\n    // hacks\r\n    if (this.scanner.tokenType === DELIM) {\r\n        switch (this.scanner.source.charCodeAt(this.scanner.tokenStart)) {\r\n            case ASTERISK:\r\n            case DOLLARSIGN:\r\n            case PLUSSIGN:\r\n            case NUMBERSIGN:\r\n            case AMPERSAND:\r\n                this.scanner.next();\r\n                break;\r\n\r\n            // TODO: not sure we should support this hack\r\n            case SOLIDUS:\r\n                this.scanner.next();\r\n                if (this.scanner.isDelim(SOLIDUS)) {\r\n                    this.scanner.next();\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    if (prefix) {\r\n        this.scanner.skip(prefix);\r\n    }\r\n\r\n    if (this.scanner.tokenType === HASH) {\r\n        this.eat(HASH);\r\n    } else {\r\n        this.eat(IDENT);\r\n    }\r\n\r\n    return this.scanner.substrToCursor(start);\r\n}\r\n\r\n// ! ws* important\r\nfunction getImportant() {\r\n    this.eat(DELIM);\r\n    this.scanner.skipSC();\r\n\r\n    var important = this.consume(IDENT);\r\n\r\n    // store original value in case it differ from `important`\r\n    // for better original source restoring and hacks like `!ie` support\r\n    return important === 'important' ? true : important;\r\n}\r\n","var TYPE = require('../../tokenizer').TYPE;\r\nvar rawMode = require('./Raw').mode;\r\n\r\nvar WHITESPACE = TYPE.WhiteSpace;\r\nvar COMMENT = TYPE.Comment;\r\nvar SEMICOLON = TYPE.Semicolon;\r\n\r\nfunction consumeRaw(startToken) {\r\n    return this.Raw(startToken, rawMode.semicolonIncluded, true);\r\n}\r\n\r\nmodule.exports = {\r\n    name: 'DeclarationList',\r\n    structure: {\r\n        children: [[\r\n            'Declaration'\r\n        ]]\r\n    },\r\n    parse: function() {\r\n        var children = this.createList();\r\n\r\n        scan:\r\n        while (!this.scanner.eof) {\r\n            switch (this.scanner.tokenType) {\r\n                case WHITESPACE:\r\n                case COMMENT:\r\n                case SEMICOLON:\r\n                    this.scanner.next();\r\n                    break;\r\n\r\n                default:\r\n                    children.push(this.parseWithFallback(this.Declaration, consumeRaw));\r\n            }\r\n        }\r\n\r\n        return {\r\n            type: 'DeclarationList',\r\n            loc: this.getLocationFromList(children),\r\n            children: children\r\n        };\r\n    },\r\n    generate: function(node) {\r\n        this.children(node, function(prev) {\r\n            if (prev.type === 'Declaration') {\r\n                this.chunk(';');\r\n            }\r\n        });\r\n    }\r\n};\r\n","var consumeNumber = require('../../tokenizer/utils').consumeNumber;\r\nvar TYPE = require('../../tokenizer').TYPE;\r\n\r\nvar DIMENSION = TYPE.Dimension;\r\n\r\nmodule.exports = {\r\n    name: 'Dimension',\r\n    structure: {\r\n        value: String,\r\n        unit: String\r\n    },\r\n    parse: function() {\r\n        var start = this.scanner.tokenStart;\r\n        var numberEnd = consumeNumber(this.scanner.source, start);\r\n\r\n        this.eat(DIMENSION);\r\n\r\n        return {\r\n            type: 'Dimension',\r\n            loc: this.getLocation(start, this.scanner.tokenStart),\r\n            value: this.scanner.source.substring(start, numberEnd),\r\n            unit: this.scanner.source.substring(numberEnd, this.scanner.tokenStart)\r\n        };\r\n    },\r\n    generate: function(node) {\r\n        this.chunk(node.value);\r\n        this.chunk(node.unit);\r\n    }\r\n};\r\n","var TYPE = require('../../tokenizer').TYPE;\r\n\r\nvar RIGHTPARENTHESIS = TYPE.RightParenthesis;\r\n\r\n// <function-token> <sequence> )\r\nmodule.exports = {\r\n    name: 'Function',\r\n    structure: {\r\n        name: String,\r\n        children: [[]]\r\n    },\r\n    parse: function(readSequence, recognizer) {\r\n        var start = this.scanner.tokenStart;\r\n        var name = this.consumeFunctionName();\r\n        var nameLowerCase = name.toLowerCase();\r\n        var children;\r\n\r\n        children = recognizer.hasOwnProperty(nameLowerCase)\r\n            ? recognizer[nameLowerCase].call(this, recognizer)\r\n            : readSequence.call(this, recognizer);\r\n\r\n        if (!this.scanner.eof) {\r\n            this.eat(RIGHTPARENTHESIS);\r\n        }\r\n\r\n        return {\r\n            type: 'Function',\r\n            loc: this.getLocation(start, this.scanner.tokenStart),\r\n            name: name,\r\n            children: children\r\n        };\r\n    },\r\n    generate: function(node) {\r\n        this.chunk(node.name);\r\n        this.chunk('(');\r\n        this.children(node);\r\n        this.chunk(')');\r\n    },\r\n    walkContext: 'function'\r\n};\r\n","var TYPE = require('../../tokenizer').TYPE;\r\n\r\nvar HASH = TYPE.Hash;\r\n\r\n// '#' ident\r\nmodule.exports = {\r\n    name: 'HexColor',\r\n    structure: {\r\n        value: String\r\n    },\r\n    parse: function() {\r\n        var start = this.scanner.tokenStart;\r\n\r\n        this.eat(HASH);\r\n\r\n        return {\r\n            type: 'HexColor',\r\n            loc: this.getLocation(start, this.scanner.tokenStart),\r\n            value: this.scanner.substrToCursor(start + 1)\r\n        };\r\n    },\r\n    generate: function(node) {\r\n        this.chunk('#');\r\n        this.chunk(node.value);\r\n    }\r\n};\r\n","var TYPE = require('../../tokenizer').TYPE;\r\n\r\nvar IDENT = TYPE.Ident;\r\n\r\nmodule.exports = {\r\n    name: 'Identifier',\r\n    structure: {\r\n        name: String\r\n    },\r\n    parse: function() {\r\n        return {\r\n            type: 'Identifier',\r\n            loc: this.getLocation(this.scanner.tokenStart, this.scanner.tokenEnd),\r\n            name: this.consume(IDENT)\r\n        };\r\n    },\r\n    generate: function(node) {\r\n        this.chunk(node.name);\r\n    }\r\n};\r\n","var TYPE = require('../../tokenizer').TYPE;\r\n\r\nvar HASH = TYPE.Hash;\r\n\r\n// <hash-token>\r\nmodule.exports = {\r\n    name: 'IdSelector',\r\n    structure: {\r\n        name: String\r\n    },\r\n    parse: function() {\r\n        var start = this.scanner.tokenStart;\r\n\r\n        // TODO: check value is an ident\r\n        this.eat(HASH);\r\n\r\n        return {\r\n            type: 'IdSelector',\r\n            loc: this.getLocation(start, this.scanner.tokenStart),\r\n            name: this.scanner.substrToCursor(start + 1)\r\n        };\r\n    },\r\n    generate: function(node) {\r\n        this.chunk('#');\r\n        this.chunk(node.name);\r\n    }\r\n};\r\n","var TYPE = require('../../tokenizer').TYPE;\r\n\r\nvar IDENT = TYPE.Ident;\r\nvar NUMBER = TYPE.Number;\r\nvar DIMENSION = TYPE.Dimension;\r\nvar LEFTPARENTHESIS = TYPE.LeftParenthesis;\r\nvar RIGHTPARENTHESIS = TYPE.RightParenthesis;\r\nvar COLON = TYPE.Colon;\r\nvar DELIM = TYPE.Delim;\r\n\r\nmodule.exports = {\r\n    name: 'MediaFeature',\r\n    structure: {\r\n        name: String,\r\n        value: ['Identifier', 'Number', 'Dimension', 'Ratio', null]\r\n    },\r\n    parse: function() {\r\n        var start = this.scanner.tokenStart;\r\n        var name;\r\n        var value = null;\r\n\r\n        this.eat(LEFTPARENTHESIS);\r\n        this.scanner.skipSC();\r\n\r\n        name = this.consume(IDENT);\r\n        this.scanner.skipSC();\r\n\r\n        if (this.scanner.tokenType !== RIGHTPARENTHESIS) {\r\n            this.eat(COLON);\r\n            this.scanner.skipSC();\r\n\r\n            switch (this.scanner.tokenType) {\r\n                case NUMBER:\r\n                    if (this.lookupNonWSType(1) === DELIM) {\r\n                        value = this.Ratio();\r\n                    } else {\r\n                        value = this.Number();\r\n                    }\r\n\r\n                    break;\r\n\r\n                case DIMENSION:\r\n                    value = this.Dimension();\r\n                    break;\r\n\r\n                case IDENT:\r\n                    value = this.Identifier();\r\n\r\n                    break;\r\n\r\n                default:\r\n                    this.error('Number, dimension, ratio or identifier is expected');\r\n            }\r\n\r\n            this.scanner.skipSC();\r\n        }\r\n\r\n        this.eat(RIGHTPARENTHESIS);\r\n\r\n        return {\r\n            type: 'MediaFeature',\r\n            loc: this.getLocation(start, this.scanner.tokenStart),\r\n            name: name,\r\n            value: value\r\n        };\r\n    },\r\n    generate: function(node) {\r\n        this.chunk('(');\r\n        this.chunk(node.name);\r\n        if (node.value !== null) {\r\n            this.chunk(':');\r\n            this.node(node.value);\r\n        }\r\n        this.chunk(')');\r\n    }\r\n};\r\n","var TYPE = require('../../tokenizer').TYPE;\r\n\r\nvar WHITESPACE = TYPE.WhiteSpace;\r\nvar COMMENT = TYPE.Comment;\r\nvar IDENT = TYPE.Ident;\r\nvar LEFTPARENTHESIS = TYPE.LeftParenthesis;\r\n\r\nmodule.exports = {\r\n    name: 'MediaQuery',\r\n    structure: {\r\n        children: [[\r\n            'Identifier',\r\n            'MediaFeature',\r\n            'WhiteSpace'\r\n        ]]\r\n    },\r\n    parse: function() {\r\n        this.scanner.skipSC();\r\n\r\n        var children = this.createList();\r\n        var child = null;\r\n        var space = null;\r\n\r\n        scan:\r\n        while (!this.scanner.eof) {\r\n            switch (this.scanner.tokenType) {\r\n                case COMMENT:\r\n                    this.scanner.next();\r\n                    continue;\r\n\r\n                case WHITESPACE:\r\n                    space = this.WhiteSpace();\r\n                    continue;\r\n\r\n                case IDENT:\r\n                    child = this.Identifier();\r\n                    break;\r\n\r\n                case LEFTPARENTHESIS:\r\n                    child = this.MediaFeature();\r\n                    break;\r\n\r\n                default:\r\n                    break scan;\r\n            }\r\n\r\n            if (space !== null) {\r\n                children.push(space);\r\n                space = null;\r\n            }\r\n\r\n            children.push(child);\r\n        }\r\n\r\n        if (child === null) {\r\n            this.error('Identifier or parenthesis is expected');\r\n        }\r\n\r\n        return {\r\n            type: 'MediaQuery',\r\n            loc: this.getLocationFromList(children),\r\n            children: children\r\n        };\r\n    },\r\n    generate: function(node) {\r\n        this.children(node);\r\n    }\r\n};\r\n","var COMMA = require('../../tokenizer').TYPE.Comma;\r\n\r\nmodule.exports = {\r\n    name: 'MediaQueryList',\r\n    structure: {\r\n        children: [[\r\n            'MediaQuery'\r\n        ]]\r\n    },\r\n    parse: function(relative) {\r\n        var children = this.createList();\r\n\r\n        this.scanner.skipSC();\r\n\r\n        while (!this.scanner.eof) {\r\n            children.push(this.MediaQuery(relative));\r\n\r\n            if (this.scanner.tokenType !== COMMA) {\r\n                break;\r\n            }\r\n\r\n            this.scanner.next();\r\n        }\r\n\r\n        return {\r\n            type: 'MediaQueryList',\r\n            loc: this.getLocationFromList(children),\r\n            children: children\r\n        };\r\n    },\r\n    generate: function(node) {\r\n        this.children(node, function() {\r\n            this.chunk(',');\r\n        });\r\n    }\r\n};\r\n","var NUMBER = require('../../tokenizer').TYPE.Number;\r\n\r\nmodule.exports = {\r\n    name: 'Number',\r\n    structure: {\r\n        value: String\r\n    },\r\n    parse: function() {\r\n        return {\r\n            type: 'Number',\r\n            loc: this.getLocation(this.scanner.tokenStart, this.scanner.tokenEnd),\r\n            value: this.consume(NUMBER)\r\n        };\r\n    },\r\n    generate: function(node) {\r\n        this.chunk(node.value);\r\n    }\r\n};\r\n","// '/' | '*' | ',' | ':' | '+' | '-'\r\nmodule.exports = {\r\n    name: 'Operator',\r\n    structure: {\r\n        value: String\r\n    },\r\n    parse: function() {\r\n        var start = this.scanner.tokenStart;\r\n\r\n        this.scanner.next();\r\n\r\n        return {\r\n            type: 'Operator',\r\n            loc: this.getLocation(start, this.scanner.tokenStart),\r\n            value: this.scanner.substrToCursor(start)\r\n        };\r\n    },\r\n    generate: function(node) {\r\n        this.chunk(node.value);\r\n    }\r\n};\r\n","var TYPE = require('../../tokenizer').TYPE;\r\n\r\nvar LEFTPARENTHESIS = TYPE.LeftParenthesis;\r\nvar RIGHTPARENTHESIS = TYPE.RightParenthesis;\r\n\r\nmodule.exports = {\r\n    name: 'Parentheses',\r\n    structure: {\r\n        children: [[]]\r\n    },\r\n    parse: function(readSequence, recognizer) {\r\n        var start = this.scanner.tokenStart;\r\n        var children = null;\r\n\r\n        this.eat(LEFTPARENTHESIS);\r\n\r\n        children = readSequence.call(this, recognizer);\r\n\r\n        if (!this.scanner.eof) {\r\n            this.eat(RIGHTPARENTHESIS);\r\n        }\r\n\r\n        return {\r\n            type: 'Parentheses',\r\n            loc: this.getLocation(start, this.scanner.tokenStart),\r\n            children: children\r\n        };\r\n    },\r\n    generate: function(node) {\r\n        this.chunk('(');\r\n        this.children(node);\r\n        this.chunk(')');\r\n    }\r\n};\r\n","var consumeNumber = require('../../tokenizer/utils').consumeNumber;\r\nvar TYPE = require('../../tokenizer').TYPE;\r\n\r\nvar PERCENTAGE = TYPE.Percentage;\r\n\r\nmodule.exports = {\r\n    name: 'Percentage',\r\n    structure: {\r\n        value: String\r\n    },\r\n    parse: function() {\r\n        var start = this.scanner.tokenStart;\r\n        var numberEnd = consumeNumber(this.scanner.source, start);\r\n\r\n        this.eat(PERCENTAGE);\r\n\r\n        return {\r\n            type: 'Percentage',\r\n            loc: this.getLocation(start, this.scanner.tokenStart),\r\n            value: this.scanner.source.substring(start, numberEnd)\r\n        };\r\n    },\r\n    generate: function(node) {\r\n        this.chunk(node.value);\r\n        this.chunk('%');\r\n    }\r\n};\r\n","var TYPE = require('../../tokenizer').TYPE;\r\n\r\nvar IDENT = TYPE.Ident;\r\nvar FUNCTION = TYPE.Function;\r\nvar COLON = TYPE.Colon;\r\nvar RIGHTPARENTHESIS = TYPE.RightParenthesis;\r\n\r\n// : [ <ident> | <function-token> <any-value>? ) ]\r\nmodule.exports = {\r\n    name: 'PseudoClassSelector',\r\n    structure: {\r\n        name: String,\r\n        children: [['Raw'], null]\r\n    },\r\n    parse: function() {\r\n        var start = this.scanner.tokenStart;\r\n        var children = null;\r\n        var name;\r\n        var nameLowerCase;\r\n\r\n        this.eat(COLON);\r\n\r\n        if (this.scanner.tokenType === FUNCTION) {\r\n            name = this.consumeFunctionName();\r\n            nameLowerCase = name.toLowerCase();\r\n\r\n            if (this.pseudo.hasOwnProperty(nameLowerCase)) {\r\n                this.scanner.skipSC();\r\n                children = this.pseudo[nameLowerCase].call(this);\r\n                this.scanner.skipSC();\r\n            } else {\r\n                children = this.createList();\r\n                children.push(\r\n                    this.Raw(this.scanner.tokenIndex, null, false)\r\n                );\r\n            }\r\n\r\n            this.eat(RIGHTPARENTHESIS);\r\n        } else {\r\n            name = this.consume(IDENT);\r\n        }\r\n\r\n        return {\r\n            type: 'PseudoClassSelector',\r\n            loc: this.getLocation(start, this.scanner.tokenStart),\r\n            name: name,\r\n            children: children\r\n        };\r\n    },\r\n    generate: function(node) {\r\n        this.chunk(':');\r\n        this.chunk(node.name);\r\n\r\n        if (node.children !== null) {\r\n            this.chunk('(');\r\n            this.children(node);\r\n            this.chunk(')');\r\n        }\r\n    },\r\n    walkContext: 'function'\r\n};\r\n","var TYPE = require('../../tokenizer').TYPE;\r\n\r\nvar IDENT = TYPE.Ident;\r\nvar FUNCTION = TYPE.Function;\r\nvar COLON = TYPE.Colon;\r\nvar RIGHTPARENTHESIS = TYPE.RightParenthesis;\r\n\r\n// :: [ <ident> | <function-token> <any-value>? ) ]\r\nmodule.exports = {\r\n    name: 'PseudoElementSelector',\r\n    structure: {\r\n        name: String,\r\n        children: [['Raw'], null]\r\n    },\r\n    parse: function() {\r\n        var start = this.scanner.tokenStart;\r\n        var children = null;\r\n        var name;\r\n        var nameLowerCase;\r\n\r\n        this.eat(COLON);\r\n        this.eat(COLON);\r\n\r\n        if (this.scanner.tokenType === FUNCTION) {\r\n            name = this.consumeFunctionName();\r\n            nameLowerCase = name.toLowerCase();\r\n\r\n            if (this.pseudo.hasOwnProperty(nameLowerCase)) {\r\n                this.scanner.skipSC();\r\n                children = this.pseudo[nameLowerCase].call(this);\r\n                this.scanner.skipSC();\r\n            } else {\r\n                children = this.createList();\r\n                children.push(\r\n                    this.Raw(this.scanner.tokenIndex, null, false)\r\n                );\r\n            }\r\n\r\n            this.eat(RIGHTPARENTHESIS);\r\n        } else {\r\n            name = this.consume(IDENT);\r\n        }\r\n\r\n        return {\r\n            type: 'PseudoElementSelector',\r\n            loc: this.getLocation(start, this.scanner.tokenStart),\r\n            name: name,\r\n            children: children\r\n        };\r\n    },\r\n    generate: function(node) {\r\n        this.chunk('::');\r\n        this.chunk(node.name);\r\n\r\n        if (node.children !== null) {\r\n            this.chunk('(');\r\n            this.children(node);\r\n            this.chunk(')');\r\n        }\r\n    },\r\n    walkContext: 'function'\r\n};\r\n","var isDigit = require('../../tokenizer').isDigit;\r\nvar TYPE = require('../../tokenizer').TYPE;\r\n\r\nvar NUMBER = TYPE.Number;\r\nvar DELIM = TYPE.Delim;\r\nvar SOLIDUS = 0x002F;  // U+002F SOLIDUS (/)\r\nvar FULLSTOP = 0x002E; // U+002E FULL STOP (.)\r\n\r\n// Terms of <ratio> should be a positive numbers (not zero or negative)\r\n// (see https://drafts.csswg.org/mediaqueries-3/#values)\r\n// However, -o-min-device-pixel-ratio takes fractional values as a ratio's term\r\n// and this is using by various sites. Therefore we relax checking on parse\r\n// to test a term is unsigned number without an exponent part.\r\n// Additional checking may be applied on lexer validation.\r\nfunction consumeNumber() {\r\n    this.scanner.skipWS();\r\n\r\n    var value = this.consume(NUMBER);\r\n\r\n    for (var i = 0; i < value.length; i++) {\r\n        var code = value.charCodeAt(i);\r\n        if (!isDigit(code) && code !== FULLSTOP) {\r\n            this.error('Unsigned number is expected', this.scanner.tokenStart - value.length + i);\r\n        }\r\n    }\r\n\r\n    if (Number(value) === 0) {\r\n        this.error('Zero number is not allowed', this.scanner.tokenStart - value.length);\r\n    }\r\n\r\n    return value;\r\n}\r\n\r\n// <positive-integer> S* '/' S* <positive-integer>\r\nmodule.exports = {\r\n    name: 'Ratio',\r\n    structure: {\r\n        left: String,\r\n        right: String\r\n    },\r\n    parse: function() {\r\n        var start = this.scanner.tokenStart;\r\n        var left = consumeNumber.call(this);\r\n        var right;\r\n\r\n        this.scanner.skipWS();\r\n\r\n        if (!this.scanner.isDelim(SOLIDUS)) {\r\n            this.error('Solidus is expected');\r\n        }\r\n        this.eat(DELIM);\r\n        right = consumeNumber.call(this);\r\n\r\n        return {\r\n            type: 'Ratio',\r\n            loc: this.getLocation(start, this.scanner.tokenStart),\r\n            left: left,\r\n            right: right\r\n        };\r\n    },\r\n    generate: function(node) {\r\n        this.chunk(node.left);\r\n        this.chunk('/');\r\n        this.chunk(node.right);\r\n    }\r\n};\r\n","var TYPE = require('../../tokenizer').TYPE;\r\nvar rawMode = require('./Raw').mode;\r\n\r\nvar LEFTCURLYBRACKET = TYPE.LeftCurlyBracket;\r\n\r\nfunction consumeRaw(startToken) {\r\n    return this.Raw(startToken, rawMode.leftCurlyBracket, true);\r\n}\r\n\r\nfunction consumePrelude() {\r\n    var prelude = this.SelectorList();\r\n\r\n    if (prelude.type !== 'Raw' &&\r\n        this.scanner.eof === false &&\r\n        this.scanner.tokenType !== LEFTCURLYBRACKET) {\r\n        this.error();\r\n    }\r\n\r\n    return prelude;\r\n}\r\n\r\nmodule.exports = {\r\n    name: 'Rule',\r\n    structure: {\r\n        prelude: ['SelectorList', 'Raw'],\r\n        block: ['Block']\r\n    },\r\n    parse: function() {\r\n        var startToken = this.scanner.tokenIndex;\r\n        var startOffset = this.scanner.tokenStart;\r\n        var prelude;\r\n        var block;\r\n\r\n        if (this.parseRulePrelude) {\r\n            prelude = this.parseWithFallback(consumePrelude, consumeRaw);\r\n        } else {\r\n            prelude = consumeRaw.call(this, startToken);\r\n        }\r\n\r\n        block = this.Block(true);\r\n\r\n        return {\r\n            type: 'Rule',\r\n            loc: this.getLocation(startOffset, this.scanner.tokenStart),\r\n            prelude: prelude,\r\n            block: block\r\n        };\r\n    },\r\n    generate: function(node) {\r\n        this.node(node.prelude);\r\n        this.node(node.block);\r\n    },\r\n    walkContext: 'rule'\r\n};\r\n","var TYPE = require('../../tokenizer').TYPE;\r\n\r\nvar COMMA = TYPE.Comma;\r\n\r\nmodule.exports = {\r\n    name: 'SelectorList',\r\n    structure: {\r\n        children: [[\r\n            'Selector',\r\n            'Raw'\r\n        ]]\r\n    },\r\n    parse: function() {\r\n        var children = this.createList();\r\n\r\n        while (!this.scanner.eof) {\r\n            children.push(this.Selector());\r\n\r\n            if (this.scanner.tokenType === COMMA) {\r\n                this.scanner.next();\r\n                continue;\r\n            }\r\n\r\n            break;\r\n        }\r\n\r\n        return {\r\n            type: 'SelectorList',\r\n            loc: this.getLocationFromList(children),\r\n            children: children\r\n        };\r\n    },\r\n    generate: function(node) {\r\n        this.children(node, function() {\r\n            this.chunk(',');\r\n        });\r\n    },\r\n    walkContext: 'selector'\r\n};\r\n","var STRING = require('../../tokenizer').TYPE.String;\r\n\r\nmodule.exports = {\r\n    name: 'String',\r\n    structure: {\r\n        value: String\r\n    },\r\n    parse: function() {\r\n        return {\r\n            type: 'String',\r\n            loc: this.getLocation(this.scanner.tokenStart, this.scanner.tokenEnd),\r\n            value: this.consume(STRING)\r\n        };\r\n    },\r\n    generate: function(node) {\r\n        this.chunk(node.value);\r\n    }\r\n};\r\n","var TYPE = require('../../tokenizer').TYPE;\r\n\r\nvar WHITESPACE = TYPE.WhiteSpace;\r\nvar COMMENT = TYPE.Comment;\r\nvar ATKEYWORD = TYPE.AtKeyword;\r\nvar CDO = TYPE.CDO;\r\nvar CDC = TYPE.CDC;\r\nvar EXCLAMATIONMARK = 0x0021; // U+0021 EXCLAMATION MARK (!)\r\n\r\nfunction consumeRaw(startToken) {\r\n    return this.Raw(startToken, null, false);\r\n}\r\n\r\nmodule.exports = {\r\n    name: 'StyleSheet',\r\n    structure: {\r\n        children: [[\r\n            'Comment',\r\n            'CDO',\r\n            'CDC',\r\n            'Atrule',\r\n            'Rule',\r\n            'Raw'\r\n        ]]\r\n    },\r\n    parse: function() {\r\n        var start = this.scanner.tokenStart;\r\n        var children = this.createList();\r\n        var child;\r\n\r\n        scan:\r\n        while (!this.scanner.eof) {\r\n            switch (this.scanner.tokenType) {\r\n                case WHITESPACE:\r\n                    this.scanner.next();\r\n                    continue;\r\n\r\n                case COMMENT:\r\n                    // ignore comments except exclamation comments (i.e. /*! .. */) on top level\r\n                    if (this.scanner.source.charCodeAt(this.scanner.tokenStart + 2) !== EXCLAMATIONMARK) {\r\n                        this.scanner.next();\r\n                        continue;\r\n                    }\r\n\r\n                    child = this.Comment();\r\n                    break;\r\n\r\n                case CDO: // <!--\r\n                    child = this.CDO();\r\n                    break;\r\n\r\n                case CDC: // -->\r\n                    child = this.CDC();\r\n                    break;\r\n\r\n                // CSS Syntax Module Level 3\r\n                // §2.2 Error handling\r\n                // At the \"top level\" of a stylesheet, an <at-keyword-token> starts an at-rule.\r\n                case ATKEYWORD:\r\n                    child = this.parseWithFallback(this.Atrule, consumeRaw);\r\n                    break;\r\n\r\n                // Anything else starts a qualified rule ...\r\n                default:\r\n                    child = this.parseWithFallback(this.Rule, consumeRaw);\r\n            }\r\n\r\n            children.push(child);\r\n        }\r\n\r\n        return {\r\n            type: 'StyleSheet',\r\n            loc: this.getLocation(start, this.scanner.tokenStart),\r\n            children: children\r\n        };\r\n    },\r\n    generate: function(node) {\r\n        this.children(node);\r\n    },\r\n    walkContext: 'stylesheet'\r\n};\r\n","var TYPE = require('../../tokenizer').TYPE;\r\n\r\nvar IDENT = TYPE.Ident;\r\nvar ASTERISK = 0x002A;     // U+002A ASTERISK (*)\r\nvar VERTICALLINE = 0x007C; // U+007C VERTICAL LINE (|)\r\n\r\nfunction eatIdentifierOrAsterisk() {\r\n    if (this.scanner.tokenType !== IDENT &&\r\n        this.scanner.isDelim(ASTERISK) === false) {\r\n        this.error('Identifier or asterisk is expected');\r\n    }\r\n\r\n    this.scanner.next();\r\n}\r\n\r\n// ident\r\n// ident|ident\r\n// ident|*\r\n// *\r\n// *|ident\r\n// *|*\r\n// |ident\r\n// |*\r\nmodule.exports = {\r\n    name: 'TypeSelector',\r\n    structure: {\r\n        name: String\r\n    },\r\n    parse: function() {\r\n        var start = this.scanner.tokenStart;\r\n\r\n        if (this.scanner.isDelim(VERTICALLINE)) {\r\n            this.scanner.next();\r\n            eatIdentifierOrAsterisk.call(this);\r\n        } else {\r\n            eatIdentifierOrAsterisk.call(this);\r\n\r\n            if (this.scanner.isDelim(VERTICALLINE)) {\r\n                this.scanner.next();\r\n                eatIdentifierOrAsterisk.call(this);\r\n            }\r\n        }\r\n\r\n        return {\r\n            type: 'TypeSelector',\r\n            loc: this.getLocation(start, this.scanner.tokenStart),\r\n            name: this.scanner.substrToCursor(start)\r\n        };\r\n    },\r\n    generate: function(node) {\r\n        this.chunk(node.name);\r\n    }\r\n};\r\n","var isHexDigit = require('../../tokenizer').isHexDigit;\r\nvar cmpChar = require('../../tokenizer').cmpChar;\r\nvar TYPE = require('../../tokenizer').TYPE;\r\nvar NAME = require('../../tokenizer').NAME;\r\n\r\nvar IDENT = TYPE.Ident;\r\nvar NUMBER = TYPE.Number;\r\nvar DIMENSION = TYPE.Dimension;\r\nvar PLUSSIGN = 0x002B;     // U+002B PLUS SIGN (+)\r\nvar HYPHENMINUS = 0x002D;  // U+002D HYPHEN-MINUS (-)\r\nvar QUESTIONMARK = 0x003F; // U+003F QUESTION MARK (?)\r\nvar U = 0x0075;            // U+0075 LATIN SMALL LETTER U (u)\r\n\r\nfunction eatHexSequence(offset, allowDash) {\r\n    for (var pos = this.scanner.tokenStart + offset, len = 0; pos < this.scanner.tokenEnd; pos++) {\r\n        var code = this.scanner.source.charCodeAt(pos);\r\n\r\n        if (code === HYPHENMINUS && allowDash && len !== 0) {\r\n            if (eatHexSequence.call(this, offset + len + 1, false) === 0) {\r\n                this.error();\r\n            }\r\n\r\n            return -1;\r\n        }\r\n\r\n        if (!isHexDigit(code)) {\r\n            this.error(\r\n                allowDash && len !== 0\r\n                    ? 'HyphenMinus' + (len < 6 ? ' or hex digit' : '') + ' is expected'\r\n                    : (len < 6 ? 'Hex digit is expected' : 'Unexpected input'),\r\n                pos\r\n            );\r\n        }\r\n\r\n        if (++len > 6) {\r\n            this.error('Too many hex digits', pos);\r\n        };\r\n    }\r\n\r\n    this.scanner.next();\r\n    return len;\r\n}\r\n\r\nfunction eatQuestionMarkSequence(max) {\r\n    var count = 0;\r\n\r\n    while (this.scanner.isDelim(QUESTIONMARK)) {\r\n        if (++count > max) {\r\n            this.error('Too many question marks');\r\n        }\r\n\r\n        this.scanner.next();\r\n    }\r\n}\r\n\r\nfunction startsWith(code) {\r\n    if (this.scanner.source.charCodeAt(this.scanner.tokenStart) !== code) {\r\n        this.error(NAME[code] + ' is expected');\r\n    }\r\n}\r\n\r\n// https://drafts.csswg.org/css-syntax/#urange\r\n// Informally, the <urange> production has three forms:\r\n// U+0001\r\n//      Defines a range consisting of a single code point, in this case the code point \"1\".\r\n// U+0001-00ff\r\n//      Defines a range of codepoints between the first and the second value, in this case\r\n//      the range between \"1\" and \"ff\" (255 in decimal) inclusive.\r\n// U+00??\r\n//      Defines a range of codepoints where the \"?\" characters range over all hex digits,\r\n//      in this case defining the same as the value U+0000-00ff.\r\n// In each form, a maximum of 6 digits is allowed for each hexadecimal number (if you treat \"?\" as a hexadecimal digit).\r\n//\r\n// <urange> =\r\n//   u '+' <ident-token> '?'* |\r\n//   u <dimension-token> '?'* |\r\n//   u <number-token> '?'* |\r\n//   u <number-token> <dimension-token> |\r\n//   u <number-token> <number-token> |\r\n//   u '+' '?'+\r\nfunction scanUnicodeRange() {\r\n    var hexLength = 0;\r\n\r\n    // u '+' <ident-token> '?'*\r\n    // u '+' '?'+\r\n    if (this.scanner.isDelim(PLUSSIGN)) {\r\n        this.scanner.next();\r\n\r\n        if (this.scanner.tokenType === IDENT) {\r\n            hexLength = eatHexSequence.call(this, 0, true);\r\n            if (hexLength > 0) {\r\n                eatQuestionMarkSequence.call(this, 6 - hexLength);\r\n            }\r\n            return;\r\n        }\r\n\r\n        if (this.scanner.isDelim(QUESTIONMARK)) {\r\n            this.scanner.next();\r\n            eatQuestionMarkSequence.call(this, 5);\r\n            return;\r\n        }\r\n\r\n        this.error('Hex digit or question mark is expected');\r\n        return;\r\n    }\r\n\r\n    // u <number-token> '?'*\r\n    // u <number-token> <dimension-token>\r\n    // u <number-token> <number-token>\r\n    if (this.scanner.tokenType === NUMBER) {\r\n        startsWith.call(this, PLUSSIGN);\r\n        hexLength = eatHexSequence.call(this, 1, true);\r\n\r\n        if (this.scanner.isDelim(QUESTIONMARK)) {\r\n            eatQuestionMarkSequence.call(this, 6 - hexLength);\r\n            return;\r\n        }\r\n\r\n        if (this.scanner.tokenType === DIMENSION ||\r\n            this.scanner.tokenType === NUMBER) {\r\n            startsWith.call(this, HYPHENMINUS);\r\n            eatHexSequence.call(this, 1, false);\r\n            return;\r\n        }\r\n\r\n        return;\r\n    }\r\n\r\n    // u <dimension-token> '?'*\r\n    if (this.scanner.tokenType === DIMENSION) {\r\n        startsWith.call(this, PLUSSIGN);\r\n        hexLength = eatHexSequence.call(this, 1, true);\r\n\r\n        if (hexLength > 0) {\r\n            eatQuestionMarkSequence.call(this, 6 - hexLength);\r\n        }\r\n\r\n        return;\r\n    }\r\n\r\n    this.error();\r\n}\r\n\r\nmodule.exports = {\r\n    name: 'UnicodeRange',\r\n    structure: {\r\n        value: String\r\n    },\r\n    parse: function() {\r\n        var start = this.scanner.tokenStart;\r\n\r\n        // U or u\r\n        if (!cmpChar(this.scanner.source, start, U)) {\r\n            this.error('U is expected');\r\n        }\r\n\r\n        if (!cmpChar(this.scanner.source, start + 1, PLUSSIGN)) {\r\n            this.error('Plus sign is expected');\r\n        }\r\n\r\n        this.scanner.next();\r\n        scanUnicodeRange.call(this);\r\n\r\n        return {\r\n            type: 'UnicodeRange',\r\n            loc: this.getLocation(start, this.scanner.tokenStart),\r\n            value: this.scanner.substrToCursor(start)\r\n        };\r\n    },\r\n    generate: function(node) {\r\n        this.chunk(node.value);\r\n    }\r\n};\r\n","var isWhiteSpace = require('../../tokenizer').isWhiteSpace;\r\nvar cmpStr = require('../../tokenizer').cmpStr;\r\nvar TYPE = require('../../tokenizer').TYPE;\r\n\r\nvar FUNCTION = TYPE.Function;\r\nvar URL = TYPE.Url;\r\nvar RIGHTPARENTHESIS = TYPE.RightParenthesis;\r\n\r\n// <url-token> | <function-token> <string> )\r\nmodule.exports = {\r\n    name: 'Url',\r\n    structure: {\r\n        value: ['String', 'Raw']\r\n    },\r\n    parse: function() {\r\n        var start = this.scanner.tokenStart;\r\n        var value;\r\n\r\n        switch (this.scanner.tokenType) {\r\n            case URL:\r\n                var rawStart = start + 4;\r\n                var rawEnd = this.scanner.tokenEnd - 1;\r\n\r\n                while (rawStart < rawEnd && isWhiteSpace(this.scanner.source.charCodeAt(rawStart))) {\r\n                    rawStart++;\r\n                }\r\n\r\n                while (rawStart < rawEnd && isWhiteSpace(this.scanner.source.charCodeAt(rawEnd - 1))) {\r\n                    rawEnd--;\r\n                }\r\n\r\n                value = {\r\n                    type: 'Raw',\r\n                    loc: this.getLocation(rawStart, rawEnd),\r\n                    value: this.scanner.source.substring(rawStart, rawEnd)\r\n                };\r\n\r\n                this.eat(URL);\r\n                break;\r\n\r\n            case FUNCTION:\r\n                if (!cmpStr(this.scanner.source, this.scanner.tokenStart, this.scanner.tokenEnd, 'url(')) {\r\n                    this.error('Function name must be `url`');\r\n                }\r\n\r\n                this.eat(FUNCTION);\r\n                this.scanner.skipSC();\r\n                value = this.String();\r\n                this.scanner.skipSC();\r\n                this.eat(RIGHTPARENTHESIS);\r\n                break;\r\n\r\n            default:\r\n                this.error('Url or Function is expected');\r\n        }\r\n\r\n        return {\r\n            type: 'Url',\r\n            loc: this.getLocation(start, this.scanner.tokenStart),\r\n            value: value\r\n        };\r\n    },\r\n    generate: function(node) {\r\n        this.chunk('url');\r\n        this.chunk('(');\r\n        this.node(node.value);\r\n        this.chunk(')');\r\n    }\r\n};\r\n","var WHITESPACE = require('../../tokenizer').TYPE.WhiteSpace;\r\nvar SPACE = Object.freeze({\r\n    type: 'WhiteSpace',\r\n    loc: null,\r\n    value: ' '\r\n});\r\n\r\nmodule.exports = {\r\n    name: 'WhiteSpace',\r\n    structure: {\r\n        value: String\r\n    },\r\n    parse: function() {\r\n        this.eat(WHITESPACE);\r\n        return SPACE;\r\n\r\n        // return {\r\n        //     type: 'WhiteSpace',\r\n        //     loc: this.getLocation(this.scanner.tokenStart, this.scanner.tokenEnd),\r\n        //     value: this.consume(WHITESPACE)\r\n        // };\r\n    },\r\n    generate: function(node) {\r\n        this.chunk(node.value);\r\n    }\r\n};\r\n","module.exports = {\r\n    AnPlusB: require('./AnPlusB'),\r\n    Atrule: require('./Atrule'),\r\n    AtrulePrelude: require('./AtrulePrelude'),\r\n    AttributeSelector: require('./AttributeSelector'),\r\n    Block: require('./Block'),\r\n    Brackets: require('./Brackets'),\r\n    CDC: require('./CDC'),\r\n    CDO: require('./CDO'),\r\n    ClassSelector: require('./ClassSelector'),\r\n    Combinator: require('./Combinator'),\r\n    Comment: require('./Comment'),\r\n    Declaration: require('./Declaration'),\r\n    DeclarationList: require('./DeclarationList'),\r\n    Dimension: require('./Dimension'),\r\n    Function: require('./Function'),\r\n    HexColor: require('./HexColor'),\r\n    Identifier: require('./Identifier'),\r\n    IdSelector: require('./IdSelector'),\r\n    MediaFeature: require('./MediaFeature'),\r\n    MediaQuery: require('./MediaQuery'),\r\n    MediaQueryList: require('./MediaQueryList'),\r\n    Nth: require('./Nth'),\r\n    Number: require('./Number'),\r\n    Operator: require('./Operator'),\r\n    Parentheses: require('./Parentheses'),\r\n    Percentage: require('./Percentage'),\r\n    PseudoClassSelector: require('./PseudoClassSelector'),\r\n    PseudoElementSelector: require('./PseudoElementSelector'),\r\n    Ratio: require('./Ratio'),\r\n    Raw: require('./Raw'),\r\n    Rule: require('./Rule'),\r\n    Selector: require('./Selector'),\r\n    SelectorList: require('./SelectorList'),\r\n    String: require('./String'),\r\n    StyleSheet: require('./StyleSheet'),\r\n    TypeSelector: require('./TypeSelector'),\r\n    UnicodeRange: require('./UnicodeRange'),\r\n    Url: require('./Url'),\r\n    Value: require('./Value'),\r\n    WhiteSpace: require('./WhiteSpace')\r\n};\r\n","module.exports = {\r\n    name: 'Nth',\r\n    structure: {\r\n        nth: ['AnPlusB', 'Identifier'],\r\n        selector: ['SelectorList', null]\r\n    },\r\n    parse: function(allowOfClause) {\r\n        this.scanner.skipSC();\r\n\r\n        var start = this.scanner.tokenStart;\r\n        var end = start;\r\n        var selector = null;\r\n        var query;\r\n\r\n        if (this.scanner.lookupValue(0, 'odd') || this.scanner.lookupValue(0, 'even')) {\r\n            query = this.Identifier();\r\n        } else {\r\n            query = this.AnPlusB();\r\n        }\r\n\r\n        this.scanner.skipSC();\r\n\r\n        if (allowOfClause && this.scanner.lookupValue(0, 'of')) {\r\n            this.scanner.next();\r\n\r\n            selector = this.SelectorList();\r\n\r\n            if (this.needPositions) {\r\n                end = this.getLastListNode(selector.children).loc.end.offset;\r\n            }\r\n        } else {\r\n            if (this.needPositions) {\r\n                end = query.loc.end.offset;\r\n            }\r\n        }\r\n\r\n        return {\r\n            type: 'Nth',\r\n            loc: this.getLocation(start, end),\r\n            nth: query,\r\n            selector: selector\r\n        };\r\n    },\r\n    generate: function(node) {\r\n        this.node(node.nth);\r\n        if (node.selector !== null) {\r\n            this.chunk(' of ');\r\n            this.node(node.selector);\r\n        }\r\n    }\r\n};\r\n","module.exports = {\r\n    name: 'Selector',\r\n    structure: {\r\n        children: [[\r\n            'TypeSelector',\r\n            'IdSelector',\r\n            'ClassSelector',\r\n            'AttributeSelector',\r\n            'PseudoClassSelector',\r\n            'PseudoElementSelector',\r\n            'Combinator',\r\n            'WhiteSpace'\r\n        ]]\r\n    },\r\n    parse: function() {\r\n        var children = this.readSequence(this.scope.Selector);\r\n\r\n        // nothing were consumed\r\n        if (this.getFirstListNode(children) === null) {\r\n            this.error('Selector is expected');\r\n        }\r\n\r\n        return {\r\n            type: 'Selector',\r\n            loc: this.getLocationFromList(children),\r\n            children: children\r\n        };\r\n    },\r\n    generate: function(node) {\r\n        this.children(node);\r\n    }\r\n};\r\n","module.exports = {\r\n    name: 'Value',\r\n    structure: {\r\n        children: [[]]\r\n    },\r\n    parse: function() {\r\n        var start = this.scanner.tokenStart;\r\n        var children = this.readSequence(this.scope.Value);\r\n\r\n        return {\r\n            type: 'Value',\r\n            loc: this.getLocation(start, this.scanner.tokenStart),\r\n            children: children\r\n        };\r\n    },\r\n    generate: function(node) {\r\n        this.children(node);\r\n    }\r\n};\r\n","var data = require('../../../data');\r\n\r\nmodule.exports = {\r\n    generic: true,\r\n    types: data.types,\r\n    atrules: data.atrules,\r\n    properties: data.properties,\r\n    node: require('../node')\r\n};\r\n","var cmpChar = require('../../tokenizer').cmpChar;\r\nvar cmpStr = require('../../tokenizer').cmpStr;\r\nvar TYPE = require('../../tokenizer').TYPE;\r\n\r\nvar IDENT = TYPE.Ident;\r\nvar STRING = TYPE.String;\r\nvar NUMBER = TYPE.Number;\r\nvar FUNCTION = TYPE.Function;\r\nvar URL = TYPE.Url;\r\nvar HASH = TYPE.Hash;\r\nvar DIMENSION = TYPE.Dimension;\r\nvar PERCENTAGE = TYPE.Percentage;\r\nvar LEFTPARENTHESIS = TYPE.LeftParenthesis;\r\nvar LEFTSQUAREBRACKET = TYPE.LeftSquareBracket;\r\nvar COMMA = TYPE.Comma;\r\nvar DELIM = TYPE.Delim;\r\nvar NUMBERSIGN = 0x0023;  // U+0023 NUMBER SIGN (#)\r\nvar ASTERISK = 0x002A;    // U+002A ASTERISK (*)\r\nvar PLUSSIGN = 0x002B;    // U+002B PLUS SIGN (+)\r\nvar HYPHENMINUS = 0x002D; // U+002D HYPHEN-MINUS (-)\r\nvar SOLIDUS = 0x002F;     // U+002F SOLIDUS (/)\r\nvar U = 0x0075;           // U+0075 LATIN SMALL LETTER U (u)\r\n\r\nmodule.exports = function defaultRecognizer(context) {\r\n    switch (this.scanner.tokenType) {\r\n        case HASH:\r\n            return this.HexColor();\r\n\r\n        case COMMA:\r\n            context.space = null;\r\n            context.ignoreWSAfter = true;\r\n            return this.Operator();\r\n\r\n        case LEFTPARENTHESIS:\r\n            return this.Parentheses(this.readSequence, context.recognizer);\r\n\r\n        case LEFTSQUAREBRACKET:\r\n            return this.Brackets(this.readSequence, context.recognizer);\r\n\r\n        case STRING:\r\n            return this.String();\r\n\r\n        case DIMENSION:\r\n            return this.Dimension();\r\n\r\n        case PERCENTAGE:\r\n            return this.Percentage();\r\n\r\n        case NUMBER:\r\n            return this.Number();\r\n\r\n        case FUNCTION:\r\n            return cmpStr(this.scanner.source, this.scanner.tokenStart, this.scanner.tokenEnd, 'url(')\r\n                ? this.Url()\r\n                : this.Function(this.readSequence, context.recognizer);\r\n\r\n        case URL:\r\n            return this.Url();\r\n\r\n        case IDENT:\r\n            // check for unicode range, it should start with u+ or U+\r\n            if (cmpChar(this.scanner.source, this.scanner.tokenStart, U) &&\r\n                cmpChar(this.scanner.source, this.scanner.tokenStart + 1, PLUSSIGN)) {\r\n                return this.UnicodeRange();\r\n            } else {\r\n                return this.Identifier();\r\n            }\r\n\r\n        case DELIM:\r\n            var code = this.scanner.source.charCodeAt(this.scanner.tokenStart);\r\n\r\n            if (code === SOLIDUS ||\r\n                code === ASTERISK ||\r\n                code === PLUSSIGN ||\r\n                code === HYPHENMINUS) {\r\n                return this.Operator(); // TODO: replace with Delim\r\n            }\r\n\r\n            // TODO: produce a node with Delim node type\r\n\r\n            if (code === NUMBERSIGN) {\r\n                this.error('Hex or identifier is expected', this.scanner.tokenStart + 1);\r\n            }\r\n\r\n            break;\r\n    }\r\n};\r\n","module.exports = {\r\n    getNode: require('./default')\r\n};\r\n","var TYPE = require('../../tokenizer').TYPE;\r\n\r\nvar DELIM = TYPE.Delim;\r\nvar IDENT = TYPE.Ident;\r\nvar DIMENSION = TYPE.Dimension;\r\nvar PERCENTAGE = TYPE.Percentage;\r\nvar NUMBER = TYPE.Number;\r\nvar HASH = TYPE.Hash;\r\nvar COLON = TYPE.Colon;\r\nvar LEFTSQUAREBRACKET = TYPE.LeftSquareBracket;\r\nvar NUMBERSIGN = 0x0023;      // U+0023 NUMBER SIGN (#)\r\nvar ASTERISK = 0x002A;        // U+002A ASTERISK (*)\r\nvar PLUSSIGN = 0x002B;        // U+002B PLUS SIGN (+)\r\nvar SOLIDUS = 0x002F;         // U+002F SOLIDUS (/)\r\nvar FULLSTOP = 0x002E;        // U+002E FULL STOP (.)\r\nvar GREATERTHANSIGN = 0x003E; // U+003E GREATER-THAN SIGN (>)\r\nvar VERTICALLINE = 0x007C;    // U+007C VERTICAL LINE (|)\r\nvar TILDE = 0x007E;           // U+007E TILDE (~)\r\n\r\nfunction getNode(context) {\r\n    switch (this.scanner.tokenType) {\r\n        case LEFTSQUAREBRACKET:\r\n            return this.AttributeSelector();\r\n\r\n        case HASH:\r\n            return this.IdSelector();\r\n\r\n        case COLON:\r\n            if (this.scanner.lookupType(1) === COLON) {\r\n                return this.PseudoElementSelector();\r\n            } else {\r\n                return this.PseudoClassSelector();\r\n            }\r\n\r\n        case IDENT:\r\n            return this.TypeSelector();\r\n\r\n        case NUMBER:\r\n        case PERCENTAGE:\r\n            return this.Percentage();\r\n\r\n        case DIMENSION:\r\n            // throws when .123ident\r\n            if (this.scanner.source.charCodeAt(this.scanner.tokenStart) === FULLSTOP) {\r\n                this.error('Identifier is expected', this.scanner.tokenStart + 1);\r\n            }\r\n            break;\r\n\r\n        case DELIM:\r\n            var code = this.scanner.source.charCodeAt(this.scanner.tokenStart);\r\n\r\n            switch (code) {\r\n                case PLUSSIGN:\r\n                case GREATERTHANSIGN:\r\n                case TILDE:\r\n                    context.space = null;\r\n                    context.ignoreWSAfter = true;\r\n                    return this.Combinator();\r\n\r\n                case SOLIDUS:  // /deep/\r\n                    return this.Combinator();\r\n\r\n                case FULLSTOP:\r\n                    return this.ClassSelector();\r\n\r\n                case ASTERISK:\r\n                case VERTICALLINE:\r\n                    return this.TypeSelector();\r\n\r\n                case NUMBERSIGN:\r\n                    return this.IdSelector();\r\n            }\r\n\r\n            break;\r\n    }\r\n};\r\n\r\nmodule.exports = {\r\n    getNode: getNode\r\n};\r\n","// https://drafts.csswg.org/css-images-4/#element-notation\r\n// https://developer.mozilla.org/en-US/docs/Web/CSS/element\r\nmodule.exports = function() {\r\n    this.scanner.skipSC();\r\n\r\n    var children = this.createSingleNodeList(\r\n        this.IdSelector()\r\n    );\r\n\r\n    this.scanner.skipSC();\r\n\r\n    return children;\r\n};\r\n","var TYPE = require('../../tokenizer').TYPE;\r\nvar rawMode = require('../node/Raw').mode;\r\n\r\nvar COMMA = TYPE.Comma;\r\n\r\n// var( <ident> , <value>? )\r\nmodule.exports = function() {\r\n    var children = this.createList();\r\n\r\n    this.scanner.skipSC();\r\n\r\n    // NOTE: Don't check more than a first argument is an ident, rest checks are for lexer\r\n    children.push(this.Identifier());\r\n\r\n    this.scanner.skipSC();\r\n\r\n    if (this.scanner.tokenType === COMMA) {\r\n        children.push(this.Operator());\r\n        children.push(this.parseCustomProperty\r\n            ? this.Value(null)\r\n            : this.Raw(this.scanner.tokenIndex, rawMode.exclamationMarkOrSemicolon, false)\r\n        );\r\n    }\r\n\r\n    return children;\r\n};\r\n","module.exports = {\r\n    AtrulePrelude: require('./atrulePrelude'),\r\n    Selector: require('./selector'),\r\n    Value: require('./value')\r\n};\r\n","module.exports = {\r\n    getNode: require('./default'),\r\n    '-moz-element': require('../function/element'),\r\n    'element': require('../function/element'),\r\n    'expression': require('../function/expression'),\r\n    'var': require('../function/var')\r\n};\r\n","// legacy IE function\r\n// expression( <any-value> )\r\nmodule.exports = function() {\r\n    return this.createSingleNodeList(\r\n        this.Raw(this.scanner.tokenIndex, null, false)\r\n    );\r\n};\r\n","var TYPE = require('../../tokenizer').TYPE;\r\n\r\nvar STRING = TYPE.String;\r\nvar IDENT = TYPE.Ident;\r\nvar URL = TYPE.Url;\r\nvar FUNCTION = TYPE.Function;\r\nvar LEFTPARENTHESIS = TYPE.LeftParenthesis;\r\n\r\nmodule.exports = {\r\n    parse: {\r\n        prelude: function() {\r\n            var children = this.createList();\r\n\r\n            this.scanner.skipSC();\r\n\r\n            switch (this.scanner.tokenType) {\r\n                case STRING:\r\n                    children.push(this.String());\r\n                    break;\r\n\r\n                case URL:\r\n                case FUNCTION:\r\n                    children.push(this.Url());\r\n                    break;\r\n\r\n                default:\r\n                    this.error('String or url() is expected');\r\n            }\r\n\r\n            if (this.lookupNonWSType(0) === IDENT ||\r\n                this.lookupNonWSType(0) === LEFTPARENTHESIS) {\r\n                children.push(this.WhiteSpace());\r\n                children.push(this.MediaQueryList());\r\n            }\r\n\r\n            return children;\r\n        },\r\n        block: null\r\n    }\r\n};\r\n","var TYPE = require('../../tokenizer').TYPE;\r\n\r\nvar WHITESPACE = TYPE.WhiteSpace;\r\nvar COMMENT = TYPE.Comment;\r\nvar IDENT = TYPE.Ident;\r\nvar FUNCTION = TYPE.Function;\r\nvar COLON = TYPE.Colon;\r\nvar LEFTPARENTHESIS = TYPE.LeftParenthesis;\r\n\r\nfunction consumeRaw() {\r\n    return this.createSingleNodeList(\r\n        this.Raw(this.scanner.tokenIndex, null, false)\r\n    );\r\n}\r\n\r\nfunction parentheses() {\r\n    this.scanner.skipSC();\r\n\r\n    if (this.scanner.tokenType === IDENT &&\r\n        this.lookupNonWSType(1) === COLON) {\r\n        return this.createSingleNodeList(\r\n            this.Declaration()\r\n        );\r\n    }\r\n\r\n    return readSequence.call(this);\r\n}\r\n\r\nfunction readSequence() {\r\n    var children = this.createList();\r\n    var space = null;\r\n    var child;\r\n\r\n    this.scanner.skipSC();\r\n\r\n    scan:\r\n    while (!this.scanner.eof) {\r\n        switch (this.scanner.tokenType) {\r\n            case WHITESPACE:\r\n                space = this.WhiteSpace();\r\n                continue;\r\n\r\n            case COMMENT:\r\n                this.scanner.next();\r\n                continue;\r\n\r\n            case FUNCTION:\r\n                child = this.Function(consumeRaw, this.scope.AtrulePrelude);\r\n                break;\r\n\r\n            case IDENT:\r\n                child = this.Identifier();\r\n                break;\r\n\r\n            case LEFTPARENTHESIS:\r\n                child = this.Parentheses(parentheses, this.scope.AtrulePrelude);\r\n                break;\r\n\r\n            default:\r\n                break scan;\r\n        }\r\n\r\n        if (space !== null) {\r\n            children.push(space);\r\n            space = null;\r\n        }\r\n\r\n        children.push(child);\r\n    }\r\n\r\n    return children;\r\n}\r\n\r\nmodule.exports = {\r\n    parse: {\r\n        prelude: function() {\r\n            var children = readSequence.call(this);\r\n\r\n            if (this.getFirstListNode(children) === null) {\r\n                this.error('Condition is expected');\r\n            }\r\n\r\n            return children;\r\n        },\r\n        block: function() {\r\n            return this.Block(false);\r\n        }\r\n    }\r\n};\r\n","module.exports = {\r\n    parse: function selectorList() {\r\n        return this.createSingleNodeList(\r\n            this.SelectorList()\r\n        );\r\n    }\r\n};\r\n","var ALLOW_OF_CLAUSE = true;\r\n\r\nmodule.exports = {\r\n    parse: function nthWithOfClause() {\r\n        return this.createSingleNodeList(\r\n            this.Nth(ALLOW_OF_CLAUSE)\r\n        );\r\n    }\r\n};\r\n","var DISALLOW_OF_CLAUSE = false;\r\n\r\nmodule.exports = {\r\n    parse: function nth() {\r\n        return this.createSingleNodeList(\r\n            this.Nth(DISALLOW_OF_CLAUSE)\r\n        );\r\n    }\r\n};\r\n","function merge() {\r\n    var dest = {};\r\n\r\n    for (var i = 0; i < arguments.length; i++) {\r\n        var src = arguments[i];\r\n        for (var key in src) {\r\n            dest[key] = src[key];\r\n        }\r\n    }\r\n\r\n    return dest;\r\n}\r\n\r\nmodule.exports = require('./create').create(\r\n    merge(\r\n        require('./config/lexer'),\r\n        require('./config/parser'),\r\n        require('./config/walker')\r\n    )\r\n);\r\n","module.exports = {\r\n    parseContext: {\r\n        default: 'StyleSheet',\r\n        stylesheet: 'StyleSheet',\r\n        atrule: 'Atrule',\r\n        atrulePrelude: function(options) {\r\n            return this.AtrulePrelude(options.atrule ? String(options.atrule) : null);\r\n        },\r\n        mediaQueryList: 'MediaQueryList',\r\n        mediaQuery: 'MediaQuery',\r\n        rule: 'Rule',\r\n        selectorList: 'SelectorList',\r\n        selector: 'Selector',\r\n        block: function() {\r\n            return this.Block(true);\r\n        },\r\n        declarationList: 'DeclarationList',\r\n        declaration: 'Declaration',\r\n        value: 'Value'\r\n    },\r\n    scope: require('../scope'),\r\n    atrule: require('../atrule'),\r\n    pseudo: require('../pseudo'),\r\n    node: require('../node')\r\n};\r\n","module.exports = {\r\n    'font-face': require('./font-face'),\r\n    'import': require('./import'),\r\n    'media': require('./media'),\r\n    'page': require('./page'),\r\n    'supports': require('./supports')\r\n};\r\n","module.exports = {\r\n    parse: {\r\n        prelude: null,\r\n        block: function() {\r\n            return this.Block(true);\r\n        }\r\n    }\r\n};\r\n","module.exports = {\r\n    parse: {\r\n        prelude: function() {\r\n            return this.createSingleNodeList(\r\n                this.MediaQueryList()\r\n            );\r\n        },\r\n        block: function() {\r\n            return this.Block(false);\r\n        }\r\n    }\r\n};\r\n","module.exports = {\r\n    parse: {\r\n        prelude: function() {\r\n            return this.createSingleNodeList(\r\n                this.SelectorList()\r\n            );\r\n        },\r\n        block: function() {\r\n            return this.Block(true);\r\n        }\r\n    }\r\n};\r\n","module.exports = {\r\n    'dir': require('./dir'),\r\n    'has': require('./has'),\r\n    'lang': require('./lang'),\r\n    'matches': require('./matches'),\r\n    'not': require('./not'),\r\n    'nth-child': require('./nth-child'),\r\n    'nth-last-child': require('./nth-last-child'),\r\n    'nth-last-of-type': require('./nth-last-of-type'),\r\n    'nth-of-type': require('./nth-of-type'),\r\n    'slotted': require('./slotted')\r\n};\r\n","module.exports = {\r\n    parse: function() {\r\n        return this.createSingleNodeList(\r\n            this.Identifier()\r\n        );\r\n    }\r\n};\r\n","module.exports = {\r\n    parse: function() {\r\n        return this.createSingleNodeList(\r\n            this.SelectorList()\r\n        );\r\n    }\r\n};\r\n","module.exports = {\r\n    parse: function() {\r\n        return this.createSingleNodeList(\r\n            this.Identifier()\r\n        );\r\n    }\r\n};\r\n","module.exports = require('./common/selectorList');\r\n","module.exports = require('./common/selectorList');\r\n","module.exports = require('./common/nthWithOfClause');\r\n","module.exports = require('./common/nthWithOfClause');\r\n","module.exports = require('./common/nth');\r\n","module.exports = require('./common/nth');\r\n","module.exports = {\r\n    parse: function compoundSelector() {\r\n        return this.createSingleNodeList(\r\n            this.Selector()\r\n        );\r\n    }\r\n};\r\n","module.exports = {\r\n    node: require('../node')\r\n};\r\n","import isNumber from 'lodash.isnumber'\nimport isPlainObject from 'lodash.isplainobject'\nimport isString from 'lodash.isstring'\nimport { parse, walk, lexer } from 'css-tree-animatable'\nimport patch from 'css-tree-animatable/data/patch.json'\nimport mdnProperties from 'mdn-data-animatable/css/properties.json'\nimport mdnSyntaxes from 'mdn-data-animatable/css/syntaxes.json'\nimport nonAnimatable from 'mdn-data-animatable/css/non-animatable.json'\nimport popularIndex from './popularIndex.json'\n\nconst properties = []\nObject.keys(lexer.properties).forEach((key) => {\n  if (!nonAnimatable.includes(key)) {\n    properties.push(key)\n  }\n})\n\nconst isAnimatable = (value, returnCssProperty = false) => {\n  let property = value.toLowerCase().trim()\n  if (property === 'cssoffset') {\n    property = property.substr(3)\n  }\n  if (properties.includes(property)) {\n    return returnCssProperty ? property : true\n  }\n  if (property.includes('-')) {\n    return returnCssProperty ? '' : false\n  }\n  property = property.replace(/-/g, '')\n  for (const prop of properties) {\n    if (property === prop.replace(/-/g, '')) {\n      return returnCssProperty ? prop : true\n    }\n  }\n  return returnCssProperty ? '' : false\n}\n\nconst cssToJs = (value, webAnimationsAPI = true) => {\n  let property = isAnimatable(value, true)\n  if (!property) {\n    return ''\n  }\n  if (webAnimationsAPI) {\n    if (property === 'offset') {\n      property = 'css-' + property\n    }\n  }\n  return property.replace(/-([a-z])/g, (match, letter) => {\n    return letter.toUpperCase()\n  })\n}\n\nconst jsToCss = (value) => {\n  return isAnimatable(value, true)\n}\n\nconst popular = (start = 0, end = 10) => {\n  const popular = []\n  let notInPopular\n  if (end >= popularIndex.length) {\n    notInPopular = properties.filter((property) => !popularIndex.includes(properties.indexOf(property)))\n  }\n  for (let i = start; i < end; i++) {\n    if (popularIndex[i] || popularIndex[i] === 0) {\n      popular.push(properties[popularIndex[i]])\n    } else {\n      const property = notInPopular[i - popularIndex.length]\n      if (!property) {\n        break\n      }\n      popular.push(property)\n    }\n  }\n  return popular\n}\n\nconst syntaxes = { main: '', links: {}, order: [] }\n\nconst getSyntaxes = (syntax) => {\n  const propertyMatches = syntax.match(/<'[a-zA-Z0-9-()]+'>/g)\n  if (Array.isArray(propertyMatches)) {\n    propertyMatches.forEach((key) => {\n      const prop = key.slice(2, -2)\n      const propertySyntax = mdnProperties[prop]\n      syntaxes[key] = propertySyntax.syntax\n      syntaxes.order.push(key)\n      getSyntaxes(propertySyntax.syntax)\n    })\n  }\n  const syntaxMatches = syntax.match(/<[a-zA-Z0-9-()]+>/g)\n  if (Array.isArray(syntaxMatches)) {\n    syntaxMatches.forEach((key) => {\n      const prop = key.slice(1, -1)\n      if (!syntaxes[key]) {\n        const syntaxSyntax = mdnSyntaxes[prop]\n        const patchSyntax = patch.syntaxes[prop]\n        if (syntaxSyntax) {\n          syntaxes[key] = syntaxSyntax.syntax\n          syntaxes.order.push(key)\n          getSyntaxes(syntaxSyntax.syntax)\n        } else if (patchSyntax) {\n          syntaxes[key] = patchSyntax.syntax\n          syntaxes.order.push(key)\n          getSyntaxes(patchSyntax.syntax)\n        } else if (!['url-token', 'any-value', 'function-token', 'hex-color', 'declaration-value', 'hash-token', 'zero'].includes(prop)) {\n          syntaxes.links[key] = 'https://developer.mozilla.org/docs/Web/CSS/' + prop.replace(/flex/, 'flex_value')\n        }\n      }\n    })\n  }\n}\n\nconst syntax = (value) => {\n  for (const member in syntaxes) delete syntaxes[member]\n  syntaxes.main = ''\n  syntaxes.links = {}\n  syntaxes.order = []\n  const property = isAnimatable(value, true)\n  if (property) {\n    const syntax = mdnProperties[property].syntax\n    syntaxes.main = syntax\n    getSyntaxes(syntax)\n  } else {\n    syntaxes.main = `Error: ${value} is not an animatable CSS property.`\n  }\n  return syntaxes\n}\n\nconst validate = (obj, returnError = true) => {\n  const errors = []\n  if (!isPlainObject(obj)) {\n    errors.push({ name: 'TypeError', message: 'Argument is not a plain object.' })\n  } else {\n    for (let [key, value] of Object.entries(obj)) {\n      if (!isString(value) && !isNumber(value)) {\n        errors.push({ name: 'TypeError', message: 'Property value must be a string or a number. ' + typeof value + ' given.' })\n      } else {\n        const property = isAnimatable(key, true)\n        if (!property) {\n          errors.push({ name: 'MatchError', message: key + ' is not an animatable CSS property.' })\n        } else {\n          let ast\n          try {\n            ast = parse(`${property}: ${value}`, {\n              context: 'declaration',\n              onParseError: (error) => {\n                errors.push(error)\n              },\n            })\n            walk(ast, {\n              visit: 'Declaration',\n              enter: function (node) {\n                const error = lexer.matchDeclaration(node).error\n                if (error) {\n                  errors.push(error)\n                }\n              },\n            })\n          } catch (error) {\n            errors.push(error)\n          }\n        }\n      }\n    }\n  }\n  return !errors.length ? true : returnError ? errors[errors.length - 1] : false\n}\n\nconst propertyFormat = (property, format) => {\n  switch (format) {\n    case 'css':\n      property = jsToCss(property)\n      break\n    case 'js':\n      property = cssToJs(property, false)\n      break\n    default:\n      property = cssToJs(property)\n  }\n  return property\n}\n\nconst sanitize = (obj, format = 'waapi') => {\n  format = format.toString().toLowerCase()\n  let sanitized = {}\n  if (Array.isArray(obj)) {\n    sanitized = []\n    obj.forEach((key) => {\n      const property = isAnimatable(key, true)\n      if (property) {\n        sanitized.push(propertyFormat(property, format))\n      }\n    })\n  } else if (isPlainObject(obj)) {\n    for (let [key, value] of Object.entries(obj)) {\n      const object = {}\n      object[key] = value\n      if (validate(object, false)) {\n        sanitized[propertyFormat(key, format)] = value\n      }\n    }\n  } else if (isString(obj)) {\n    switch (format) {\n      case 'css':\n        return jsToCss(obj)\n      case 'js':\n        return cssToJs(obj, false)\n      default:\n        return cssToJs(obj)\n    }\n  }\n  return sanitized\n}\n\nexport default {\n  properties: properties,\n  cssToJs: cssToJs,\n  jsToCss: jsToCss,\n  isAnimatable: isAnimatable,\n  popular: popular,\n  syntax: syntax,\n  validate: validate,\n  sanitize: sanitize,\n}\n","import functions from './functions'\n\nexport default {\n  properties: functions.properties.map((val) => functions.cssToJs(val)),\n  propertiesCSS: functions.properties,\n  propertiesJS: functions.properties.map((val) => functions.cssToJs(val, false)),\n}\n","import arrays from './arrays'\nimport functions from './functions'\n\nexport const properties = arrays.properties\nexport const propertiesCSS = arrays.propertiesCSS\nexport const propertiesJS = arrays.propertiesJS\nexport const cssToJs = functions.cssToJs\nexport const jsToCss = functions.jsToCss\nexport const isAnimatable = functions.isAnimatable\nexport const popular = functions.popular\nexport const syntax = functions.syntax\nexport const validate = functions.validate\nexport const sanitize = functions.sanitize\n"],"names":["objectToString","Object","prototype","toString","value","isObjectLike","call","funcProto","Function","objectProto","funcToString","hasOwnProperty","objectCtorString","getPrototype","func","transform","arg","overArg","getPrototypeOf","result","e","isHostObject","proto","Ctor","constructor","isArray","Array","createItem","data","prev","next","allocateCursor","node","cursor","cursors","releaseCursor","List","this","head","tail","updateCursors","prevOld","prevNew","nextOld","nextNew","getSize","size","fromArray","array","i","length","item","toArray","push","toJSON","isEmpty","first","last","each","fn","context","undefined","forEach","eachRight","forEachRight","nextUntil","start","prevUntil","some","map","appendData","filter","clear","copy","insert","prepend","prependData","append","before","Error","insertData","remove","pop","unshift","shift","prependList","list","insertList","appendList","replace","oldItem","newItemOrList","name","message","error","create","SyntaxError","errorStack","defineProperty","get","stack","sourceFragment","extraLines","processLines","end","lines","slice","line","idx","num","String","maxNumLength","join","source","split","column","startLine","Math","max","endLine","min","cutLeft","substr","match","OFFSET_CORRECTION","MAX_LINE_LENGTH","Boolean","offset","createCustomError","isNaN","parseError","TYPE","EOF","Ident","AtKeyword","Hash","BadString","Url","BadUrl","Delim","Number","Percentage","Dimension","WhiteSpace","CDO","CDC","Colon","Semicolon","Comma","LeftSquareBracket","RightSquareBracket","LeftParenthesis","RightParenthesis","LeftCurlyBracket","RightCurlyBracket","Comment","NAME","keys","reduce","key","isDigit","code","isUppercaseLetter","isLowercaseLetter","isLetter","isNonAscii","isNameStart","isNonPrintable","isNewline","isWhiteSpace","isValidEscape","second","CATEGORY","charCodeCategory","Eof","Digit","NameStart","NonPrintable","isHexDigit","isName","isIdentifierStart","third","isNumberStart","isBOM","charCodeDef","getCharCode","charCodeAt","getNewlineLength","cmpChar","testStr","referenceCode","findDecimalNumberEnd","consumeEscaped","maxOffset","consumeName","consumeNumber","sign","consumeBadUrlRemnants","cmpStr","referenceStr","testCode","findWhiteSpaceStart","findWhiteSpaceEnd","constants","utils","WHITESPACE","COMMENT","TokenStream","offsetAndType","balance","reset","eof","tokenIndex","tokenType","tokenStart","firstCharOffset","tokenEnd","lookupType","tokenCount","lookupOffset","lookupValue","getTokenStart","getRawLength","startToken","mode","balanceEnd","loop","isBalanceEdge","pos","isDelim","getTokenValue","substring","getTokenLength","substrToCursor","skipWS","skipTokenCount","skip","skipSC","dump","type","chunk","noop","generate","decorate","forceBraces","compact","multiplier","combinator","terms","term","explicit","generateSequence","disallowEmpty","comma","opts","generateTypeOpts","options","getLocation","point","loc","referenceName","reference","syntax","matchResult","details","tokens","longestMatch","mismatchOffset","entries","css","fromMatchResult","badNode","rawMessage","keywords","properties","isCustomProperty","str","getVendorPrefix","secondDashIndex","indexOf","keyword","toLowerCase","custom","vendor","freeze","basename","prefix","property","hack","vendorPrefix","SafeUint32Array","Uint32Array","buffer","charCodeDefinitions","tokenize","stream","sourceLength","consumeNumericToken","consumeIdentLikeToken","nameStartOffset","consumeUrlToken","consumeStringToken","endingCodePoint","nextCode","adoptBuffer","balanceCloseType","balanceStart","balancePrev","require$$0","DELIM","IDENT","NUMBER","DIMENSION","token","getNextToken","checkInteger","valueOffset","disallowSign","consumeB","offset_","startsWith","hexSequence","allowDash","hexlen","withQuestionMarkSequence","consumed","tokenizer","cssWideKeywords","calcFunctionNames","charCode","index","eqStr","actual","expected","eqStrAny","isPostfixIeHack","outOfRange","numEnd","consumeFunction","startIdx","calc","expectedTokenType","dimension","numberEnd","reverseSolidusOffset","unit","zero","ident-token","function-token","at-keyword-token","hash-token","string-token","bad-string-token","url-token","bad-url-token","delim-token","number-token","percentage-token","dimension-token","whitespace-token","CDO-token","CDC-token","colon-token","semicolon-token","comma-token","[-token","]-token","(-token",")-token","{-token","}-token","string","ident","custom-ident","custom-property-name","hex-color","id-selector","an-plus-b","urange","consumedHexLength","declaration-value","level","scan","any-value","angle","deg","grad","rad","turn","decibel","db","frequency","hz","khz","flex","fr","px","mm","cm","in","pt","pc","q","em","ex","ch","rem","vh","vw","vmin","vmax","vm","resolution","dpi","dpcm","dppx","x","semitones","st","time","s","ms","percentage","number","integer","-ms-legacy-expression","input","Tokenizer","nextCharCode","nextNonWsCode","findWsEnd","substringToPos","eat","fromCharCode","peek","charAt","NAME_CHAR","createCharMap","test","COMBINATOR_PRECEDENCE"," ","&&","||","|","scanSpaces","scanWord","scanNumber","scanString","readMultiplierRange","maybeMultiplied","range","readMultiplier","maybeToken","readType","readTypeRange","regroupTerms","combinators","createGroup","sort","a","b","subgroupStart","splice","readImplicitGroup","prevToken","prevTokenPos","readKeywordOrFunction","readGroup","readProperty","parse","ensureFunction","enter","leave","walk","tokenStream","astToTokens","decorator","handlers","curNode","len","nodes","children","tmp","prepareTokens","nodesOffset","nodesIndex","currentNode","MATCH","MISMATCH","DISALLOW_EMPTY","createCondition","thenBranch","elseBranch","else","then","isFunctionType","isEnumCapatible","buildMatchGraph","buildGroupMatchGraph","atLeastOneTermMatched","all","thenClause","newGroupTerm","matchTerm","buildMultiplierMatchGraph","syntaxTree","ref","matchGraph","reverseList","areStringsEqualCaseInsensitive","isCommaContextStart","isCommaContextEnd","internalMatch","state","syntaxes","moveToNextToken","nextIndex","stateSnapshotFromSyntax","nextState","matchStack","syntaxStack","thenStack","pushThenStack","pushElseStack","elseStack","addTokenToMatch","syntaxStash","closeSyntax","iterationCount","exitReason","mask","matchFlag","lastTokenIndex","floor","syntaxDict","dictSyntax","keywordName","console","warn","reason","iterations","host","hostStack","getTrace","shouldPutToTrace","matched","hasMatch","matchNode","testNode","trace","isType","isProperty","isKeyword","matchFragments","lexer","ast","fragments","findFragments","getFirstMatchNode","getLastMatchNode","parent","isValidNumber","isFinite","isValidLocation","createNodeStructureChecker","fields","valid","fieldType","processStructure","nodeType","structure","docs","docsTypes","fieldTypes","check","SyntaxReferenceError","MatchError","require$$1","matchAsTree","require$$2","getStructureFromConfig","config","cssWideKeywordsWithExpression","dumpMapSyntax","syntaxAsAst","buildMatchResult","matchSyntax","useCommon","valueHasVar","valueCommonSyntax","Lexer","generic","atrules","types","addType_","addAtrule_","addProperty_","checkStructure","collectWarning","warns","createDescriptor","descriptor","prelude","descriptors","res","matchAtrulePrelude","atruleName","atrule","names","atrulePreludeSyntax","getAtrulePrelude","matchAtruleDescriptor","descriptorName","atruleEntry","atruleDescriptorSyntax","matchDeclaration","matchProperty","propertyName","propertySyntax","getProperty","matchType","typeName","typeSyntax","getType","findValueFragments","search","findDeclarationValueFragments","declaration","findAllFragments","visit","apply","bind","getAtruleDescriptor","declarators","validate","broken","brokenMap","brokenTypes","brokenProperties","pretty","JSON","stringify","require$$3","OffsetToLocation","columns","linesAndColumnsComputed","setSource","startOffset","startColumn","ensureLinesAndColumnsComputed","computeLinesAndColumns","filename","getLocationRange","recognizer","createList","child","space","ignoreWS","ignoreWSAfter","scanner","getNode","FUNCTION","URL","HASH","PERCENTAGE","createParseContext","parser","locationMap","needPositions","onParseError","onParseErrorThrow","parseAtrulePrelude","parseRulePrelude","parseValue","parseCustomProperty","readSequence","sequence","createSingleNodeList","getFirstListNode","getLastListNode","parseWithFallback","consumer","fallback","fallbackNode","lookupNonWSType","consume","consumeFunctionName","getLocationFromList","location","parserConfig","scope","pseudo","parseContext","processConfig","positions","processChildren","delimeter","invokeForType","getWalkersFromStructure","walkers","walker","nullable","walkContext","createTypeIterator","reverse","contextName","useContext","prevContextValue","field","createFastTraveralMap","iterators","Atrule","StyleSheet","Rule","Block","Declaration","DeclarationList","getTypesFromConfig","iteratorsNatural","iteratorsReverse","fastTraversalIteratorsNatural","fastTraversalIteratorsReverse","root","stylesheet","atrulePrelude","rule","selector","block","function","walkNode","find","found","findLast","findAll","clone","shape","isObject","assign","extend","dest","src","mix","innerShape","k","createSyntax","createParser","createWalker","processNode","createGenerator","convert","fromPlainObject","toPlainObject","createConvertor","definitionSyntax","createLexer","fork","extension","base","buildDictionary","dict","patchDict","mdnSyntaxes","patch","trim","preprocessAtrules","mdnAtrules","mdnProperties","checkTokenIsInteger","expectCharCode","msg","getOffsetExcludeWS","excludeWhiteSpace","endOffset","default","leftCurlyBracket","leftCurlyBracketOrSemicolon","exclamationMarkOrSemicolon","semicolonIncluded","rawMode","ATKEYWORD","SEMICOLON","LEFTCURLYBRACKET","RIGHTCURLYBRACKET","consumeRaw","Raw","isDeclarationBlockAtrule","nameLowerCase","AtrulePrelude","STRING","COLON","LEFTSQUAREBRACKET","RIGHTSQUAREBRACKET","getAttributeName","expectIdent","checkColon","getOperator","matcher","flags","Identifier","flagsPrefix","consumeRule","consumeRawDeclaration","consumeDeclaration","isDeclaration","consumeValueRaw","consumeCustomPropertyRaw","consumeValue","startValueToken","Value","important","customProperty","getImportant","RIGHTPARENTHESIS","LEFTPARENTHESIS","Ratio","MediaFeature","COMMA","relative","MediaQuery","left","right","consumePrelude","SelectorList","Selector","eatIdentifierOrAsterisk","eatHexSequence","eatQuestionMarkSequence","count","scanUnicodeRange","hexLength","rawStart","rawEnd","SPACE","AnPlusB","AttributeSelector","require$$4","Brackets","require$$5","require$$6","require$$7","ClassSelector","require$$8","Combinator","require$$9","require$$10","require$$11","require$$12","require$$13","require$$14","HexColor","require$$15","require$$16","IdSelector","require$$17","require$$18","require$$19","MediaQueryList","require$$20","Nth","nth","allowOfClause","query","require$$22","Operator","require$$23","Parentheses","require$$24","require$$25","PseudoClassSelector","require$$26","PseudoElementSelector","require$$27","require$$28","require$$29","require$$30","require$$32","require$$33","require$$34","TypeSelector","require$$35","UnicodeRange","require$$36","require$$37","-moz-element","element","expression","var","parentheses","arguments","merge","mediaQueryList","mediaQuery","selectorList","declarationList","font-face","import","media","page","supports","dir","has","lang","matches","not","nth-child","nth-last-child","nth-last-of-type","nth-of-type","slotted","nonAnimatable","includes","isAnimatable","returnCssProperty","prop","cssToJs","webAnimationsAPI","letter","toUpperCase","jsToCss","main","links","order","getSyntaxes","propertyMatches","syntaxMatches","syntaxSyntax","patchSyntax","obj","returnError","errors","isPlainObject","isString","isNumber","propertyFormat","format","popular","notInPopular","popularIndex","member","sanitize","sanitized","object","functions","val","propertiesCSS","propertiesJS","arrays"],"mappings":"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"}